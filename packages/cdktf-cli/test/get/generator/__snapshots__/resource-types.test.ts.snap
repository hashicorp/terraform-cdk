// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate a cloudfront distribution resource 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface CloudfrontDistributionConfig extends cdktf.TerraformMetaArguments {
  readonly aliases?: cdktf.TerraformStringSet;
  readonly comment?: cdktf.TerraformString;
  readonly defaultRootObject?: cdktf.TerraformString;
  readonly enabled: cdktf.TerraformBoolean;
  readonly httpVersion?: cdktf.TerraformString;
  readonly isIpv6Enabled?: cdktf.TerraformBoolean;
  readonly priceClass?: cdktf.TerraformString;
  readonly retainOnDelete?: cdktf.TerraformBoolean;
  readonly tags?: cdktf.TerraformStringMap;
  readonly waitForDeployment?: cdktf.TerraformBoolean;
  readonly webAclId?: cdktf.TerraformString;
  /** cache_behavior block */
  readonly cacheBehavior?: TerraformCloudfrontDistributionCacheBehaviorSet;
  /** custom_error_response block */
  readonly customErrorResponse?: TerraformCloudfrontDistributionCustomErrorResponseSet;
  /** default_cache_behavior block */
  readonly defaultCacheBehavior: TerraformCloudfrontDistributionDefaultCacheBehaviorList;
  /** logging_config block */
  readonly loggingConfig?: TerraformCloudfrontDistributionLoggingConfigList;
  /** ordered_cache_behavior block */
  readonly orderedCacheBehavior?: TerraformCloudfrontDistributionOrderedCacheBehaviorList;
  /** origin block */
  readonly origin: TerraformCloudfrontDistributionOriginSet;
  /** origin_group block */
  readonly originGroup?: TerraformCloudfrontDistributionOriginGroupSet;
  /** restrictions block */
  readonly restrictions: TerraformCloudfrontDistributionRestrictionsList;
  /** viewer_certificate block */
  readonly viewerCertificate: TerraformCloudfrontDistributionViewerCertificateList;
}
export interface CloudfrontDistributionCacheBehaviorForwardedValuesCookies {
  readonly forward: cdktf.TerraformString;
  readonly whitelistedNames?: cdktf.TerraformStringSet;
}

function cloudfrontDistributionCacheBehaviorForwardedValuesCookiesToTerraform(struct?: CloudfrontDistributionCacheBehaviorForwardedValuesCookies): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    forward: struct!.forward instanceof cdktf.TerraformAttribute ? struct!.forward.toTerraform() : cdktf.stringToTerraform(struct!.forward),
    whitelisted_names: struct!.whitelistedNames instanceof cdktf.TerraformAttribute ? struct!.whitelistedNames.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.whitelistedNames),
  }
}

export class TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCacheBehaviorForwardedValuesCookies, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCacheBehaviorForwardedValuesCookies | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookies | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesAttribute)) {
      return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionCacheBehaviorForwardedValuesCookiesToTerraform(this.internalValue);
  }


  // forward - computed: false, optional: false, required: true
  public get forward() {
    return cdktf.TerraformStringAttribute.construct(this, 'forward', this.internalValue?.forward);
  }

  // whitelisted_names - computed: false, optional: true, required: false
  public get whitelistedNames() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'whitelisted_names', this.internalValue?.whitelistedNames);
  }
}

export type TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookies = CloudfrontDistributionCacheBehaviorForwardedValuesCookies | TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesAttribute;

export class TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCacheBehaviorForwardedValuesCookies[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCacheBehaviorForwardedValuesCookies[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesSet | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesSetAttribute)) {
      return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(cloudfrontDistributionCacheBehaviorForwardedValuesCookiesToTerraform)(this.internalValue);
  }

  public toList(): TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesListAttribute {
    return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesSet = CloudfrontDistributionCacheBehaviorForwardedValuesCookies[] | TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesSetAttribute;

export class TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCacheBehaviorForwardedValuesCookies[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCacheBehaviorForwardedValuesCookies[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesListAttribute)) {
      return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionCacheBehaviorForwardedValuesCookiesToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesAttribute {
    return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesList = CloudfrontDistributionCacheBehaviorForwardedValuesCookies[] | TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesListAttribute;

export interface CloudfrontDistributionCacheBehaviorForwardedValues {
  readonly headers?: cdktf.TerraformStringSet;
  readonly queryString: cdktf.TerraformBoolean;
  readonly queryStringCacheKeys?: cdktf.TerraformStringList;
  /** cookies block */
  readonly cookies: TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesSet;
}

function cloudfrontDistributionCacheBehaviorForwardedValuesToTerraform(struct?: CloudfrontDistributionCacheBehaviorForwardedValues): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    headers: struct!.headers instanceof cdktf.TerraformAttribute ? struct!.headers.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.headers),
    query_string: struct!.queryString instanceof cdktf.TerraformAttribute ? struct!.queryString.toTerraform() : cdktf.booleanToTerraform(struct!.queryString),
    query_string_cache_keys: struct!.queryStringCacheKeys instanceof cdktf.TerraformAttribute ? struct!.queryStringCacheKeys.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.queryStringCacheKeys),
    cookies: struct!.cookies instanceof cdktf.TerraformAttribute ? struct!.cookies.toTerraform() : cdktf.setMapper(cloudfrontDistributionCacheBehaviorForwardedValuesCookiesToTerraform)(struct!.cookies),
  }
}

export class TerraformCloudfrontDistributionCacheBehaviorForwardedValuesAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCacheBehaviorForwardedValues, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCacheBehaviorForwardedValues | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCacheBehaviorForwardedValues | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCacheBehaviorForwardedValuesAttribute)) {
      return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionCacheBehaviorForwardedValuesToTerraform(this.internalValue);
  }


  // headers - computed: false, optional: true, required: false
  public get headers() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'headers', this.internalValue?.headers);
  }

  // query_string - computed: false, optional: false, required: true
  public get queryString() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'query_string', this.internalValue?.queryString);
  }

  // query_string_cache_keys - computed: false, optional: true, required: false
  public get queryStringCacheKeys() {
    return cdktf.TerraformStringListAttribute.construct(this, 'query_string_cache_keys', this.internalValue?.queryStringCacheKeys);
  }

  // cookies - computed: false, optional: false, required: true
  public get cookies() {
    return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesSetAttribute(this, 'cookies');
  }
}

export type TerraformCloudfrontDistributionCacheBehaviorForwardedValues = CloudfrontDistributionCacheBehaviorForwardedValues | TerraformCloudfrontDistributionCacheBehaviorForwardedValuesAttribute;

export class TerraformCloudfrontDistributionCacheBehaviorForwardedValuesSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCacheBehaviorForwardedValues[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCacheBehaviorForwardedValues[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCacheBehaviorForwardedValuesSet | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCacheBehaviorForwardedValuesSetAttribute)) {
      return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(cloudfrontDistributionCacheBehaviorForwardedValuesToTerraform)(this.internalValue);
  }

  public toList(): TerraformCloudfrontDistributionCacheBehaviorForwardedValuesListAttribute {
    return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformCloudfrontDistributionCacheBehaviorForwardedValuesSet = CloudfrontDistributionCacheBehaviorForwardedValues[] | TerraformCloudfrontDistributionCacheBehaviorForwardedValuesSetAttribute;

export class TerraformCloudfrontDistributionCacheBehaviorForwardedValuesListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCacheBehaviorForwardedValues[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCacheBehaviorForwardedValues[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCacheBehaviorForwardedValuesList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCacheBehaviorForwardedValuesListAttribute)) {
      return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionCacheBehaviorForwardedValuesToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionCacheBehaviorForwardedValuesAttribute {
    return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionCacheBehaviorForwardedValuesList = CloudfrontDistributionCacheBehaviorForwardedValues[] | TerraformCloudfrontDistributionCacheBehaviorForwardedValuesListAttribute;

export interface CloudfrontDistributionCacheBehaviorLambdaFunctionAssociation {
  readonly eventType: cdktf.TerraformString;
  readonly includeBody?: cdktf.TerraformBoolean;
  readonly lambdaArn: cdktf.TerraformString;
}

function cloudfrontDistributionCacheBehaviorLambdaFunctionAssociationToTerraform(struct?: CloudfrontDistributionCacheBehaviorLambdaFunctionAssociation): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    event_type: struct!.eventType instanceof cdktf.TerraformAttribute ? struct!.eventType.toTerraform() : cdktf.stringToTerraform(struct!.eventType),
    include_body: struct!.includeBody instanceof cdktf.TerraformAttribute ? struct!.includeBody.toTerraform() : cdktf.booleanToTerraform(struct!.includeBody),
    lambda_arn: struct!.lambdaArn instanceof cdktf.TerraformAttribute ? struct!.lambdaArn.toTerraform() : cdktf.stringToTerraform(struct!.lambdaArn),
  }
}

export class TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCacheBehaviorLambdaFunctionAssociation, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCacheBehaviorLambdaFunctionAssociation | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociation | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationAttribute)) {
      return new TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionCacheBehaviorLambdaFunctionAssociationToTerraform(this.internalValue);
  }


  // event_type - computed: false, optional: false, required: true
  public get eventType() {
    return cdktf.TerraformStringAttribute.construct(this, 'event_type', this.internalValue?.eventType);
  }

  // include_body - computed: false, optional: true, required: false
  public get includeBody() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'include_body', this.internalValue?.includeBody);
  }

  // lambda_arn - computed: false, optional: false, required: true
  public get lambdaArn() {
    return cdktf.TerraformStringAttribute.construct(this, 'lambda_arn', this.internalValue?.lambdaArn);
  }
}

export type TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociation = CloudfrontDistributionCacheBehaviorLambdaFunctionAssociation | TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationAttribute;

export class TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCacheBehaviorLambdaFunctionAssociation[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCacheBehaviorLambdaFunctionAssociation[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationSet | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationSetAttribute)) {
      return new TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(cloudfrontDistributionCacheBehaviorLambdaFunctionAssociationToTerraform)(this.internalValue);
  }

  public toList(): TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationListAttribute {
    return new TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationSet = CloudfrontDistributionCacheBehaviorLambdaFunctionAssociation[] | TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationSetAttribute;

export class TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCacheBehaviorLambdaFunctionAssociation[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCacheBehaviorLambdaFunctionAssociation[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationListAttribute)) {
      return new TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionCacheBehaviorLambdaFunctionAssociationToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationAttribute {
    return new TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationList = CloudfrontDistributionCacheBehaviorLambdaFunctionAssociation[] | TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationListAttribute;

export interface CloudfrontDistributionCacheBehavior {
  readonly allowedMethods: cdktf.TerraformStringList;
  readonly cachedMethods: cdktf.TerraformStringList;
  readonly compress?: cdktf.TerraformBoolean;
  readonly defaultTtl?: cdktf.TerraformNumber;
  readonly fieldLevelEncryptionId?: cdktf.TerraformString;
  readonly maxTtl?: cdktf.TerraformNumber;
  readonly minTtl?: cdktf.TerraformNumber;
  readonly pathPattern: cdktf.TerraformString;
  readonly smoothStreaming?: cdktf.TerraformBoolean;
  readonly targetOriginId: cdktf.TerraformString;
  readonly trustedSigners?: cdktf.TerraformStringList;
  readonly viewerProtocolPolicy: cdktf.TerraformString;
  /** forwarded_values block */
  readonly forwardedValues: TerraformCloudfrontDistributionCacheBehaviorForwardedValuesSet;
  /** lambda_function_association block */
  readonly lambdaFunctionAssociation?: TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationSet;
}

function cloudfrontDistributionCacheBehaviorToTerraform(struct?: CloudfrontDistributionCacheBehavior): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    allowed_methods: struct!.allowedMethods instanceof cdktf.TerraformAttribute ? struct!.allowedMethods.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.allowedMethods),
    cached_methods: struct!.cachedMethods instanceof cdktf.TerraformAttribute ? struct!.cachedMethods.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.cachedMethods),
    compress: struct!.compress instanceof cdktf.TerraformAttribute ? struct!.compress.toTerraform() : cdktf.booleanToTerraform(struct!.compress),
    default_ttl: struct!.defaultTtl instanceof cdktf.TerraformAttribute ? struct!.defaultTtl.toTerraform() : cdktf.numberToTerraform(struct!.defaultTtl),
    field_level_encryption_id: struct!.fieldLevelEncryptionId instanceof cdktf.TerraformAttribute ? struct!.fieldLevelEncryptionId.toTerraform() : cdktf.stringToTerraform(struct!.fieldLevelEncryptionId),
    max_ttl: struct!.maxTtl instanceof cdktf.TerraformAttribute ? struct!.maxTtl.toTerraform() : cdktf.numberToTerraform(struct!.maxTtl),
    min_ttl: struct!.minTtl instanceof cdktf.TerraformAttribute ? struct!.minTtl.toTerraform() : cdktf.numberToTerraform(struct!.minTtl),
    path_pattern: struct!.pathPattern instanceof cdktf.TerraformAttribute ? struct!.pathPattern.toTerraform() : cdktf.stringToTerraform(struct!.pathPattern),
    smooth_streaming: struct!.smoothStreaming instanceof cdktf.TerraformAttribute ? struct!.smoothStreaming.toTerraform() : cdktf.booleanToTerraform(struct!.smoothStreaming),
    target_origin_id: struct!.targetOriginId instanceof cdktf.TerraformAttribute ? struct!.targetOriginId.toTerraform() : cdktf.stringToTerraform(struct!.targetOriginId),
    trusted_signers: struct!.trustedSigners instanceof cdktf.TerraformAttribute ? struct!.trustedSigners.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.trustedSigners),
    viewer_protocol_policy: struct!.viewerProtocolPolicy instanceof cdktf.TerraformAttribute ? struct!.viewerProtocolPolicy.toTerraform() : cdktf.stringToTerraform(struct!.viewerProtocolPolicy),
    forwarded_values: struct!.forwardedValues instanceof cdktf.TerraformAttribute ? struct!.forwardedValues.toTerraform() : cdktf.setMapper(cloudfrontDistributionCacheBehaviorForwardedValuesToTerraform)(struct!.forwardedValues),
    lambda_function_association: struct!.lambdaFunctionAssociation instanceof cdktf.TerraformAttribute ? struct!.lambdaFunctionAssociation.toTerraform() : cdktf.setMapper(cloudfrontDistributionCacheBehaviorLambdaFunctionAssociationToTerraform)(struct!.lambdaFunctionAssociation),
  }
}

export class TerraformCloudfrontDistributionCacheBehaviorAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCacheBehavior, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCacheBehavior | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCacheBehavior | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCacheBehaviorAttribute)) {
      return new TerraformCloudfrontDistributionCacheBehaviorAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCacheBehaviorAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionCacheBehaviorToTerraform(this.internalValue);
  }


  // allowed_methods - computed: false, optional: false, required: true
  public get allowedMethods() {
    return cdktf.TerraformStringListAttribute.construct(this, 'allowed_methods', this.internalValue?.allowedMethods);
  }

  // cached_methods - computed: false, optional: false, required: true
  public get cachedMethods() {
    return cdktf.TerraformStringListAttribute.construct(this, 'cached_methods', this.internalValue?.cachedMethods);
  }

  // compress - computed: false, optional: true, required: false
  public get compress() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'compress', this.internalValue?.compress);
  }

  // default_ttl - computed: false, optional: true, required: false
  public get defaultTtl() {
    return cdktf.TerraformNumberAttribute.construct(this, 'default_ttl', this.internalValue?.defaultTtl);
  }

  // field_level_encryption_id - computed: false, optional: true, required: false
  public get fieldLevelEncryptionId() {
    return cdktf.TerraformStringAttribute.construct(this, 'field_level_encryption_id', this.internalValue?.fieldLevelEncryptionId);
  }

  // max_ttl - computed: false, optional: true, required: false
  public get maxTtl() {
    return cdktf.TerraformNumberAttribute.construct(this, 'max_ttl', this.internalValue?.maxTtl);
  }

  // min_ttl - computed: false, optional: true, required: false
  public get minTtl() {
    return cdktf.TerraformNumberAttribute.construct(this, 'min_ttl', this.internalValue?.minTtl);
  }

  // path_pattern - computed: false, optional: false, required: true
  public get pathPattern() {
    return cdktf.TerraformStringAttribute.construct(this, 'path_pattern', this.internalValue?.pathPattern);
  }

  // smooth_streaming - computed: false, optional: true, required: false
  public get smoothStreaming() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'smooth_streaming', this.internalValue?.smoothStreaming);
  }

  // target_origin_id - computed: false, optional: false, required: true
  public get targetOriginId() {
    return cdktf.TerraformStringAttribute.construct(this, 'target_origin_id', this.internalValue?.targetOriginId);
  }

  // trusted_signers - computed: false, optional: true, required: false
  public get trustedSigners() {
    return cdktf.TerraformStringListAttribute.construct(this, 'trusted_signers', this.internalValue?.trustedSigners);
  }

  // viewer_protocol_policy - computed: false, optional: false, required: true
  public get viewerProtocolPolicy() {
    return cdktf.TerraformStringAttribute.construct(this, 'viewer_protocol_policy', this.internalValue?.viewerProtocolPolicy);
  }

  // forwarded_values - computed: false, optional: false, required: true
  public get forwardedValues() {
    return new TerraformCloudfrontDistributionCacheBehaviorForwardedValuesSetAttribute(this, 'forwarded_values');
  }

  // lambda_function_association - computed: false, optional: true, required: false
  public get lambdaFunctionAssociation() {
    return new TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationSetAttribute(this, 'lambda_function_association');
  }
}

export type TerraformCloudfrontDistributionCacheBehavior = CloudfrontDistributionCacheBehavior | TerraformCloudfrontDistributionCacheBehaviorAttribute;

export class TerraformCloudfrontDistributionCacheBehaviorSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCacheBehavior[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCacheBehavior[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCacheBehaviorSet | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCacheBehaviorSetAttribute)) {
      return new TerraformCloudfrontDistributionCacheBehaviorSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCacheBehaviorSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(cloudfrontDistributionCacheBehaviorToTerraform)(this.internalValue);
  }

  public toList(): TerraformCloudfrontDistributionCacheBehaviorListAttribute {
    return new TerraformCloudfrontDistributionCacheBehaviorListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformCloudfrontDistributionCacheBehaviorSet = CloudfrontDistributionCacheBehavior[] | TerraformCloudfrontDistributionCacheBehaviorSetAttribute;

export class TerraformCloudfrontDistributionCacheBehaviorListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCacheBehavior[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCacheBehavior[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCacheBehaviorList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCacheBehaviorListAttribute)) {
      return new TerraformCloudfrontDistributionCacheBehaviorListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCacheBehaviorListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionCacheBehaviorToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionCacheBehaviorAttribute {
    return new TerraformCloudfrontDistributionCacheBehaviorAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionCacheBehaviorList = CloudfrontDistributionCacheBehavior[] | TerraformCloudfrontDistributionCacheBehaviorListAttribute;

export interface CloudfrontDistributionCustomErrorResponse {
  readonly errorCachingMinTtl?: cdktf.TerraformNumber;
  readonly errorCode: cdktf.TerraformNumber;
  readonly responseCode?: cdktf.TerraformNumber;
  readonly responsePagePath?: cdktf.TerraformString;
}

function cloudfrontDistributionCustomErrorResponseToTerraform(struct?: CloudfrontDistributionCustomErrorResponse): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    error_caching_min_ttl: struct!.errorCachingMinTtl instanceof cdktf.TerraformAttribute ? struct!.errorCachingMinTtl.toTerraform() : cdktf.numberToTerraform(struct!.errorCachingMinTtl),
    error_code: struct!.errorCode instanceof cdktf.TerraformAttribute ? struct!.errorCode.toTerraform() : cdktf.numberToTerraform(struct!.errorCode),
    response_code: struct!.responseCode instanceof cdktf.TerraformAttribute ? struct!.responseCode.toTerraform() : cdktf.numberToTerraform(struct!.responseCode),
    response_page_path: struct!.responsePagePath instanceof cdktf.TerraformAttribute ? struct!.responsePagePath.toTerraform() : cdktf.stringToTerraform(struct!.responsePagePath),
  }
}

export class TerraformCloudfrontDistributionCustomErrorResponseAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCustomErrorResponse, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCustomErrorResponse | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCustomErrorResponse | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCustomErrorResponseAttribute)) {
      return new TerraformCloudfrontDistributionCustomErrorResponseAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCustomErrorResponseAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionCustomErrorResponseToTerraform(this.internalValue);
  }


  // error_caching_min_ttl - computed: false, optional: true, required: false
  public get errorCachingMinTtl() {
    return cdktf.TerraformNumberAttribute.construct(this, 'error_caching_min_ttl', this.internalValue?.errorCachingMinTtl);
  }

  // error_code - computed: false, optional: false, required: true
  public get errorCode() {
    return cdktf.TerraformNumberAttribute.construct(this, 'error_code', this.internalValue?.errorCode);
  }

  // response_code - computed: false, optional: true, required: false
  public get responseCode() {
    return cdktf.TerraformNumberAttribute.construct(this, 'response_code', this.internalValue?.responseCode);
  }

  // response_page_path - computed: false, optional: true, required: false
  public get responsePagePath() {
    return cdktf.TerraformStringAttribute.construct(this, 'response_page_path', this.internalValue?.responsePagePath);
  }
}

export type TerraformCloudfrontDistributionCustomErrorResponse = CloudfrontDistributionCustomErrorResponse | TerraformCloudfrontDistributionCustomErrorResponseAttribute;

export class TerraformCloudfrontDistributionCustomErrorResponseSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCustomErrorResponse[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCustomErrorResponse[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCustomErrorResponseSet | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCustomErrorResponseSetAttribute)) {
      return new TerraformCloudfrontDistributionCustomErrorResponseSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCustomErrorResponseSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(cloudfrontDistributionCustomErrorResponseToTerraform)(this.internalValue);
  }

  public toList(): TerraformCloudfrontDistributionCustomErrorResponseListAttribute {
    return new TerraformCloudfrontDistributionCustomErrorResponseListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformCloudfrontDistributionCustomErrorResponseSet = CloudfrontDistributionCustomErrorResponse[] | TerraformCloudfrontDistributionCustomErrorResponseSetAttribute;

export class TerraformCloudfrontDistributionCustomErrorResponseListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionCustomErrorResponse[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionCustomErrorResponse[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionCustomErrorResponseList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionCustomErrorResponseListAttribute)) {
      return new TerraformCloudfrontDistributionCustomErrorResponseListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionCustomErrorResponseListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionCustomErrorResponseToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionCustomErrorResponseAttribute {
    return new TerraformCloudfrontDistributionCustomErrorResponseAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionCustomErrorResponseList = CloudfrontDistributionCustomErrorResponse[] | TerraformCloudfrontDistributionCustomErrorResponseListAttribute;

export interface CloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookies {
  readonly forward: cdktf.TerraformString;
  readonly whitelistedNames?: cdktf.TerraformStringSet;
}

function cloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesToTerraform(struct?: CloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookies): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    forward: struct!.forward instanceof cdktf.TerraformAttribute ? struct!.forward.toTerraform() : cdktf.stringToTerraform(struct!.forward),
    whitelisted_names: struct!.whitelistedNames instanceof cdktf.TerraformAttribute ? struct!.whitelistedNames.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.whitelistedNames),
  }
}

export class TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookies, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookies | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookies | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesAttribute)) {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesToTerraform(this.internalValue);
  }


  // forward - computed: false, optional: false, required: true
  public get forward() {
    return cdktf.TerraformStringAttribute.construct(this, 'forward', this.internalValue?.forward);
  }

  // whitelisted_names - computed: false, optional: true, required: false
  public get whitelistedNames() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'whitelisted_names', this.internalValue?.whitelistedNames);
  }
}

export type TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookies = CloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookies | TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesAttribute;

export class TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookies[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookies[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesListAttribute)) {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesAttribute {
    return new TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesList = CloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookies[] | TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesListAttribute;

export interface CloudfrontDistributionDefaultCacheBehaviorForwardedValues {
  readonly headers?: cdktf.TerraformStringSet;
  readonly queryString: cdktf.TerraformBoolean;
  readonly queryStringCacheKeys?: cdktf.TerraformStringList;
  /** cookies block */
  readonly cookies: TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesList;
}

function cloudfrontDistributionDefaultCacheBehaviorForwardedValuesToTerraform(struct?: CloudfrontDistributionDefaultCacheBehaviorForwardedValues): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    headers: struct!.headers instanceof cdktf.TerraformAttribute ? struct!.headers.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.headers),
    query_string: struct!.queryString instanceof cdktf.TerraformAttribute ? struct!.queryString.toTerraform() : cdktf.booleanToTerraform(struct!.queryString),
    query_string_cache_keys: struct!.queryStringCacheKeys instanceof cdktf.TerraformAttribute ? struct!.queryStringCacheKeys.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.queryStringCacheKeys),
    cookies: struct!.cookies instanceof cdktf.TerraformAttribute ? struct!.cookies.toTerraform() : cdktf.listMapper(cloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesToTerraform)(struct!.cookies),
  }
}

export class TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionDefaultCacheBehaviorForwardedValues, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionDefaultCacheBehaviorForwardedValues | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValues | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesAttribute)) {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionDefaultCacheBehaviorForwardedValuesToTerraform(this.internalValue);
  }


  // headers - computed: false, optional: true, required: false
  public get headers() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'headers', this.internalValue?.headers);
  }

  // query_string - computed: false, optional: false, required: true
  public get queryString() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'query_string', this.internalValue?.queryString);
  }

  // query_string_cache_keys - computed: false, optional: true, required: false
  public get queryStringCacheKeys() {
    return cdktf.TerraformStringListAttribute.construct(this, 'query_string_cache_keys', this.internalValue?.queryStringCacheKeys);
  }

  // cookies - computed: false, optional: false, required: true
  public get cookies() {
    return new TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesListAttribute(this, 'cookies');
  }
}

export type TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValues = CloudfrontDistributionDefaultCacheBehaviorForwardedValues | TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesAttribute;

export class TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionDefaultCacheBehaviorForwardedValues[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionDefaultCacheBehaviorForwardedValues[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesListAttribute)) {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionDefaultCacheBehaviorForwardedValuesToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesAttribute {
    return new TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesList = CloudfrontDistributionDefaultCacheBehaviorForwardedValues[] | TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesListAttribute;

export interface CloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation {
  readonly eventType: cdktf.TerraformString;
  readonly includeBody?: cdktf.TerraformBoolean;
  readonly lambdaArn: cdktf.TerraformString;
}

function cloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationToTerraform(struct?: CloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    event_type: struct!.eventType instanceof cdktf.TerraformAttribute ? struct!.eventType.toTerraform() : cdktf.stringToTerraform(struct!.eventType),
    include_body: struct!.includeBody instanceof cdktf.TerraformAttribute ? struct!.includeBody.toTerraform() : cdktf.booleanToTerraform(struct!.includeBody),
    lambda_arn: struct!.lambdaArn instanceof cdktf.TerraformAttribute ? struct!.lambdaArn.toTerraform() : cdktf.stringToTerraform(struct!.lambdaArn),
  }
}

export class TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationAttribute)) {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationToTerraform(this.internalValue);
  }


  // event_type - computed: false, optional: false, required: true
  public get eventType() {
    return cdktf.TerraformStringAttribute.construct(this, 'event_type', this.internalValue?.eventType);
  }

  // include_body - computed: false, optional: true, required: false
  public get includeBody() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'include_body', this.internalValue?.includeBody);
  }

  // lambda_arn - computed: false, optional: false, required: true
  public get lambdaArn() {
    return cdktf.TerraformStringAttribute.construct(this, 'lambda_arn', this.internalValue?.lambdaArn);
  }
}

export type TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation = CloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation | TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationAttribute;

export class TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationSet | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationSetAttribute)) {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(cloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationToTerraform)(this.internalValue);
  }

  public toList(): TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationListAttribute {
    return new TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationSet = CloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation[] | TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationSetAttribute;

export class TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationListAttribute)) {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationAttribute {
    return new TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationList = CloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation[] | TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationListAttribute;

export interface CloudfrontDistributionDefaultCacheBehavior {
  readonly allowedMethods: cdktf.TerraformStringSet;
  readonly cachedMethods: cdktf.TerraformStringSet;
  readonly compress?: cdktf.TerraformBoolean;
  readonly defaultTtl?: cdktf.TerraformNumber;
  readonly fieldLevelEncryptionId?: cdktf.TerraformString;
  readonly maxTtl?: cdktf.TerraformNumber;
  readonly minTtl?: cdktf.TerraformNumber;
  readonly smoothStreaming?: cdktf.TerraformBoolean;
  readonly targetOriginId: cdktf.TerraformString;
  readonly trustedSigners?: cdktf.TerraformStringList;
  readonly viewerProtocolPolicy: cdktf.TerraformString;
  /** forwarded_values block */
  readonly forwardedValues: TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesList;
  /** lambda_function_association block */
  readonly lambdaFunctionAssociation?: TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationSet;
}

function cloudfrontDistributionDefaultCacheBehaviorToTerraform(struct?: CloudfrontDistributionDefaultCacheBehavior): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    allowed_methods: struct!.allowedMethods instanceof cdktf.TerraformAttribute ? struct!.allowedMethods.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.allowedMethods),
    cached_methods: struct!.cachedMethods instanceof cdktf.TerraformAttribute ? struct!.cachedMethods.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.cachedMethods),
    compress: struct!.compress instanceof cdktf.TerraformAttribute ? struct!.compress.toTerraform() : cdktf.booleanToTerraform(struct!.compress),
    default_ttl: struct!.defaultTtl instanceof cdktf.TerraformAttribute ? struct!.defaultTtl.toTerraform() : cdktf.numberToTerraform(struct!.defaultTtl),
    field_level_encryption_id: struct!.fieldLevelEncryptionId instanceof cdktf.TerraformAttribute ? struct!.fieldLevelEncryptionId.toTerraform() : cdktf.stringToTerraform(struct!.fieldLevelEncryptionId),
    max_ttl: struct!.maxTtl instanceof cdktf.TerraformAttribute ? struct!.maxTtl.toTerraform() : cdktf.numberToTerraform(struct!.maxTtl),
    min_ttl: struct!.minTtl instanceof cdktf.TerraformAttribute ? struct!.minTtl.toTerraform() : cdktf.numberToTerraform(struct!.minTtl),
    smooth_streaming: struct!.smoothStreaming instanceof cdktf.TerraformAttribute ? struct!.smoothStreaming.toTerraform() : cdktf.booleanToTerraform(struct!.smoothStreaming),
    target_origin_id: struct!.targetOriginId instanceof cdktf.TerraformAttribute ? struct!.targetOriginId.toTerraform() : cdktf.stringToTerraform(struct!.targetOriginId),
    trusted_signers: struct!.trustedSigners instanceof cdktf.TerraformAttribute ? struct!.trustedSigners.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.trustedSigners),
    viewer_protocol_policy: struct!.viewerProtocolPolicy instanceof cdktf.TerraformAttribute ? struct!.viewerProtocolPolicy.toTerraform() : cdktf.stringToTerraform(struct!.viewerProtocolPolicy),
    forwarded_values: struct!.forwardedValues instanceof cdktf.TerraformAttribute ? struct!.forwardedValues.toTerraform() : cdktf.listMapper(cloudfrontDistributionDefaultCacheBehaviorForwardedValuesToTerraform)(struct!.forwardedValues),
    lambda_function_association: struct!.lambdaFunctionAssociation instanceof cdktf.TerraformAttribute ? struct!.lambdaFunctionAssociation.toTerraform() : cdktf.setMapper(cloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationToTerraform)(struct!.lambdaFunctionAssociation),
  }
}

export class TerraformCloudfrontDistributionDefaultCacheBehaviorAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionDefaultCacheBehavior, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionDefaultCacheBehavior | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionDefaultCacheBehavior | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionDefaultCacheBehaviorAttribute)) {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionDefaultCacheBehaviorToTerraform(this.internalValue);
  }


  // allowed_methods - computed: false, optional: false, required: true
  public get allowedMethods() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'allowed_methods', this.internalValue?.allowedMethods);
  }

  // cached_methods - computed: false, optional: false, required: true
  public get cachedMethods() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'cached_methods', this.internalValue?.cachedMethods);
  }

  // compress - computed: false, optional: true, required: false
  public get compress() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'compress', this.internalValue?.compress);
  }

  // default_ttl - computed: false, optional: true, required: false
  public get defaultTtl() {
    return cdktf.TerraformNumberAttribute.construct(this, 'default_ttl', this.internalValue?.defaultTtl);
  }

  // field_level_encryption_id - computed: false, optional: true, required: false
  public get fieldLevelEncryptionId() {
    return cdktf.TerraformStringAttribute.construct(this, 'field_level_encryption_id', this.internalValue?.fieldLevelEncryptionId);
  }

  // max_ttl - computed: false, optional: true, required: false
  public get maxTtl() {
    return cdktf.TerraformNumberAttribute.construct(this, 'max_ttl', this.internalValue?.maxTtl);
  }

  // min_ttl - computed: false, optional: true, required: false
  public get minTtl() {
    return cdktf.TerraformNumberAttribute.construct(this, 'min_ttl', this.internalValue?.minTtl);
  }

  // smooth_streaming - computed: false, optional: true, required: false
  public get smoothStreaming() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'smooth_streaming', this.internalValue?.smoothStreaming);
  }

  // target_origin_id - computed: false, optional: false, required: true
  public get targetOriginId() {
    return cdktf.TerraformStringAttribute.construct(this, 'target_origin_id', this.internalValue?.targetOriginId);
  }

  // trusted_signers - computed: false, optional: true, required: false
  public get trustedSigners() {
    return cdktf.TerraformStringListAttribute.construct(this, 'trusted_signers', this.internalValue?.trustedSigners);
  }

  // viewer_protocol_policy - computed: false, optional: false, required: true
  public get viewerProtocolPolicy() {
    return cdktf.TerraformStringAttribute.construct(this, 'viewer_protocol_policy', this.internalValue?.viewerProtocolPolicy);
  }

  // forwarded_values - computed: false, optional: false, required: true
  public get forwardedValues() {
    return new TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesListAttribute(this, 'forwarded_values');
  }

  // lambda_function_association - computed: false, optional: true, required: false
  public get lambdaFunctionAssociation() {
    return new TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationSetAttribute(this, 'lambda_function_association');
  }
}

export type TerraformCloudfrontDistributionDefaultCacheBehavior = CloudfrontDistributionDefaultCacheBehavior | TerraformCloudfrontDistributionDefaultCacheBehaviorAttribute;

export class TerraformCloudfrontDistributionDefaultCacheBehaviorListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionDefaultCacheBehavior[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionDefaultCacheBehavior[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionDefaultCacheBehaviorList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionDefaultCacheBehaviorListAttribute)) {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionDefaultCacheBehaviorListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionDefaultCacheBehaviorToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionDefaultCacheBehaviorAttribute {
    return new TerraformCloudfrontDistributionDefaultCacheBehaviorAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionDefaultCacheBehaviorList = CloudfrontDistributionDefaultCacheBehavior[] | TerraformCloudfrontDistributionDefaultCacheBehaviorListAttribute;

export interface CloudfrontDistributionLoggingConfig {
  readonly bucket: cdktf.TerraformString;
  readonly includeCookies?: cdktf.TerraformBoolean;
  readonly prefix?: cdktf.TerraformString;
}

function cloudfrontDistributionLoggingConfigToTerraform(struct?: CloudfrontDistributionLoggingConfig): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    bucket: struct!.bucket instanceof cdktf.TerraformAttribute ? struct!.bucket.toTerraform() : cdktf.stringToTerraform(struct!.bucket),
    include_cookies: struct!.includeCookies instanceof cdktf.TerraformAttribute ? struct!.includeCookies.toTerraform() : cdktf.booleanToTerraform(struct!.includeCookies),
    prefix: struct!.prefix instanceof cdktf.TerraformAttribute ? struct!.prefix.toTerraform() : cdktf.stringToTerraform(struct!.prefix),
  }
}

export class TerraformCloudfrontDistributionLoggingConfigAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionLoggingConfig, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionLoggingConfig | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionLoggingConfig | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionLoggingConfigAttribute)) {
      return new TerraformCloudfrontDistributionLoggingConfigAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionLoggingConfigAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionLoggingConfigToTerraform(this.internalValue);
  }


  // bucket - computed: false, optional: false, required: true
  public get bucket() {
    return cdktf.TerraformStringAttribute.construct(this, 'bucket', this.internalValue?.bucket);
  }

  // include_cookies - computed: false, optional: true, required: false
  public get includeCookies() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'include_cookies', this.internalValue?.includeCookies);
  }

  // prefix - computed: false, optional: true, required: false
  public get prefix() {
    return cdktf.TerraformStringAttribute.construct(this, 'prefix', this.internalValue?.prefix);
  }
}

export type TerraformCloudfrontDistributionLoggingConfig = CloudfrontDistributionLoggingConfig | TerraformCloudfrontDistributionLoggingConfigAttribute;

export class TerraformCloudfrontDistributionLoggingConfigListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionLoggingConfig[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionLoggingConfig[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionLoggingConfigList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionLoggingConfigListAttribute)) {
      return new TerraformCloudfrontDistributionLoggingConfigListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionLoggingConfigListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionLoggingConfigToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionLoggingConfigAttribute {
    return new TerraformCloudfrontDistributionLoggingConfigAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionLoggingConfigList = CloudfrontDistributionLoggingConfig[] | TerraformCloudfrontDistributionLoggingConfigListAttribute;

export interface CloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookies {
  readonly forward: cdktf.TerraformString;
  readonly whitelistedNames?: cdktf.TerraformStringSet;
}

function cloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesToTerraform(struct?: CloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookies): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    forward: struct!.forward instanceof cdktf.TerraformAttribute ? struct!.forward.toTerraform() : cdktf.stringToTerraform(struct!.forward),
    whitelisted_names: struct!.whitelistedNames instanceof cdktf.TerraformAttribute ? struct!.whitelistedNames.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.whitelistedNames),
  }
}

export class TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookies, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookies | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookies | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesAttribute)) {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesToTerraform(this.internalValue);
  }


  // forward - computed: false, optional: false, required: true
  public get forward() {
    return cdktf.TerraformStringAttribute.construct(this, 'forward', this.internalValue?.forward);
  }

  // whitelisted_names - computed: false, optional: true, required: false
  public get whitelistedNames() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'whitelisted_names', this.internalValue?.whitelistedNames);
  }
}

export type TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookies = CloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookies | TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesAttribute;

export class TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookies[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookies[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesListAttribute)) {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesAttribute {
    return new TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesList = CloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookies[] | TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesListAttribute;

export interface CloudfrontDistributionOrderedCacheBehaviorForwardedValues {
  readonly headers?: cdktf.TerraformStringSet;
  readonly queryString: cdktf.TerraformBoolean;
  readonly queryStringCacheKeys?: cdktf.TerraformStringList;
  /** cookies block */
  readonly cookies: TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesList;
}

function cloudfrontDistributionOrderedCacheBehaviorForwardedValuesToTerraform(struct?: CloudfrontDistributionOrderedCacheBehaviorForwardedValues): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    headers: struct!.headers instanceof cdktf.TerraformAttribute ? struct!.headers.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.headers),
    query_string: struct!.queryString instanceof cdktf.TerraformAttribute ? struct!.queryString.toTerraform() : cdktf.booleanToTerraform(struct!.queryString),
    query_string_cache_keys: struct!.queryStringCacheKeys instanceof cdktf.TerraformAttribute ? struct!.queryStringCacheKeys.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.queryStringCacheKeys),
    cookies: struct!.cookies instanceof cdktf.TerraformAttribute ? struct!.cookies.toTerraform() : cdktf.listMapper(cloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesToTerraform)(struct!.cookies),
  }
}

export class TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOrderedCacheBehaviorForwardedValues, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOrderedCacheBehaviorForwardedValues | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValues | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesAttribute)) {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionOrderedCacheBehaviorForwardedValuesToTerraform(this.internalValue);
  }


  // headers - computed: false, optional: true, required: false
  public get headers() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'headers', this.internalValue?.headers);
  }

  // query_string - computed: false, optional: false, required: true
  public get queryString() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'query_string', this.internalValue?.queryString);
  }

  // query_string_cache_keys - computed: false, optional: true, required: false
  public get queryStringCacheKeys() {
    return cdktf.TerraformStringListAttribute.construct(this, 'query_string_cache_keys', this.internalValue?.queryStringCacheKeys);
  }

  // cookies - computed: false, optional: false, required: true
  public get cookies() {
    return new TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesListAttribute(this, 'cookies');
  }
}

export type TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValues = CloudfrontDistributionOrderedCacheBehaviorForwardedValues | TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesAttribute;

export class TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOrderedCacheBehaviorForwardedValues[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOrderedCacheBehaviorForwardedValues[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesListAttribute)) {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionOrderedCacheBehaviorForwardedValuesToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesAttribute {
    return new TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesList = CloudfrontDistributionOrderedCacheBehaviorForwardedValues[] | TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesListAttribute;

export interface CloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation {
  readonly eventType: cdktf.TerraformString;
  readonly includeBody?: cdktf.TerraformBoolean;
  readonly lambdaArn: cdktf.TerraformString;
}

function cloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationToTerraform(struct?: CloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    event_type: struct!.eventType instanceof cdktf.TerraformAttribute ? struct!.eventType.toTerraform() : cdktf.stringToTerraform(struct!.eventType),
    include_body: struct!.includeBody instanceof cdktf.TerraformAttribute ? struct!.includeBody.toTerraform() : cdktf.booleanToTerraform(struct!.includeBody),
    lambda_arn: struct!.lambdaArn instanceof cdktf.TerraformAttribute ? struct!.lambdaArn.toTerraform() : cdktf.stringToTerraform(struct!.lambdaArn),
  }
}

export class TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationAttribute)) {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationToTerraform(this.internalValue);
  }


  // event_type - computed: false, optional: false, required: true
  public get eventType() {
    return cdktf.TerraformStringAttribute.construct(this, 'event_type', this.internalValue?.eventType);
  }

  // include_body - computed: false, optional: true, required: false
  public get includeBody() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'include_body', this.internalValue?.includeBody);
  }

  // lambda_arn - computed: false, optional: false, required: true
  public get lambdaArn() {
    return cdktf.TerraformStringAttribute.construct(this, 'lambda_arn', this.internalValue?.lambdaArn);
  }
}

export type TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation = CloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation | TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationAttribute;

export class TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationSet | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationSetAttribute)) {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(cloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationToTerraform)(this.internalValue);
  }

  public toList(): TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationListAttribute {
    return new TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationSet = CloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation[] | TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationSetAttribute;

export class TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationListAttribute)) {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationAttribute {
    return new TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationList = CloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation[] | TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationListAttribute;

export interface CloudfrontDistributionOrderedCacheBehavior {
  readonly allowedMethods: cdktf.TerraformStringSet;
  readonly cachedMethods: cdktf.TerraformStringSet;
  readonly compress?: cdktf.TerraformBoolean;
  readonly defaultTtl?: cdktf.TerraformNumber;
  readonly fieldLevelEncryptionId?: cdktf.TerraformString;
  readonly maxTtl?: cdktf.TerraformNumber;
  readonly minTtl?: cdktf.TerraformNumber;
  readonly pathPattern: cdktf.TerraformString;
  readonly smoothStreaming?: cdktf.TerraformBoolean;
  readonly targetOriginId: cdktf.TerraformString;
  readonly trustedSigners?: cdktf.TerraformStringList;
  readonly viewerProtocolPolicy: cdktf.TerraformString;
  /** forwarded_values block */
  readonly forwardedValues: TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesList;
  /** lambda_function_association block */
  readonly lambdaFunctionAssociation?: TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationSet;
}

function cloudfrontDistributionOrderedCacheBehaviorToTerraform(struct?: CloudfrontDistributionOrderedCacheBehavior): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    allowed_methods: struct!.allowedMethods instanceof cdktf.TerraformAttribute ? struct!.allowedMethods.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.allowedMethods),
    cached_methods: struct!.cachedMethods instanceof cdktf.TerraformAttribute ? struct!.cachedMethods.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.cachedMethods),
    compress: struct!.compress instanceof cdktf.TerraformAttribute ? struct!.compress.toTerraform() : cdktf.booleanToTerraform(struct!.compress),
    default_ttl: struct!.defaultTtl instanceof cdktf.TerraformAttribute ? struct!.defaultTtl.toTerraform() : cdktf.numberToTerraform(struct!.defaultTtl),
    field_level_encryption_id: struct!.fieldLevelEncryptionId instanceof cdktf.TerraformAttribute ? struct!.fieldLevelEncryptionId.toTerraform() : cdktf.stringToTerraform(struct!.fieldLevelEncryptionId),
    max_ttl: struct!.maxTtl instanceof cdktf.TerraformAttribute ? struct!.maxTtl.toTerraform() : cdktf.numberToTerraform(struct!.maxTtl),
    min_ttl: struct!.minTtl instanceof cdktf.TerraformAttribute ? struct!.minTtl.toTerraform() : cdktf.numberToTerraform(struct!.minTtl),
    path_pattern: struct!.pathPattern instanceof cdktf.TerraformAttribute ? struct!.pathPattern.toTerraform() : cdktf.stringToTerraform(struct!.pathPattern),
    smooth_streaming: struct!.smoothStreaming instanceof cdktf.TerraformAttribute ? struct!.smoothStreaming.toTerraform() : cdktf.booleanToTerraform(struct!.smoothStreaming),
    target_origin_id: struct!.targetOriginId instanceof cdktf.TerraformAttribute ? struct!.targetOriginId.toTerraform() : cdktf.stringToTerraform(struct!.targetOriginId),
    trusted_signers: struct!.trustedSigners instanceof cdktf.TerraformAttribute ? struct!.trustedSigners.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.trustedSigners),
    viewer_protocol_policy: struct!.viewerProtocolPolicy instanceof cdktf.TerraformAttribute ? struct!.viewerProtocolPolicy.toTerraform() : cdktf.stringToTerraform(struct!.viewerProtocolPolicy),
    forwarded_values: struct!.forwardedValues instanceof cdktf.TerraformAttribute ? struct!.forwardedValues.toTerraform() : cdktf.listMapper(cloudfrontDistributionOrderedCacheBehaviorForwardedValuesToTerraform)(struct!.forwardedValues),
    lambda_function_association: struct!.lambdaFunctionAssociation instanceof cdktf.TerraformAttribute ? struct!.lambdaFunctionAssociation.toTerraform() : cdktf.setMapper(cloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationToTerraform)(struct!.lambdaFunctionAssociation),
  }
}

export class TerraformCloudfrontDistributionOrderedCacheBehaviorAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOrderedCacheBehavior, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOrderedCacheBehavior | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOrderedCacheBehavior | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOrderedCacheBehaviorAttribute)) {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionOrderedCacheBehaviorToTerraform(this.internalValue);
  }


  // allowed_methods - computed: false, optional: false, required: true
  public get allowedMethods() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'allowed_methods', this.internalValue?.allowedMethods);
  }

  // cached_methods - computed: false, optional: false, required: true
  public get cachedMethods() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'cached_methods', this.internalValue?.cachedMethods);
  }

  // compress - computed: false, optional: true, required: false
  public get compress() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'compress', this.internalValue?.compress);
  }

  // default_ttl - computed: false, optional: true, required: false
  public get defaultTtl() {
    return cdktf.TerraformNumberAttribute.construct(this, 'default_ttl', this.internalValue?.defaultTtl);
  }

  // field_level_encryption_id - computed: false, optional: true, required: false
  public get fieldLevelEncryptionId() {
    return cdktf.TerraformStringAttribute.construct(this, 'field_level_encryption_id', this.internalValue?.fieldLevelEncryptionId);
  }

  // max_ttl - computed: false, optional: true, required: false
  public get maxTtl() {
    return cdktf.TerraformNumberAttribute.construct(this, 'max_ttl', this.internalValue?.maxTtl);
  }

  // min_ttl - computed: false, optional: true, required: false
  public get minTtl() {
    return cdktf.TerraformNumberAttribute.construct(this, 'min_ttl', this.internalValue?.minTtl);
  }

  // path_pattern - computed: false, optional: false, required: true
  public get pathPattern() {
    return cdktf.TerraformStringAttribute.construct(this, 'path_pattern', this.internalValue?.pathPattern);
  }

  // smooth_streaming - computed: false, optional: true, required: false
  public get smoothStreaming() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'smooth_streaming', this.internalValue?.smoothStreaming);
  }

  // target_origin_id - computed: false, optional: false, required: true
  public get targetOriginId() {
    return cdktf.TerraformStringAttribute.construct(this, 'target_origin_id', this.internalValue?.targetOriginId);
  }

  // trusted_signers - computed: false, optional: true, required: false
  public get trustedSigners() {
    return cdktf.TerraformStringListAttribute.construct(this, 'trusted_signers', this.internalValue?.trustedSigners);
  }

  // viewer_protocol_policy - computed: false, optional: false, required: true
  public get viewerProtocolPolicy() {
    return cdktf.TerraformStringAttribute.construct(this, 'viewer_protocol_policy', this.internalValue?.viewerProtocolPolicy);
  }

  // forwarded_values - computed: false, optional: false, required: true
  public get forwardedValues() {
    return new TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesListAttribute(this, 'forwarded_values');
  }

  // lambda_function_association - computed: false, optional: true, required: false
  public get lambdaFunctionAssociation() {
    return new TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationSetAttribute(this, 'lambda_function_association');
  }
}

export type TerraformCloudfrontDistributionOrderedCacheBehavior = CloudfrontDistributionOrderedCacheBehavior | TerraformCloudfrontDistributionOrderedCacheBehaviorAttribute;

export class TerraformCloudfrontDistributionOrderedCacheBehaviorListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOrderedCacheBehavior[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOrderedCacheBehavior[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOrderedCacheBehaviorList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOrderedCacheBehaviorListAttribute)) {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOrderedCacheBehaviorListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionOrderedCacheBehaviorToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionOrderedCacheBehaviorAttribute {
    return new TerraformCloudfrontDistributionOrderedCacheBehaviorAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionOrderedCacheBehaviorList = CloudfrontDistributionOrderedCacheBehavior[] | TerraformCloudfrontDistributionOrderedCacheBehaviorListAttribute;

export interface CloudfrontDistributionOriginCustomHeader {
  readonly name: cdktf.TerraformString;
  readonly value: cdktf.TerraformString;
}

function cloudfrontDistributionOriginCustomHeaderToTerraform(struct?: CloudfrontDistributionOriginCustomHeader): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    name: struct!.name instanceof cdktf.TerraformAttribute ? struct!.name.toTerraform() : cdktf.stringToTerraform(struct!.name),
    value: struct!.value instanceof cdktf.TerraformAttribute ? struct!.value.toTerraform() : cdktf.stringToTerraform(struct!.value),
  }
}

export class TerraformCloudfrontDistributionOriginCustomHeaderAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginCustomHeader, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginCustomHeader | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginCustomHeader | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginCustomHeaderAttribute)) {
      return new TerraformCloudfrontDistributionOriginCustomHeaderAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginCustomHeaderAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionOriginCustomHeaderToTerraform(this.internalValue);
  }


  // name - computed: false, optional: false, required: true
  public get name() {
    return cdktf.TerraformStringAttribute.construct(this, 'name', this.internalValue?.name);
  }

  // value - computed: false, optional: false, required: true
  public get value() {
    return cdktf.TerraformStringAttribute.construct(this, 'value', this.internalValue?.value);
  }
}

export type TerraformCloudfrontDistributionOriginCustomHeader = CloudfrontDistributionOriginCustomHeader | TerraformCloudfrontDistributionOriginCustomHeaderAttribute;

export class TerraformCloudfrontDistributionOriginCustomHeaderSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginCustomHeader[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginCustomHeader[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginCustomHeaderSet | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginCustomHeaderSetAttribute)) {
      return new TerraformCloudfrontDistributionOriginCustomHeaderSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginCustomHeaderSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(cloudfrontDistributionOriginCustomHeaderToTerraform)(this.internalValue);
  }

  public toList(): TerraformCloudfrontDistributionOriginCustomHeaderListAttribute {
    return new TerraformCloudfrontDistributionOriginCustomHeaderListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformCloudfrontDistributionOriginCustomHeaderSet = CloudfrontDistributionOriginCustomHeader[] | TerraformCloudfrontDistributionOriginCustomHeaderSetAttribute;

export class TerraformCloudfrontDistributionOriginCustomHeaderListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginCustomHeader[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginCustomHeader[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginCustomHeaderList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginCustomHeaderListAttribute)) {
      return new TerraformCloudfrontDistributionOriginCustomHeaderListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginCustomHeaderListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionOriginCustomHeaderToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionOriginCustomHeaderAttribute {
    return new TerraformCloudfrontDistributionOriginCustomHeaderAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionOriginCustomHeaderList = CloudfrontDistributionOriginCustomHeader[] | TerraformCloudfrontDistributionOriginCustomHeaderListAttribute;

export interface CloudfrontDistributionOriginCustomOriginConfig {
  readonly httpPort: cdktf.TerraformNumber;
  readonly httpsPort: cdktf.TerraformNumber;
  readonly originKeepaliveTimeout?: cdktf.TerraformNumber;
  readonly originProtocolPolicy: cdktf.TerraformString;
  readonly originReadTimeout?: cdktf.TerraformNumber;
  readonly originSslProtocols: cdktf.TerraformStringSet;
}

function cloudfrontDistributionOriginCustomOriginConfigToTerraform(struct?: CloudfrontDistributionOriginCustomOriginConfig): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    http_port: struct!.httpPort instanceof cdktf.TerraformAttribute ? struct!.httpPort.toTerraform() : cdktf.numberToTerraform(struct!.httpPort),
    https_port: struct!.httpsPort instanceof cdktf.TerraformAttribute ? struct!.httpsPort.toTerraform() : cdktf.numberToTerraform(struct!.httpsPort),
    origin_keepalive_timeout: struct!.originKeepaliveTimeout instanceof cdktf.TerraformAttribute ? struct!.originKeepaliveTimeout.toTerraform() : cdktf.numberToTerraform(struct!.originKeepaliveTimeout),
    origin_protocol_policy: struct!.originProtocolPolicy instanceof cdktf.TerraformAttribute ? struct!.originProtocolPolicy.toTerraform() : cdktf.stringToTerraform(struct!.originProtocolPolicy),
    origin_read_timeout: struct!.originReadTimeout instanceof cdktf.TerraformAttribute ? struct!.originReadTimeout.toTerraform() : cdktf.numberToTerraform(struct!.originReadTimeout),
    origin_ssl_protocols: struct!.originSslProtocols instanceof cdktf.TerraformAttribute ? struct!.originSslProtocols.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.originSslProtocols),
  }
}

export class TerraformCloudfrontDistributionOriginCustomOriginConfigAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginCustomOriginConfig, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginCustomOriginConfig | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginCustomOriginConfig | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginCustomOriginConfigAttribute)) {
      return new TerraformCloudfrontDistributionOriginCustomOriginConfigAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginCustomOriginConfigAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionOriginCustomOriginConfigToTerraform(this.internalValue);
  }


  // http_port - computed: false, optional: false, required: true
  public get httpPort() {
    return cdktf.TerraformNumberAttribute.construct(this, 'http_port', this.internalValue?.httpPort);
  }

  // https_port - computed: false, optional: false, required: true
  public get httpsPort() {
    return cdktf.TerraformNumberAttribute.construct(this, 'https_port', this.internalValue?.httpsPort);
  }

  // origin_keepalive_timeout - computed: false, optional: true, required: false
  public get originKeepaliveTimeout() {
    return cdktf.TerraformNumberAttribute.construct(this, 'origin_keepalive_timeout', this.internalValue?.originKeepaliveTimeout);
  }

  // origin_protocol_policy - computed: false, optional: false, required: true
  public get originProtocolPolicy() {
    return cdktf.TerraformStringAttribute.construct(this, 'origin_protocol_policy', this.internalValue?.originProtocolPolicy);
  }

  // origin_read_timeout - computed: false, optional: true, required: false
  public get originReadTimeout() {
    return cdktf.TerraformNumberAttribute.construct(this, 'origin_read_timeout', this.internalValue?.originReadTimeout);
  }

  // origin_ssl_protocols - computed: false, optional: false, required: true
  public get originSslProtocols() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'origin_ssl_protocols', this.internalValue?.originSslProtocols);
  }
}

export type TerraformCloudfrontDistributionOriginCustomOriginConfig = CloudfrontDistributionOriginCustomOriginConfig | TerraformCloudfrontDistributionOriginCustomOriginConfigAttribute;

export class TerraformCloudfrontDistributionOriginCustomOriginConfigListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginCustomOriginConfig[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginCustomOriginConfig[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginCustomOriginConfigList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginCustomOriginConfigListAttribute)) {
      return new TerraformCloudfrontDistributionOriginCustomOriginConfigListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginCustomOriginConfigListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionOriginCustomOriginConfigToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionOriginCustomOriginConfigAttribute {
    return new TerraformCloudfrontDistributionOriginCustomOriginConfigAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionOriginCustomOriginConfigList = CloudfrontDistributionOriginCustomOriginConfig[] | TerraformCloudfrontDistributionOriginCustomOriginConfigListAttribute;

export interface CloudfrontDistributionOriginS3OriginConfig {
  readonly originAccessIdentity: cdktf.TerraformString;
}

function cloudfrontDistributionOriginS3OriginConfigToTerraform(struct?: CloudfrontDistributionOriginS3OriginConfig): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    origin_access_identity: struct!.originAccessIdentity instanceof cdktf.TerraformAttribute ? struct!.originAccessIdentity.toTerraform() : cdktf.stringToTerraform(struct!.originAccessIdentity),
  }
}

export class TerraformCloudfrontDistributionOriginS3OriginConfigAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginS3OriginConfig, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginS3OriginConfig | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginS3OriginConfig | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginS3OriginConfigAttribute)) {
      return new TerraformCloudfrontDistributionOriginS3OriginConfigAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginS3OriginConfigAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionOriginS3OriginConfigToTerraform(this.internalValue);
  }


  // origin_access_identity - computed: false, optional: false, required: true
  public get originAccessIdentity() {
    return cdktf.TerraformStringAttribute.construct(this, 'origin_access_identity', this.internalValue?.originAccessIdentity);
  }
}

export type TerraformCloudfrontDistributionOriginS3OriginConfig = CloudfrontDistributionOriginS3OriginConfig | TerraformCloudfrontDistributionOriginS3OriginConfigAttribute;

export class TerraformCloudfrontDistributionOriginS3OriginConfigListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginS3OriginConfig[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginS3OriginConfig[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginS3OriginConfigList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginS3OriginConfigListAttribute)) {
      return new TerraformCloudfrontDistributionOriginS3OriginConfigListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginS3OriginConfigListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionOriginS3OriginConfigToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionOriginS3OriginConfigAttribute {
    return new TerraformCloudfrontDistributionOriginS3OriginConfigAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionOriginS3OriginConfigList = CloudfrontDistributionOriginS3OriginConfig[] | TerraformCloudfrontDistributionOriginS3OriginConfigListAttribute;

export interface CloudfrontDistributionOrigin {
  readonly domainName: cdktf.TerraformString;
  readonly originId: cdktf.TerraformString;
  readonly originPath?: cdktf.TerraformString;
  /** custom_header block */
  readonly customHeader?: TerraformCloudfrontDistributionOriginCustomHeaderSet;
  /** custom_origin_config block */
  readonly customOriginConfig?: TerraformCloudfrontDistributionOriginCustomOriginConfigList;
  /** s3_origin_config block */
  readonly s3OriginConfig?: TerraformCloudfrontDistributionOriginS3OriginConfigList;
}

function cloudfrontDistributionOriginToTerraform(struct?: CloudfrontDistributionOrigin): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    domain_name: struct!.domainName instanceof cdktf.TerraformAttribute ? struct!.domainName.toTerraform() : cdktf.stringToTerraform(struct!.domainName),
    origin_id: struct!.originId instanceof cdktf.TerraformAttribute ? struct!.originId.toTerraform() : cdktf.stringToTerraform(struct!.originId),
    origin_path: struct!.originPath instanceof cdktf.TerraformAttribute ? struct!.originPath.toTerraform() : cdktf.stringToTerraform(struct!.originPath),
    custom_header: struct!.customHeader instanceof cdktf.TerraformAttribute ? struct!.customHeader.toTerraform() : cdktf.setMapper(cloudfrontDistributionOriginCustomHeaderToTerraform)(struct!.customHeader),
    custom_origin_config: struct!.customOriginConfig instanceof cdktf.TerraformAttribute ? struct!.customOriginConfig.toTerraform() : cdktf.listMapper(cloudfrontDistributionOriginCustomOriginConfigToTerraform)(struct!.customOriginConfig),
    s3_origin_config: struct!.s3OriginConfig instanceof cdktf.TerraformAttribute ? struct!.s3OriginConfig.toTerraform() : cdktf.listMapper(cloudfrontDistributionOriginS3OriginConfigToTerraform)(struct!.s3OriginConfig),
  }
}

export class TerraformCloudfrontDistributionOriginAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOrigin, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOrigin | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOrigin | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginAttribute)) {
      return new TerraformCloudfrontDistributionOriginAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionOriginToTerraform(this.internalValue);
  }


  // domain_name - computed: false, optional: false, required: true
  public get domainName() {
    return cdktf.TerraformStringAttribute.construct(this, 'domain_name', this.internalValue?.domainName);
  }

  // origin_id - computed: false, optional: false, required: true
  public get originId() {
    return cdktf.TerraformStringAttribute.construct(this, 'origin_id', this.internalValue?.originId);
  }

  // origin_path - computed: false, optional: true, required: false
  public get originPath() {
    return cdktf.TerraformStringAttribute.construct(this, 'origin_path', this.internalValue?.originPath);
  }

  // custom_header - computed: false, optional: true, required: false
  public get customHeader() {
    return new TerraformCloudfrontDistributionOriginCustomHeaderSetAttribute(this, 'custom_header');
  }

  // custom_origin_config - computed: false, optional: true, required: false
  public get customOriginConfig() {
    return new TerraformCloudfrontDistributionOriginCustomOriginConfigListAttribute(this, 'custom_origin_config');
  }

  // s3_origin_config - computed: false, optional: true, required: false
  public get s3OriginConfig() {
    return new TerraformCloudfrontDistributionOriginS3OriginConfigListAttribute(this, 's3_origin_config');
  }
}

export type TerraformCloudfrontDistributionOrigin = CloudfrontDistributionOrigin | TerraformCloudfrontDistributionOriginAttribute;

export class TerraformCloudfrontDistributionOriginSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOrigin[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOrigin[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginSet | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginSetAttribute)) {
      return new TerraformCloudfrontDistributionOriginSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(cloudfrontDistributionOriginToTerraform)(this.internalValue);
  }

  public toList(): TerraformCloudfrontDistributionOriginListAttribute {
    return new TerraformCloudfrontDistributionOriginListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformCloudfrontDistributionOriginSet = CloudfrontDistributionOrigin[] | TerraformCloudfrontDistributionOriginSetAttribute;

export class TerraformCloudfrontDistributionOriginListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOrigin[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOrigin[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginListAttribute)) {
      return new TerraformCloudfrontDistributionOriginListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionOriginToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionOriginAttribute {
    return new TerraformCloudfrontDistributionOriginAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionOriginList = CloudfrontDistributionOrigin[] | TerraformCloudfrontDistributionOriginListAttribute;

export interface CloudfrontDistributionOriginGroupFailoverCriteria {
  readonly statusCodes: cdktf.TerraformNumberSet;
}

function cloudfrontDistributionOriginGroupFailoverCriteriaToTerraform(struct?: CloudfrontDistributionOriginGroupFailoverCriteria): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    status_codes: struct!.statusCodes instanceof cdktf.TerraformAttribute ? struct!.statusCodes.toTerraform() : cdktf.setMapper(cdktf.numberToTerraform)(struct!.statusCodes),
  }
}

export class TerraformCloudfrontDistributionOriginGroupFailoverCriteriaAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginGroupFailoverCriteria, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginGroupFailoverCriteria | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginGroupFailoverCriteria | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginGroupFailoverCriteriaAttribute)) {
      return new TerraformCloudfrontDistributionOriginGroupFailoverCriteriaAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginGroupFailoverCriteriaAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionOriginGroupFailoverCriteriaToTerraform(this.internalValue);
  }


  // status_codes - computed: false, optional: false, required: true
  public get statusCodes() {
    return cdktf.TerraformNumberSetAttribute.construct(this, 'status_codes', this.internalValue?.statusCodes);
  }
}

export type TerraformCloudfrontDistributionOriginGroupFailoverCriteria = CloudfrontDistributionOriginGroupFailoverCriteria | TerraformCloudfrontDistributionOriginGroupFailoverCriteriaAttribute;

export class TerraformCloudfrontDistributionOriginGroupFailoverCriteriaListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginGroupFailoverCriteria[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginGroupFailoverCriteria[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginGroupFailoverCriteriaList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginGroupFailoverCriteriaListAttribute)) {
      return new TerraformCloudfrontDistributionOriginGroupFailoverCriteriaListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginGroupFailoverCriteriaListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionOriginGroupFailoverCriteriaToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionOriginGroupFailoverCriteriaAttribute {
    return new TerraformCloudfrontDistributionOriginGroupFailoverCriteriaAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionOriginGroupFailoverCriteriaList = CloudfrontDistributionOriginGroupFailoverCriteria[] | TerraformCloudfrontDistributionOriginGroupFailoverCriteriaListAttribute;

export interface CloudfrontDistributionOriginGroupMember {
  readonly originId: cdktf.TerraformString;
}

function cloudfrontDistributionOriginGroupMemberToTerraform(struct?: CloudfrontDistributionOriginGroupMember): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    origin_id: struct!.originId instanceof cdktf.TerraformAttribute ? struct!.originId.toTerraform() : cdktf.stringToTerraform(struct!.originId),
  }
}

export class TerraformCloudfrontDistributionOriginGroupMemberAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginGroupMember, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginGroupMember | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginGroupMember | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginGroupMemberAttribute)) {
      return new TerraformCloudfrontDistributionOriginGroupMemberAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginGroupMemberAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionOriginGroupMemberToTerraform(this.internalValue);
  }


  // origin_id - computed: false, optional: false, required: true
  public get originId() {
    return cdktf.TerraformStringAttribute.construct(this, 'origin_id', this.internalValue?.originId);
  }
}

export type TerraformCloudfrontDistributionOriginGroupMember = CloudfrontDistributionOriginGroupMember | TerraformCloudfrontDistributionOriginGroupMemberAttribute;

export class TerraformCloudfrontDistributionOriginGroupMemberListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginGroupMember[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginGroupMember[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginGroupMemberList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginGroupMemberListAttribute)) {
      return new TerraformCloudfrontDistributionOriginGroupMemberListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginGroupMemberListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionOriginGroupMemberToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionOriginGroupMemberAttribute {
    return new TerraformCloudfrontDistributionOriginGroupMemberAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionOriginGroupMemberList = CloudfrontDistributionOriginGroupMember[] | TerraformCloudfrontDistributionOriginGroupMemberListAttribute;

export interface CloudfrontDistributionOriginGroup {
  readonly originId: cdktf.TerraformString;
  /** failover_criteria block */
  readonly failoverCriteria: TerraformCloudfrontDistributionOriginGroupFailoverCriteriaList;
  /** member block */
  readonly member: TerraformCloudfrontDistributionOriginGroupMemberList;
}

function cloudfrontDistributionOriginGroupToTerraform(struct?: CloudfrontDistributionOriginGroup): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    origin_id: struct!.originId instanceof cdktf.TerraformAttribute ? struct!.originId.toTerraform() : cdktf.stringToTerraform(struct!.originId),
    failover_criteria: struct!.failoverCriteria instanceof cdktf.TerraformAttribute ? struct!.failoverCriteria.toTerraform() : cdktf.listMapper(cloudfrontDistributionOriginGroupFailoverCriteriaToTerraform)(struct!.failoverCriteria),
    member: struct!.member instanceof cdktf.TerraformAttribute ? struct!.member.toTerraform() : cdktf.listMapper(cloudfrontDistributionOriginGroupMemberToTerraform)(struct!.member),
  }
}

export class TerraformCloudfrontDistributionOriginGroupAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginGroup, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginGroup | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginGroup | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginGroupAttribute)) {
      return new TerraformCloudfrontDistributionOriginGroupAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginGroupAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionOriginGroupToTerraform(this.internalValue);
  }


  // origin_id - computed: false, optional: false, required: true
  public get originId() {
    return cdktf.TerraformStringAttribute.construct(this, 'origin_id', this.internalValue?.originId);
  }

  // failover_criteria - computed: false, optional: false, required: true
  public get failoverCriteria() {
    return new TerraformCloudfrontDistributionOriginGroupFailoverCriteriaListAttribute(this, 'failover_criteria');
  }

  // member - computed: false, optional: false, required: true
  public get member() {
    return new TerraformCloudfrontDistributionOriginGroupMemberListAttribute(this, 'member');
  }
}

export type TerraformCloudfrontDistributionOriginGroup = CloudfrontDistributionOriginGroup | TerraformCloudfrontDistributionOriginGroupAttribute;

export class TerraformCloudfrontDistributionOriginGroupSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginGroup[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginGroup[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginGroupSet | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginGroupSetAttribute)) {
      return new TerraformCloudfrontDistributionOriginGroupSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginGroupSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(cloudfrontDistributionOriginGroupToTerraform)(this.internalValue);
  }

  public toList(): TerraformCloudfrontDistributionOriginGroupListAttribute {
    return new TerraformCloudfrontDistributionOriginGroupListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformCloudfrontDistributionOriginGroupSet = CloudfrontDistributionOriginGroup[] | TerraformCloudfrontDistributionOriginGroupSetAttribute;

export class TerraformCloudfrontDistributionOriginGroupListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionOriginGroup[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionOriginGroup[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionOriginGroupList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionOriginGroupListAttribute)) {
      return new TerraformCloudfrontDistributionOriginGroupListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionOriginGroupListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionOriginGroupToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionOriginGroupAttribute {
    return new TerraformCloudfrontDistributionOriginGroupAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionOriginGroupList = CloudfrontDistributionOriginGroup[] | TerraformCloudfrontDistributionOriginGroupListAttribute;

export interface CloudfrontDistributionRestrictionsGeoRestriction {
  readonly locations?: cdktf.TerraformStringSet;
  readonly restrictionType: cdktf.TerraformString;
}

function cloudfrontDistributionRestrictionsGeoRestrictionToTerraform(struct?: CloudfrontDistributionRestrictionsGeoRestriction): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    locations: struct!.locations instanceof cdktf.TerraformAttribute ? struct!.locations.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.locations),
    restriction_type: struct!.restrictionType instanceof cdktf.TerraformAttribute ? struct!.restrictionType.toTerraform() : cdktf.stringToTerraform(struct!.restrictionType),
  }
}

export class TerraformCloudfrontDistributionRestrictionsGeoRestrictionAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionRestrictionsGeoRestriction, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionRestrictionsGeoRestriction | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionRestrictionsGeoRestriction | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionRestrictionsGeoRestrictionAttribute)) {
      return new TerraformCloudfrontDistributionRestrictionsGeoRestrictionAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionRestrictionsGeoRestrictionAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionRestrictionsGeoRestrictionToTerraform(this.internalValue);
  }


  // locations - computed: false, optional: true, required: false
  public get locations() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'locations', this.internalValue?.locations);
  }

  // restriction_type - computed: false, optional: false, required: true
  public get restrictionType() {
    return cdktf.TerraformStringAttribute.construct(this, 'restriction_type', this.internalValue?.restrictionType);
  }
}

export type TerraformCloudfrontDistributionRestrictionsGeoRestriction = CloudfrontDistributionRestrictionsGeoRestriction | TerraformCloudfrontDistributionRestrictionsGeoRestrictionAttribute;

export class TerraformCloudfrontDistributionRestrictionsGeoRestrictionListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionRestrictionsGeoRestriction[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionRestrictionsGeoRestriction[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionRestrictionsGeoRestrictionList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionRestrictionsGeoRestrictionListAttribute)) {
      return new TerraformCloudfrontDistributionRestrictionsGeoRestrictionListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionRestrictionsGeoRestrictionListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionRestrictionsGeoRestrictionToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionRestrictionsGeoRestrictionAttribute {
    return new TerraformCloudfrontDistributionRestrictionsGeoRestrictionAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionRestrictionsGeoRestrictionList = CloudfrontDistributionRestrictionsGeoRestriction[] | TerraformCloudfrontDistributionRestrictionsGeoRestrictionListAttribute;

export interface CloudfrontDistributionRestrictions {
  /** geo_restriction block */
  readonly geoRestriction: TerraformCloudfrontDistributionRestrictionsGeoRestrictionList;
}

function cloudfrontDistributionRestrictionsToTerraform(struct?: CloudfrontDistributionRestrictions): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    geo_restriction: struct!.geoRestriction instanceof cdktf.TerraformAttribute ? struct!.geoRestriction.toTerraform() : cdktf.listMapper(cloudfrontDistributionRestrictionsGeoRestrictionToTerraform)(struct!.geoRestriction),
  }
}

export class TerraformCloudfrontDistributionRestrictionsAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionRestrictions, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionRestrictions | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionRestrictions | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionRestrictionsAttribute)) {
      return new TerraformCloudfrontDistributionRestrictionsAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionRestrictionsAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionRestrictionsToTerraform(this.internalValue);
  }


  // geo_restriction - computed: false, optional: false, required: true
  public get geoRestriction() {
    return new TerraformCloudfrontDistributionRestrictionsGeoRestrictionListAttribute(this, 'geo_restriction');
  }
}

export type TerraformCloudfrontDistributionRestrictions = CloudfrontDistributionRestrictions | TerraformCloudfrontDistributionRestrictionsAttribute;

export class TerraformCloudfrontDistributionRestrictionsListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionRestrictions[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionRestrictions[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionRestrictionsList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionRestrictionsListAttribute)) {
      return new TerraformCloudfrontDistributionRestrictionsListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionRestrictionsListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionRestrictionsToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionRestrictionsAttribute {
    return new TerraformCloudfrontDistributionRestrictionsAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionRestrictionsList = CloudfrontDistributionRestrictions[] | TerraformCloudfrontDistributionRestrictionsListAttribute;

export interface CloudfrontDistributionViewerCertificate {
  readonly acmCertificateArn?: cdktf.TerraformString;
  readonly cloudfrontDefaultCertificate?: cdktf.TerraformBoolean;
  readonly iamCertificateId?: cdktf.TerraformString;
  readonly minimumProtocolVersion?: cdktf.TerraformString;
  readonly sslSupportMethod?: cdktf.TerraformString;
}

function cloudfrontDistributionViewerCertificateToTerraform(struct?: CloudfrontDistributionViewerCertificate): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    acm_certificate_arn: struct!.acmCertificateArn instanceof cdktf.TerraformAttribute ? struct!.acmCertificateArn.toTerraform() : cdktf.stringToTerraform(struct!.acmCertificateArn),
    cloudfront_default_certificate: struct!.cloudfrontDefaultCertificate instanceof cdktf.TerraformAttribute ? struct!.cloudfrontDefaultCertificate.toTerraform() : cdktf.booleanToTerraform(struct!.cloudfrontDefaultCertificate),
    iam_certificate_id: struct!.iamCertificateId instanceof cdktf.TerraformAttribute ? struct!.iamCertificateId.toTerraform() : cdktf.stringToTerraform(struct!.iamCertificateId),
    minimum_protocol_version: struct!.minimumProtocolVersion instanceof cdktf.TerraformAttribute ? struct!.minimumProtocolVersion.toTerraform() : cdktf.stringToTerraform(struct!.minimumProtocolVersion),
    ssl_support_method: struct!.sslSupportMethod instanceof cdktf.TerraformAttribute ? struct!.sslSupportMethod.toTerraform() : cdktf.stringToTerraform(struct!.sslSupportMethod),
  }
}

export class TerraformCloudfrontDistributionViewerCertificateAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionViewerCertificate, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionViewerCertificate | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionViewerCertificate | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionViewerCertificateAttribute)) {
      return new TerraformCloudfrontDistributionViewerCertificateAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionViewerCertificateAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cloudfrontDistributionViewerCertificateToTerraform(this.internalValue);
  }


  // acm_certificate_arn - computed: false, optional: true, required: false
  public get acmCertificateArn() {
    return cdktf.TerraformStringAttribute.construct(this, 'acm_certificate_arn', this.internalValue?.acmCertificateArn);
  }

  // cloudfront_default_certificate - computed: false, optional: true, required: false
  public get cloudfrontDefaultCertificate() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'cloudfront_default_certificate', this.internalValue?.cloudfrontDefaultCertificate);
  }

  // iam_certificate_id - computed: false, optional: true, required: false
  public get iamCertificateId() {
    return cdktf.TerraformStringAttribute.construct(this, 'iam_certificate_id', this.internalValue?.iamCertificateId);
  }

  // minimum_protocol_version - computed: false, optional: true, required: false
  public get minimumProtocolVersion() {
    return cdktf.TerraformStringAttribute.construct(this, 'minimum_protocol_version', this.internalValue?.minimumProtocolVersion);
  }

  // ssl_support_method - computed: false, optional: true, required: false
  public get sslSupportMethod() {
    return cdktf.TerraformStringAttribute.construct(this, 'ssl_support_method', this.internalValue?.sslSupportMethod);
  }
}

export type TerraformCloudfrontDistributionViewerCertificate = CloudfrontDistributionViewerCertificate | TerraformCloudfrontDistributionViewerCertificateAttribute;

export class TerraformCloudfrontDistributionViewerCertificateListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: CloudfrontDistributionViewerCertificate[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): CloudfrontDistributionViewerCertificate[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformCloudfrontDistributionViewerCertificateList | undefined) {
    if (!(value instanceof TerraformCloudfrontDistributionViewerCertificateListAttribute)) {
      return new TerraformCloudfrontDistributionViewerCertificateListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformCloudfrontDistributionViewerCertificateListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(cloudfrontDistributionViewerCertificateToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformCloudfrontDistributionViewerCertificateAttribute {
    return new TerraformCloudfrontDistributionViewerCertificateAttribute(this, index.toString());
  }
}

export type TerraformCloudfrontDistributionViewerCertificateList = CloudfrontDistributionViewerCertificate[] | TerraformCloudfrontDistributionViewerCertificateListAttribute;


// Resource

export class CloudfrontDistribution extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: CloudfrontDistributionConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_cloudfront_distribution',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._activeTrustedSigners = new cdktf.TerraformStringMapAttribute(this, 'active_trusted_signers', undefined)
    this.putAliases(config.aliases ?? new cdktf.TerraformStringSetAttribute(this, 'aliases', undefined));
    this._arn = new cdktf.TerraformStringAttribute(this, 'arn', undefined)
    this._callerReference = new cdktf.TerraformStringAttribute(this, 'caller_reference', undefined)
    this.putComment(config.comment ?? new cdktf.TerraformStringAttribute(this, 'comment', undefined));
    this.putDefaultRootObject(config.defaultRootObject ?? new cdktf.TerraformStringAttribute(this, 'default_root_object', undefined));
    this._domainName = new cdktf.TerraformStringAttribute(this, 'domain_name', undefined)
    this.putEnabled(config.enabled);
    this._etag = new cdktf.TerraformStringAttribute(this, 'etag', undefined)
    this._hostedZoneId = new cdktf.TerraformStringAttribute(this, 'hosted_zone_id', undefined)
    this.putHttpVersion(config.httpVersion ?? new cdktf.TerraformStringAttribute(this, 'http_version', undefined));
    this._id = new cdktf.TerraformStringAttribute(this, 'id', undefined)
    this._inProgressValidationBatches = new cdktf.TerraformNumberAttribute(this, 'in_progress_validation_batches', undefined)
    this.putIsIpv6Enabled(config.isIpv6Enabled ?? new cdktf.TerraformBooleanAttribute(this, 'is_ipv6_enabled', undefined));
    this._lastModifiedTime = new cdktf.TerraformStringAttribute(this, 'last_modified_time', undefined)
    this.putPriceClass(config.priceClass ?? new cdktf.TerraformStringAttribute(this, 'price_class', undefined));
    this.putRetainOnDelete(config.retainOnDelete ?? new cdktf.TerraformBooleanAttribute(this, 'retain_on_delete', undefined));
    this._status = new cdktf.TerraformStringAttribute(this, 'status', undefined)
    this.putTags(config.tags ?? new cdktf.TerraformStringMapAttribute(this, 'tags', undefined));
    this.putWaitForDeployment(config.waitForDeployment ?? new cdktf.TerraformBooleanAttribute(this, 'wait_for_deployment', undefined));
    this.putWebAclId(config.webAclId ?? new cdktf.TerraformStringAttribute(this, 'web_acl_id', undefined));
    this.putCacheBehavior(config.cacheBehavior ?? new TerraformCloudfrontDistributionCacheBehaviorSetAttribute(this, 'cache_behavior', undefined));
    this.putCustomErrorResponse(config.customErrorResponse ?? new TerraformCloudfrontDistributionCustomErrorResponseSetAttribute(this, 'custom_error_response', undefined));
    this.putDefaultCacheBehavior(config.defaultCacheBehavior);
    this.putLoggingConfig(config.loggingConfig ?? new TerraformCloudfrontDistributionLoggingConfigListAttribute(this, 'logging_config', undefined));
    this.putOrderedCacheBehavior(config.orderedCacheBehavior ?? new TerraformCloudfrontDistributionOrderedCacheBehaviorListAttribute(this, 'ordered_cache_behavior', undefined));
    this.putOrigin(config.origin);
    this.putOriginGroup(config.originGroup ?? new TerraformCloudfrontDistributionOriginGroupSetAttribute(this, 'origin_group', undefined));
    this.putRestrictions(config.restrictions);
    this.putViewerCertificate(config.viewerCertificate);
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // active_trusted_signers - computed: true, optional: false, required: false
  private _activeTrustedSigners: cdktf.TerraformStringMapAttribute;
  public get activeTrustedSigners() {
    return this._activeTrustedSigners;
  }

  // aliases - computed: false, optional: true, required: false
  private _aliases!: cdktf.TerraformStringSetAttribute;
  public get aliases() {
    return this._aliases;
  }
  public putAliases(value: cdktf.TerraformStringSet | undefined) {
    if (value === undefined) {
      this._aliases.resetInternal();
    }
    else {
      this._aliases = cdktf.TerraformStringSetAttribute.construct(this, 'aliases', value);
    }
  }

  // arn - computed: true, optional: false, required: false
  private _arn: cdktf.TerraformStringAttribute;
  public get arn() {
    return this._arn;
  }

  // caller_reference - computed: true, optional: false, required: false
  private _callerReference: cdktf.TerraformStringAttribute;
  public get callerReference() {
    return this._callerReference;
  }

  // comment - computed: false, optional: true, required: false
  private _comment!: cdktf.TerraformStringAttribute;
  public get comment() {
    return this._comment;
  }
  public putComment(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._comment.resetInternal();
    }
    else {
      this._comment = cdktf.TerraformStringAttribute.construct(this, 'comment', value);
    }
  }

  // default_root_object - computed: false, optional: true, required: false
  private _defaultRootObject!: cdktf.TerraformStringAttribute;
  public get defaultRootObject() {
    return this._defaultRootObject;
  }
  public putDefaultRootObject(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._defaultRootObject.resetInternal();
    }
    else {
      this._defaultRootObject = cdktf.TerraformStringAttribute.construct(this, 'default_root_object', value);
    }
  }

  // domain_name - computed: true, optional: false, required: false
  private _domainName: cdktf.TerraformStringAttribute;
  public get domainName() {
    return this._domainName;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled!: cdktf.TerraformBooleanAttribute;
  public get enabled() {
    return this._enabled;
  }
  public putEnabled(value: cdktf.TerraformBoolean) {
    this._enabled = cdktf.TerraformBooleanAttribute.construct(this, 'enabled', value);
  }

  // etag - computed: true, optional: false, required: false
  private _etag: cdktf.TerraformStringAttribute;
  public get etag() {
    return this._etag;
  }

  // hosted_zone_id - computed: true, optional: false, required: false
  private _hostedZoneId: cdktf.TerraformStringAttribute;
  public get hostedZoneId() {
    return this._hostedZoneId;
  }

  // http_version - computed: false, optional: true, required: false
  private _httpVersion!: cdktf.TerraformStringAttribute;
  public get httpVersion() {
    return this._httpVersion;
  }
  public putHttpVersion(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._httpVersion.resetInternal();
    }
    else {
      this._httpVersion = cdktf.TerraformStringAttribute.construct(this, 'http_version', value);
    }
  }

  // id - computed: true, optional: true, required: false
  private _id: cdktf.TerraformStringAttribute;
  public get id() {
    return this._id;
  }

  // in_progress_validation_batches - computed: true, optional: false, required: false
  private _inProgressValidationBatches: cdktf.TerraformNumberAttribute;
  public get inProgressValidationBatches() {
    return this._inProgressValidationBatches;
  }

  // is_ipv6_enabled - computed: false, optional: true, required: false
  private _isIpv6Enabled!: cdktf.TerraformBooleanAttribute;
  public get isIpv6Enabled() {
    return this._isIpv6Enabled;
  }
  public putIsIpv6Enabled(value: cdktf.TerraformBoolean | undefined) {
    if (value === undefined) {
      this._isIpv6Enabled.resetInternal();
    }
    else {
      this._isIpv6Enabled = cdktf.TerraformBooleanAttribute.construct(this, 'is_ipv6_enabled', value);
    }
  }

  // last_modified_time - computed: true, optional: false, required: false
  private _lastModifiedTime: cdktf.TerraformStringAttribute;
  public get lastModifiedTime() {
    return this._lastModifiedTime;
  }

  // price_class - computed: false, optional: true, required: false
  private _priceClass!: cdktf.TerraformStringAttribute;
  public get priceClass() {
    return this._priceClass;
  }
  public putPriceClass(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._priceClass.resetInternal();
    }
    else {
      this._priceClass = cdktf.TerraformStringAttribute.construct(this, 'price_class', value);
    }
  }

  // retain_on_delete - computed: false, optional: true, required: false
  private _retainOnDelete!: cdktf.TerraformBooleanAttribute;
  public get retainOnDelete() {
    return this._retainOnDelete;
  }
  public putRetainOnDelete(value: cdktf.TerraformBoolean | undefined) {
    if (value === undefined) {
      this._retainOnDelete.resetInternal();
    }
    else {
      this._retainOnDelete = cdktf.TerraformBooleanAttribute.construct(this, 'retain_on_delete', value);
    }
  }

  // status - computed: true, optional: false, required: false
  private _status: cdktf.TerraformStringAttribute;
  public get status() {
    return this._status;
  }

  // tags - computed: false, optional: true, required: false
  private _tags!: cdktf.TerraformStringMapAttribute;
  public get tags() {
    return this._tags;
  }
  public putTags(value: cdktf.TerraformStringMap | undefined) {
    if (value === undefined) {
      this._tags.resetInternal();
    }
    else {
      this._tags = cdktf.TerraformStringMapAttribute.construct(this, 'tags', value);
    }
  }

  // wait_for_deployment - computed: false, optional: true, required: false
  private _waitForDeployment!: cdktf.TerraformBooleanAttribute;
  public get waitForDeployment() {
    return this._waitForDeployment;
  }
  public putWaitForDeployment(value: cdktf.TerraformBoolean | undefined) {
    if (value === undefined) {
      this._waitForDeployment.resetInternal();
    }
    else {
      this._waitForDeployment = cdktf.TerraformBooleanAttribute.construct(this, 'wait_for_deployment', value);
    }
  }

  // web_acl_id - computed: false, optional: true, required: false
  private _webAclId!: cdktf.TerraformStringAttribute;
  public get webAclId() {
    return this._webAclId;
  }
  public putWebAclId(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._webAclId.resetInternal();
    }
    else {
      this._webAclId = cdktf.TerraformStringAttribute.construct(this, 'web_acl_id', value);
    }
  }

  // cache_behavior - computed: false, optional: true, required: false
  private _cacheBehavior!: TerraformCloudfrontDistributionCacheBehaviorSetAttribute;
  public get cacheBehavior() {
    return this._cacheBehavior;
  }
  public putCacheBehavior(value: TerraformCloudfrontDistributionCacheBehaviorSet | undefined) {
    if (value === undefined) {
      this._cacheBehavior.resetInternal();
    }
    else {
      this._cacheBehavior = TerraformCloudfrontDistributionCacheBehaviorSetAttribute.construct(this, 'cache_behavior', value);
    }
  }

  // custom_error_response - computed: false, optional: true, required: false
  private _customErrorResponse!: TerraformCloudfrontDistributionCustomErrorResponseSetAttribute;
  public get customErrorResponse() {
    return this._customErrorResponse;
  }
  public putCustomErrorResponse(value: TerraformCloudfrontDistributionCustomErrorResponseSet | undefined) {
    if (value === undefined) {
      this._customErrorResponse.resetInternal();
    }
    else {
      this._customErrorResponse = TerraformCloudfrontDistributionCustomErrorResponseSetAttribute.construct(this, 'custom_error_response', value);
    }
  }

  // default_cache_behavior - computed: false, optional: false, required: true
  private _defaultCacheBehavior!: TerraformCloudfrontDistributionDefaultCacheBehaviorListAttribute;
  public get defaultCacheBehavior() {
    return this._defaultCacheBehavior;
  }
  public putDefaultCacheBehavior(value: TerraformCloudfrontDistributionDefaultCacheBehaviorList) {
    this._defaultCacheBehavior = TerraformCloudfrontDistributionDefaultCacheBehaviorListAttribute.construct(this, 'default_cache_behavior', value);
  }

  // logging_config - computed: false, optional: true, required: false
  private _loggingConfig!: TerraformCloudfrontDistributionLoggingConfigListAttribute;
  public get loggingConfig() {
    return this._loggingConfig;
  }
  public putLoggingConfig(value: TerraformCloudfrontDistributionLoggingConfigList | undefined) {
    if (value === undefined) {
      this._loggingConfig.resetInternal();
    }
    else {
      this._loggingConfig = TerraformCloudfrontDistributionLoggingConfigListAttribute.construct(this, 'logging_config', value);
    }
  }

  // ordered_cache_behavior - computed: false, optional: true, required: false
  private _orderedCacheBehavior!: TerraformCloudfrontDistributionOrderedCacheBehaviorListAttribute;
  public get orderedCacheBehavior() {
    return this._orderedCacheBehavior;
  }
  public putOrderedCacheBehavior(value: TerraformCloudfrontDistributionOrderedCacheBehaviorList | undefined) {
    if (value === undefined) {
      this._orderedCacheBehavior.resetInternal();
    }
    else {
      this._orderedCacheBehavior = TerraformCloudfrontDistributionOrderedCacheBehaviorListAttribute.construct(this, 'ordered_cache_behavior', value);
    }
  }

  // origin - computed: false, optional: false, required: true
  private _origin!: TerraformCloudfrontDistributionOriginSetAttribute;
  public get origin() {
    return this._origin;
  }
  public putOrigin(value: TerraformCloudfrontDistributionOriginSet) {
    this._origin = TerraformCloudfrontDistributionOriginSetAttribute.construct(this, 'origin', value);
  }

  // origin_group - computed: false, optional: true, required: false
  private _originGroup!: TerraformCloudfrontDistributionOriginGroupSetAttribute;
  public get originGroup() {
    return this._originGroup;
  }
  public putOriginGroup(value: TerraformCloudfrontDistributionOriginGroupSet | undefined) {
    if (value === undefined) {
      this._originGroup.resetInternal();
    }
    else {
      this._originGroup = TerraformCloudfrontDistributionOriginGroupSetAttribute.construct(this, 'origin_group', value);
    }
  }

  // restrictions - computed: false, optional: false, required: true
  private _restrictions!: TerraformCloudfrontDistributionRestrictionsListAttribute;
  public get restrictions() {
    return this._restrictions;
  }
  public putRestrictions(value: TerraformCloudfrontDistributionRestrictionsList) {
    this._restrictions = TerraformCloudfrontDistributionRestrictionsListAttribute.construct(this, 'restrictions', value);
  }

  // viewer_certificate - computed: false, optional: false, required: true
  private _viewerCertificate!: TerraformCloudfrontDistributionViewerCertificateListAttribute;
  public get viewerCertificate() {
    return this._viewerCertificate;
  }
  public putViewerCertificate(value: TerraformCloudfrontDistributionViewerCertificateList) {
    this._viewerCertificate = TerraformCloudfrontDistributionViewerCertificateListAttribute.construct(this, 'viewer_certificate', value);
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      aliases: this._aliases.toTerraform(),
      comment: this._comment.toTerraform(),
      default_root_object: this._defaultRootObject.toTerraform(),
      enabled: this._enabled.toTerraform(),
      http_version: this._httpVersion.toTerraform(),
      is_ipv6_enabled: this._isIpv6Enabled.toTerraform(),
      price_class: this._priceClass.toTerraform(),
      retain_on_delete: this._retainOnDelete.toTerraform(),
      tags: this._tags.toTerraform(),
      wait_for_deployment: this._waitForDeployment.toTerraform(),
      web_acl_id: this._webAclId.toTerraform(),
      cache_behavior: this._cacheBehavior.toTerraform(),
      custom_error_response: this._customErrorResponse.toTerraform(),
      default_cache_behavior: this._defaultCacheBehavior.toTerraform(),
      logging_config: this._loggingConfig.toTerraform(),
      ordered_cache_behavior: this._orderedCacheBehavior.toTerraform(),
      origin: this._origin.toTerraform(),
      origin_group: this._originGroup.toTerraform(),
      restrictions: this._restrictions.toTerraform(),
      viewer_certificate: this._viewerCertificate.toTerraform(),
    };
  }
}
"
`;

exports[`generate a fms admin account with an empty options interface 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/fms_admin_account.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface FmsAdminAccountConfig extends cdktf.TerraformMetaArguments {
  readonly accountId?: cdktf.TerraformString;
}

// Resource

export class FmsAdminAccount extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: FmsAdminAccountConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_fms_admin_account',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putAccountId(config.accountId ?? new cdktf.TerraformStringAttribute(this, 'account_id', undefined));
    this._id = new cdktf.TerraformStringAttribute(this, 'id', undefined)
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // account_id - computed: true, optional: true, required: false
  private _accountId!: cdktf.TerraformStringAttribute;
  public get accountId() {
    return this._accountId;
  }
  public putAccountId(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._accountId.resetInternal();
    }
    else {
      this._accountId = cdktf.TerraformStringAttribute.construct(this, 'account_id', value);
    }
  }

  // id - computed: true, optional: true, required: false
  private _id: cdktf.TerraformStringAttribute;
  public get id() {
    return this._id;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      account_id: this._accountId.toTerraform(),
    };
  }
}
"
`;

exports[`generate a s3 bucket resource 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/s3_bucket.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface S3BucketConfig extends cdktf.TerraformMetaArguments {
  readonly accelerationStatus?: cdktf.TerraformString;
  readonly acl?: cdktf.TerraformString;
  readonly bucket?: cdktf.TerraformString;
  readonly bucketPrefix?: cdktf.TerraformString;
  readonly forceDestroy?: cdktf.TerraformBoolean;
  readonly hostedZoneId?: cdktf.TerraformString;
  readonly policy?: cdktf.TerraformString;
  readonly region?: cdktf.TerraformString;
  readonly requestPayer?: cdktf.TerraformString;
  readonly tags?: cdktf.TerraformStringMap;
  readonly websiteDomain?: cdktf.TerraformString;
  readonly websiteEndpoint?: cdktf.TerraformString;
  /** cors_rule block */
  readonly corsRule?: TerraformS3BucketCorsRuleList;
  /** grant block */
  readonly grant?: TerraformS3BucketGrantSet;
  /** lifecycle_rule block */
  readonly lifecycleRule?: TerraformS3BucketLifecycleRuleList;
  /** logging block */
  readonly logging?: TerraformS3BucketLoggingSet;
  /** object_lock_configuration block */
  readonly objectLockConfiguration?: TerraformS3BucketObjectLockConfigurationList;
  /** replication_configuration block */
  readonly replicationConfiguration?: TerraformS3BucketReplicationConfigurationList;
  /** server_side_encryption_configuration block */
  readonly serverSideEncryptionConfiguration?: TerraformS3BucketServerSideEncryptionConfigurationList;
  /** versioning block */
  readonly versioning?: TerraformS3BucketVersioningList;
  /** website block */
  readonly website?: TerraformS3BucketWebsiteList;
}
export interface S3BucketCorsRule {
  readonly allowedHeaders?: cdktf.TerraformStringList;
  readonly allowedMethods: cdktf.TerraformStringList;
  readonly allowedOrigins: cdktf.TerraformStringList;
  readonly exposeHeaders?: cdktf.TerraformStringList;
  readonly maxAgeSeconds?: cdktf.TerraformNumber;
}

function s3BucketCorsRuleToTerraform(struct?: S3BucketCorsRule): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    allowed_headers: struct!.allowedHeaders instanceof cdktf.TerraformAttribute ? struct!.allowedHeaders.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.allowedHeaders),
    allowed_methods: struct!.allowedMethods instanceof cdktf.TerraformAttribute ? struct!.allowedMethods.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.allowedMethods),
    allowed_origins: struct!.allowedOrigins instanceof cdktf.TerraformAttribute ? struct!.allowedOrigins.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.allowedOrigins),
    expose_headers: struct!.exposeHeaders instanceof cdktf.TerraformAttribute ? struct!.exposeHeaders.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.exposeHeaders),
    max_age_seconds: struct!.maxAgeSeconds instanceof cdktf.TerraformAttribute ? struct!.maxAgeSeconds.toTerraform() : cdktf.numberToTerraform(struct!.maxAgeSeconds),
  }
}

export class TerraformS3BucketCorsRuleAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketCorsRule, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketCorsRule | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketCorsRule | undefined) {
    if (!(value instanceof TerraformS3BucketCorsRuleAttribute)) {
      return new TerraformS3BucketCorsRuleAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketCorsRuleAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketCorsRuleToTerraform(this.internalValue);
  }


  // allowed_headers - computed: false, optional: true, required: false
  public get allowedHeaders() {
    return cdktf.TerraformStringListAttribute.construct(this, 'allowed_headers', this.internalValue?.allowedHeaders);
  }

  // allowed_methods - computed: false, optional: false, required: true
  public get allowedMethods() {
    return cdktf.TerraformStringListAttribute.construct(this, 'allowed_methods', this.internalValue?.allowedMethods);
  }

  // allowed_origins - computed: false, optional: false, required: true
  public get allowedOrigins() {
    return cdktf.TerraformStringListAttribute.construct(this, 'allowed_origins', this.internalValue?.allowedOrigins);
  }

  // expose_headers - computed: false, optional: true, required: false
  public get exposeHeaders() {
    return cdktf.TerraformStringListAttribute.construct(this, 'expose_headers', this.internalValue?.exposeHeaders);
  }

  // max_age_seconds - computed: false, optional: true, required: false
  public get maxAgeSeconds() {
    return cdktf.TerraformNumberAttribute.construct(this, 'max_age_seconds', this.internalValue?.maxAgeSeconds);
  }
}

export type TerraformS3BucketCorsRule = S3BucketCorsRule | TerraformS3BucketCorsRuleAttribute;

export class TerraformS3BucketCorsRuleListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketCorsRule[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketCorsRule[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketCorsRuleList | undefined) {
    if (!(value instanceof TerraformS3BucketCorsRuleListAttribute)) {
      return new TerraformS3BucketCorsRuleListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketCorsRuleListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketCorsRuleToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketCorsRuleAttribute {
    return new TerraformS3BucketCorsRuleAttribute(this, index.toString());
  }
}

export type TerraformS3BucketCorsRuleList = S3BucketCorsRule[] | TerraformS3BucketCorsRuleListAttribute;

export interface S3BucketGrant {
  readonly id?: cdktf.TerraformString;
  readonly permissions: cdktf.TerraformStringSet;
  readonly type: cdktf.TerraformString;
  readonly uri?: cdktf.TerraformString;
}

function s3BucketGrantToTerraform(struct?: S3BucketGrant): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    id: struct!.id instanceof cdktf.TerraformAttribute ? struct!.id.toTerraform() : cdktf.stringToTerraform(struct!.id),
    permissions: struct!.permissions instanceof cdktf.TerraformAttribute ? struct!.permissions.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.permissions),
    type: struct!.type instanceof cdktf.TerraformAttribute ? struct!.type.toTerraform() : cdktf.stringToTerraform(struct!.type),
    uri: struct!.uri instanceof cdktf.TerraformAttribute ? struct!.uri.toTerraform() : cdktf.stringToTerraform(struct!.uri),
  }
}

export class TerraformS3BucketGrantAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketGrant, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketGrant | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketGrant | undefined) {
    if (!(value instanceof TerraformS3BucketGrantAttribute)) {
      return new TerraformS3BucketGrantAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketGrantAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketGrantToTerraform(this.internalValue);
  }


  // id - computed: false, optional: true, required: false
  public get id() {
    return cdktf.TerraformStringAttribute.construct(this, 'id', this.internalValue?.id);
  }

  // permissions - computed: false, optional: false, required: true
  public get permissions() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'permissions', this.internalValue?.permissions);
  }

  // type - computed: false, optional: false, required: true
  public get type() {
    return cdktf.TerraformStringAttribute.construct(this, 'type', this.internalValue?.type);
  }

  // uri - computed: false, optional: true, required: false
  public get uri() {
    return cdktf.TerraformStringAttribute.construct(this, 'uri', this.internalValue?.uri);
  }
}

export type TerraformS3BucketGrant = S3BucketGrant | TerraformS3BucketGrantAttribute;

export class TerraformS3BucketGrantSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketGrant[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketGrant[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketGrantSet | undefined) {
    if (!(value instanceof TerraformS3BucketGrantSetAttribute)) {
      return new TerraformS3BucketGrantSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketGrantSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(s3BucketGrantToTerraform)(this.internalValue);
  }

  public toList(): TerraformS3BucketGrantListAttribute {
    return new TerraformS3BucketGrantListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformS3BucketGrantSet = S3BucketGrant[] | TerraformS3BucketGrantSetAttribute;

export class TerraformS3BucketGrantListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketGrant[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketGrant[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketGrantList | undefined) {
    if (!(value instanceof TerraformS3BucketGrantListAttribute)) {
      return new TerraformS3BucketGrantListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketGrantListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketGrantToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketGrantAttribute {
    return new TerraformS3BucketGrantAttribute(this, index.toString());
  }
}

export type TerraformS3BucketGrantList = S3BucketGrant[] | TerraformS3BucketGrantListAttribute;

export interface S3BucketLifecycleRuleExpiration {
  readonly date?: cdktf.TerraformString;
  readonly days?: cdktf.TerraformNumber;
  readonly expiredObjectDeleteMarker?: cdktf.TerraformBoolean;
}

function s3BucketLifecycleRuleExpirationToTerraform(struct?: S3BucketLifecycleRuleExpiration): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    date: struct!.date instanceof cdktf.TerraformAttribute ? struct!.date.toTerraform() : cdktf.stringToTerraform(struct!.date),
    days: struct!.days instanceof cdktf.TerraformAttribute ? struct!.days.toTerraform() : cdktf.numberToTerraform(struct!.days),
    expired_object_delete_marker: struct!.expiredObjectDeleteMarker instanceof cdktf.TerraformAttribute ? struct!.expiredObjectDeleteMarker.toTerraform() : cdktf.booleanToTerraform(struct!.expiredObjectDeleteMarker),
  }
}

export class TerraformS3BucketLifecycleRuleExpirationAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRuleExpiration, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRuleExpiration | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRuleExpiration | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleExpirationAttribute)) {
      return new TerraformS3BucketLifecycleRuleExpirationAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleExpirationAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketLifecycleRuleExpirationToTerraform(this.internalValue);
  }


  // date - computed: false, optional: true, required: false
  public get date() {
    return cdktf.TerraformStringAttribute.construct(this, 'date', this.internalValue?.date);
  }

  // days - computed: false, optional: true, required: false
  public get days() {
    return cdktf.TerraformNumberAttribute.construct(this, 'days', this.internalValue?.days);
  }

  // expired_object_delete_marker - computed: false, optional: true, required: false
  public get expiredObjectDeleteMarker() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'expired_object_delete_marker', this.internalValue?.expiredObjectDeleteMarker);
  }
}

export type TerraformS3BucketLifecycleRuleExpiration = S3BucketLifecycleRuleExpiration | TerraformS3BucketLifecycleRuleExpirationAttribute;

export class TerraformS3BucketLifecycleRuleExpirationSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRuleExpiration[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRuleExpiration[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRuleExpirationSet | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleExpirationSetAttribute)) {
      return new TerraformS3BucketLifecycleRuleExpirationSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleExpirationSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(s3BucketLifecycleRuleExpirationToTerraform)(this.internalValue);
  }

  public toList(): TerraformS3BucketLifecycleRuleExpirationListAttribute {
    return new TerraformS3BucketLifecycleRuleExpirationListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformS3BucketLifecycleRuleExpirationSet = S3BucketLifecycleRuleExpiration[] | TerraformS3BucketLifecycleRuleExpirationSetAttribute;

export class TerraformS3BucketLifecycleRuleExpirationListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRuleExpiration[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRuleExpiration[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRuleExpirationList | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleExpirationListAttribute)) {
      return new TerraformS3BucketLifecycleRuleExpirationListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleExpirationListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketLifecycleRuleExpirationToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketLifecycleRuleExpirationAttribute {
    return new TerraformS3BucketLifecycleRuleExpirationAttribute(this, index.toString());
  }
}

export type TerraformS3BucketLifecycleRuleExpirationList = S3BucketLifecycleRuleExpiration[] | TerraformS3BucketLifecycleRuleExpirationListAttribute;

export interface S3BucketLifecycleRuleNoncurrentVersionExpiration {
  readonly days?: cdktf.TerraformNumber;
}

function s3BucketLifecycleRuleNoncurrentVersionExpirationToTerraform(struct?: S3BucketLifecycleRuleNoncurrentVersionExpiration): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    days: struct!.days instanceof cdktf.TerraformAttribute ? struct!.days.toTerraform() : cdktf.numberToTerraform(struct!.days),
  }
}

export class TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRuleNoncurrentVersionExpiration, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRuleNoncurrentVersionExpiration | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRuleNoncurrentVersionExpiration | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationAttribute)) {
      return new TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketLifecycleRuleNoncurrentVersionExpirationToTerraform(this.internalValue);
  }


  // days - computed: false, optional: true, required: false
  public get days() {
    return cdktf.TerraformNumberAttribute.construct(this, 'days', this.internalValue?.days);
  }
}

export type TerraformS3BucketLifecycleRuleNoncurrentVersionExpiration = S3BucketLifecycleRuleNoncurrentVersionExpiration | TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationAttribute;

export class TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRuleNoncurrentVersionExpiration[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRuleNoncurrentVersionExpiration[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationSet | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationSetAttribute)) {
      return new TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(s3BucketLifecycleRuleNoncurrentVersionExpirationToTerraform)(this.internalValue);
  }

  public toList(): TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationListAttribute {
    return new TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationSet = S3BucketLifecycleRuleNoncurrentVersionExpiration[] | TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationSetAttribute;

export class TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRuleNoncurrentVersionExpiration[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRuleNoncurrentVersionExpiration[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationList | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationListAttribute)) {
      return new TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketLifecycleRuleNoncurrentVersionExpirationToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationAttribute {
    return new TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationAttribute(this, index.toString());
  }
}

export type TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationList = S3BucketLifecycleRuleNoncurrentVersionExpiration[] | TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationListAttribute;

export interface S3BucketLifecycleRuleNoncurrentVersionTransition {
  readonly days?: cdktf.TerraformNumber;
  readonly storageClass: cdktf.TerraformString;
}

function s3BucketLifecycleRuleNoncurrentVersionTransitionToTerraform(struct?: S3BucketLifecycleRuleNoncurrentVersionTransition): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    days: struct!.days instanceof cdktf.TerraformAttribute ? struct!.days.toTerraform() : cdktf.numberToTerraform(struct!.days),
    storage_class: struct!.storageClass instanceof cdktf.TerraformAttribute ? struct!.storageClass.toTerraform() : cdktf.stringToTerraform(struct!.storageClass),
  }
}

export class TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRuleNoncurrentVersionTransition, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRuleNoncurrentVersionTransition | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRuleNoncurrentVersionTransition | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionAttribute)) {
      return new TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketLifecycleRuleNoncurrentVersionTransitionToTerraform(this.internalValue);
  }


  // days - computed: false, optional: true, required: false
  public get days() {
    return cdktf.TerraformNumberAttribute.construct(this, 'days', this.internalValue?.days);
  }

  // storage_class - computed: false, optional: false, required: true
  public get storageClass() {
    return cdktf.TerraformStringAttribute.construct(this, 'storage_class', this.internalValue?.storageClass);
  }
}

export type TerraformS3BucketLifecycleRuleNoncurrentVersionTransition = S3BucketLifecycleRuleNoncurrentVersionTransition | TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionAttribute;

export class TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRuleNoncurrentVersionTransition[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRuleNoncurrentVersionTransition[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionSet | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionSetAttribute)) {
      return new TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(s3BucketLifecycleRuleNoncurrentVersionTransitionToTerraform)(this.internalValue);
  }

  public toList(): TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionListAttribute {
    return new TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionSet = S3BucketLifecycleRuleNoncurrentVersionTransition[] | TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionSetAttribute;

export class TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRuleNoncurrentVersionTransition[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRuleNoncurrentVersionTransition[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionList | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionListAttribute)) {
      return new TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketLifecycleRuleNoncurrentVersionTransitionToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionAttribute {
    return new TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionAttribute(this, index.toString());
  }
}

export type TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionList = S3BucketLifecycleRuleNoncurrentVersionTransition[] | TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionListAttribute;

export interface S3BucketLifecycleRuleTransition {
  readonly date?: cdktf.TerraformString;
  readonly days?: cdktf.TerraformNumber;
  readonly storageClass: cdktf.TerraformString;
}

function s3BucketLifecycleRuleTransitionToTerraform(struct?: S3BucketLifecycleRuleTransition): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    date: struct!.date instanceof cdktf.TerraformAttribute ? struct!.date.toTerraform() : cdktf.stringToTerraform(struct!.date),
    days: struct!.days instanceof cdktf.TerraformAttribute ? struct!.days.toTerraform() : cdktf.numberToTerraform(struct!.days),
    storage_class: struct!.storageClass instanceof cdktf.TerraformAttribute ? struct!.storageClass.toTerraform() : cdktf.stringToTerraform(struct!.storageClass),
  }
}

export class TerraformS3BucketLifecycleRuleTransitionAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRuleTransition, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRuleTransition | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRuleTransition | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleTransitionAttribute)) {
      return new TerraformS3BucketLifecycleRuleTransitionAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleTransitionAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketLifecycleRuleTransitionToTerraform(this.internalValue);
  }


  // date - computed: false, optional: true, required: false
  public get date() {
    return cdktf.TerraformStringAttribute.construct(this, 'date', this.internalValue?.date);
  }

  // days - computed: false, optional: true, required: false
  public get days() {
    return cdktf.TerraformNumberAttribute.construct(this, 'days', this.internalValue?.days);
  }

  // storage_class - computed: false, optional: false, required: true
  public get storageClass() {
    return cdktf.TerraformStringAttribute.construct(this, 'storage_class', this.internalValue?.storageClass);
  }
}

export type TerraformS3BucketLifecycleRuleTransition = S3BucketLifecycleRuleTransition | TerraformS3BucketLifecycleRuleTransitionAttribute;

export class TerraformS3BucketLifecycleRuleTransitionSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRuleTransition[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRuleTransition[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRuleTransitionSet | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleTransitionSetAttribute)) {
      return new TerraformS3BucketLifecycleRuleTransitionSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleTransitionSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(s3BucketLifecycleRuleTransitionToTerraform)(this.internalValue);
  }

  public toList(): TerraformS3BucketLifecycleRuleTransitionListAttribute {
    return new TerraformS3BucketLifecycleRuleTransitionListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformS3BucketLifecycleRuleTransitionSet = S3BucketLifecycleRuleTransition[] | TerraformS3BucketLifecycleRuleTransitionSetAttribute;

export class TerraformS3BucketLifecycleRuleTransitionListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRuleTransition[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRuleTransition[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRuleTransitionList | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleTransitionListAttribute)) {
      return new TerraformS3BucketLifecycleRuleTransitionListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleTransitionListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketLifecycleRuleTransitionToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketLifecycleRuleTransitionAttribute {
    return new TerraformS3BucketLifecycleRuleTransitionAttribute(this, index.toString());
  }
}

export type TerraformS3BucketLifecycleRuleTransitionList = S3BucketLifecycleRuleTransition[] | TerraformS3BucketLifecycleRuleTransitionListAttribute;

export interface S3BucketLifecycleRule {
  readonly abortIncompleteMultipartUploadDays?: cdktf.TerraformNumber;
  readonly enabled: cdktf.TerraformBoolean;
  readonly id?: cdktf.TerraformString;
  readonly prefix?: cdktf.TerraformString;
  readonly tags?: cdktf.TerraformStringMap;
  /** expiration block */
  readonly expiration?: TerraformS3BucketLifecycleRuleExpirationSet;
  /** noncurrent_version_expiration block */
  readonly noncurrentVersionExpiration?: TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationSet;
  /** noncurrent_version_transition block */
  readonly noncurrentVersionTransition?: TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionSet;
  /** transition block */
  readonly transition?: TerraformS3BucketLifecycleRuleTransitionSet;
}

function s3BucketLifecycleRuleToTerraform(struct?: S3BucketLifecycleRule): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    abort_incomplete_multipart_upload_days: struct!.abortIncompleteMultipartUploadDays instanceof cdktf.TerraformAttribute ? struct!.abortIncompleteMultipartUploadDays.toTerraform() : cdktf.numberToTerraform(struct!.abortIncompleteMultipartUploadDays),
    enabled: struct!.enabled instanceof cdktf.TerraformAttribute ? struct!.enabled.toTerraform() : cdktf.booleanToTerraform(struct!.enabled),
    id: struct!.id instanceof cdktf.TerraformAttribute ? struct!.id.toTerraform() : cdktf.stringToTerraform(struct!.id),
    prefix: struct!.prefix instanceof cdktf.TerraformAttribute ? struct!.prefix.toTerraform() : cdktf.stringToTerraform(struct!.prefix),
    tags: struct!.tags instanceof cdktf.TerraformAttribute ? struct!.tags.toTerraform() : cdktf.hashMapper(cdktf.stringToTerraform)(struct!.tags),
    expiration: struct!.expiration instanceof cdktf.TerraformAttribute ? struct!.expiration.toTerraform() : cdktf.setMapper(s3BucketLifecycleRuleExpirationToTerraform)(struct!.expiration),
    noncurrent_version_expiration: struct!.noncurrentVersionExpiration instanceof cdktf.TerraformAttribute ? struct!.noncurrentVersionExpiration.toTerraform() : cdktf.setMapper(s3BucketLifecycleRuleNoncurrentVersionExpirationToTerraform)(struct!.noncurrentVersionExpiration),
    noncurrent_version_transition: struct!.noncurrentVersionTransition instanceof cdktf.TerraformAttribute ? struct!.noncurrentVersionTransition.toTerraform() : cdktf.setMapper(s3BucketLifecycleRuleNoncurrentVersionTransitionToTerraform)(struct!.noncurrentVersionTransition),
    transition: struct!.transition instanceof cdktf.TerraformAttribute ? struct!.transition.toTerraform() : cdktf.setMapper(s3BucketLifecycleRuleTransitionToTerraform)(struct!.transition),
  }
}

export class TerraformS3BucketLifecycleRuleAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRule, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRule | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRule | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleAttribute)) {
      return new TerraformS3BucketLifecycleRuleAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketLifecycleRuleToTerraform(this.internalValue);
  }


  // abort_incomplete_multipart_upload_days - computed: false, optional: true, required: false
  public get abortIncompleteMultipartUploadDays() {
    return cdktf.TerraformNumberAttribute.construct(this, 'abort_incomplete_multipart_upload_days', this.internalValue?.abortIncompleteMultipartUploadDays);
  }

  // enabled - computed: false, optional: false, required: true
  public get enabled() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'enabled', this.internalValue?.enabled);
  }

  // id - computed: true, optional: true, required: false
  public get id() {
    return cdktf.TerraformStringAttribute.construct(this, 'id', this.internalValue?.id);
  }

  // prefix - computed: false, optional: true, required: false
  public get prefix() {
    return cdktf.TerraformStringAttribute.construct(this, 'prefix', this.internalValue?.prefix);
  }

  // tags - computed: false, optional: true, required: false
  public get tags() {
    return cdktf.TerraformStringMapAttribute.construct(this, 'tags', this.internalValue?.tags);
  }

  // expiration - computed: false, optional: true, required: false
  public get expiration() {
    return new TerraformS3BucketLifecycleRuleExpirationSetAttribute(this, 'expiration');
  }

  // noncurrent_version_expiration - computed: false, optional: true, required: false
  public get noncurrentVersionExpiration() {
    return new TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationSetAttribute(this, 'noncurrent_version_expiration');
  }

  // noncurrent_version_transition - computed: false, optional: true, required: false
  public get noncurrentVersionTransition() {
    return new TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionSetAttribute(this, 'noncurrent_version_transition');
  }

  // transition - computed: false, optional: true, required: false
  public get transition() {
    return new TerraformS3BucketLifecycleRuleTransitionSetAttribute(this, 'transition');
  }
}

export type TerraformS3BucketLifecycleRule = S3BucketLifecycleRule | TerraformS3BucketLifecycleRuleAttribute;

export class TerraformS3BucketLifecycleRuleListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLifecycleRule[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLifecycleRule[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLifecycleRuleList | undefined) {
    if (!(value instanceof TerraformS3BucketLifecycleRuleListAttribute)) {
      return new TerraformS3BucketLifecycleRuleListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLifecycleRuleListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketLifecycleRuleToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketLifecycleRuleAttribute {
    return new TerraformS3BucketLifecycleRuleAttribute(this, index.toString());
  }
}

export type TerraformS3BucketLifecycleRuleList = S3BucketLifecycleRule[] | TerraformS3BucketLifecycleRuleListAttribute;

export interface S3BucketLogging {
  readonly targetBucket: cdktf.TerraformString;
  readonly targetPrefix?: cdktf.TerraformString;
}

function s3BucketLoggingToTerraform(struct?: S3BucketLogging): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    target_bucket: struct!.targetBucket instanceof cdktf.TerraformAttribute ? struct!.targetBucket.toTerraform() : cdktf.stringToTerraform(struct!.targetBucket),
    target_prefix: struct!.targetPrefix instanceof cdktf.TerraformAttribute ? struct!.targetPrefix.toTerraform() : cdktf.stringToTerraform(struct!.targetPrefix),
  }
}

export class TerraformS3BucketLoggingAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLogging, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLogging | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLogging | undefined) {
    if (!(value instanceof TerraformS3BucketLoggingAttribute)) {
      return new TerraformS3BucketLoggingAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLoggingAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketLoggingToTerraform(this.internalValue);
  }


  // target_bucket - computed: false, optional: false, required: true
  public get targetBucket() {
    return cdktf.TerraformStringAttribute.construct(this, 'target_bucket', this.internalValue?.targetBucket);
  }

  // target_prefix - computed: false, optional: true, required: false
  public get targetPrefix() {
    return cdktf.TerraformStringAttribute.construct(this, 'target_prefix', this.internalValue?.targetPrefix);
  }
}

export type TerraformS3BucketLogging = S3BucketLogging | TerraformS3BucketLoggingAttribute;

export class TerraformS3BucketLoggingSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLogging[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLogging[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLoggingSet | undefined) {
    if (!(value instanceof TerraformS3BucketLoggingSetAttribute)) {
      return new TerraformS3BucketLoggingSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLoggingSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(s3BucketLoggingToTerraform)(this.internalValue);
  }

  public toList(): TerraformS3BucketLoggingListAttribute {
    return new TerraformS3BucketLoggingListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformS3BucketLoggingSet = S3BucketLogging[] | TerraformS3BucketLoggingSetAttribute;

export class TerraformS3BucketLoggingListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketLogging[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketLogging[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketLoggingList | undefined) {
    if (!(value instanceof TerraformS3BucketLoggingListAttribute)) {
      return new TerraformS3BucketLoggingListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketLoggingListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketLoggingToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketLoggingAttribute {
    return new TerraformS3BucketLoggingAttribute(this, index.toString());
  }
}

export type TerraformS3BucketLoggingList = S3BucketLogging[] | TerraformS3BucketLoggingListAttribute;

export interface S3BucketObjectLockConfigurationRuleDefaultRetention {
  readonly days?: cdktf.TerraformNumber;
  readonly mode: cdktf.TerraformString;
  readonly years?: cdktf.TerraformNumber;
}

function s3BucketObjectLockConfigurationRuleDefaultRetentionToTerraform(struct?: S3BucketObjectLockConfigurationRuleDefaultRetention): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    days: struct!.days instanceof cdktf.TerraformAttribute ? struct!.days.toTerraform() : cdktf.numberToTerraform(struct!.days),
    mode: struct!.mode instanceof cdktf.TerraformAttribute ? struct!.mode.toTerraform() : cdktf.stringToTerraform(struct!.mode),
    years: struct!.years instanceof cdktf.TerraformAttribute ? struct!.years.toTerraform() : cdktf.numberToTerraform(struct!.years),
  }
}

export class TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketObjectLockConfigurationRuleDefaultRetention, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketObjectLockConfigurationRuleDefaultRetention | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketObjectLockConfigurationRuleDefaultRetention | undefined) {
    if (!(value instanceof TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionAttribute)) {
      return new TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketObjectLockConfigurationRuleDefaultRetentionToTerraform(this.internalValue);
  }


  // days - computed: false, optional: true, required: false
  public get days() {
    return cdktf.TerraformNumberAttribute.construct(this, 'days', this.internalValue?.days);
  }

  // mode - computed: false, optional: false, required: true
  public get mode() {
    return cdktf.TerraformStringAttribute.construct(this, 'mode', this.internalValue?.mode);
  }

  // years - computed: false, optional: true, required: false
  public get years() {
    return cdktf.TerraformNumberAttribute.construct(this, 'years', this.internalValue?.years);
  }
}

export type TerraformS3BucketObjectLockConfigurationRuleDefaultRetention = S3BucketObjectLockConfigurationRuleDefaultRetention | TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionAttribute;

export class TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketObjectLockConfigurationRuleDefaultRetention[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketObjectLockConfigurationRuleDefaultRetention[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionList | undefined) {
    if (!(value instanceof TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionListAttribute)) {
      return new TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketObjectLockConfigurationRuleDefaultRetentionToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionAttribute {
    return new TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionAttribute(this, index.toString());
  }
}

export type TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionList = S3BucketObjectLockConfigurationRuleDefaultRetention[] | TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionListAttribute;

export interface S3BucketObjectLockConfigurationRule {
  /** default_retention block */
  readonly defaultRetention: TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionList;
}

function s3BucketObjectLockConfigurationRuleToTerraform(struct?: S3BucketObjectLockConfigurationRule): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    default_retention: struct!.defaultRetention instanceof cdktf.TerraformAttribute ? struct!.defaultRetention.toTerraform() : cdktf.listMapper(s3BucketObjectLockConfigurationRuleDefaultRetentionToTerraform)(struct!.defaultRetention),
  }
}

export class TerraformS3BucketObjectLockConfigurationRuleAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketObjectLockConfigurationRule, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketObjectLockConfigurationRule | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketObjectLockConfigurationRule | undefined) {
    if (!(value instanceof TerraformS3BucketObjectLockConfigurationRuleAttribute)) {
      return new TerraformS3BucketObjectLockConfigurationRuleAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketObjectLockConfigurationRuleAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketObjectLockConfigurationRuleToTerraform(this.internalValue);
  }


  // default_retention - computed: false, optional: false, required: true
  public get defaultRetention() {
    return new TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionListAttribute(this, 'default_retention');
  }
}

export type TerraformS3BucketObjectLockConfigurationRule = S3BucketObjectLockConfigurationRule | TerraformS3BucketObjectLockConfigurationRuleAttribute;

export class TerraformS3BucketObjectLockConfigurationRuleListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketObjectLockConfigurationRule[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketObjectLockConfigurationRule[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketObjectLockConfigurationRuleList | undefined) {
    if (!(value instanceof TerraformS3BucketObjectLockConfigurationRuleListAttribute)) {
      return new TerraformS3BucketObjectLockConfigurationRuleListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketObjectLockConfigurationRuleListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketObjectLockConfigurationRuleToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketObjectLockConfigurationRuleAttribute {
    return new TerraformS3BucketObjectLockConfigurationRuleAttribute(this, index.toString());
  }
}

export type TerraformS3BucketObjectLockConfigurationRuleList = S3BucketObjectLockConfigurationRule[] | TerraformS3BucketObjectLockConfigurationRuleListAttribute;

export interface S3BucketObjectLockConfiguration {
  readonly objectLockEnabled: cdktf.TerraformString;
  /** rule block */
  readonly rule?: TerraformS3BucketObjectLockConfigurationRuleList;
}

function s3BucketObjectLockConfigurationToTerraform(struct?: S3BucketObjectLockConfiguration): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    object_lock_enabled: struct!.objectLockEnabled instanceof cdktf.TerraformAttribute ? struct!.objectLockEnabled.toTerraform() : cdktf.stringToTerraform(struct!.objectLockEnabled),
    rule: struct!.rule instanceof cdktf.TerraformAttribute ? struct!.rule.toTerraform() : cdktf.listMapper(s3BucketObjectLockConfigurationRuleToTerraform)(struct!.rule),
  }
}

export class TerraformS3BucketObjectLockConfigurationAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketObjectLockConfiguration, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketObjectLockConfiguration | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketObjectLockConfiguration | undefined) {
    if (!(value instanceof TerraformS3BucketObjectLockConfigurationAttribute)) {
      return new TerraformS3BucketObjectLockConfigurationAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketObjectLockConfigurationAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketObjectLockConfigurationToTerraform(this.internalValue);
  }


  // object_lock_enabled - computed: false, optional: false, required: true
  public get objectLockEnabled() {
    return cdktf.TerraformStringAttribute.construct(this, 'object_lock_enabled', this.internalValue?.objectLockEnabled);
  }

  // rule - computed: false, optional: true, required: false
  public get rule() {
    return new TerraformS3BucketObjectLockConfigurationRuleListAttribute(this, 'rule');
  }
}

export type TerraformS3BucketObjectLockConfiguration = S3BucketObjectLockConfiguration | TerraformS3BucketObjectLockConfigurationAttribute;

export class TerraformS3BucketObjectLockConfigurationListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketObjectLockConfiguration[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketObjectLockConfiguration[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketObjectLockConfigurationList | undefined) {
    if (!(value instanceof TerraformS3BucketObjectLockConfigurationListAttribute)) {
      return new TerraformS3BucketObjectLockConfigurationListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketObjectLockConfigurationListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketObjectLockConfigurationToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketObjectLockConfigurationAttribute {
    return new TerraformS3BucketObjectLockConfigurationAttribute(this, index.toString());
  }
}

export type TerraformS3BucketObjectLockConfigurationList = S3BucketObjectLockConfiguration[] | TerraformS3BucketObjectLockConfigurationListAttribute;

export interface S3BucketReplicationConfigurationRulesDestinationAccessControlTranslation {
  readonly owner: cdktf.TerraformString;
}

function s3BucketReplicationConfigurationRulesDestinationAccessControlTranslationToTerraform(struct?: S3BucketReplicationConfigurationRulesDestinationAccessControlTranslation): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    owner: struct!.owner instanceof cdktf.TerraformAttribute ? struct!.owner.toTerraform() : cdktf.stringToTerraform(struct!.owner),
  }
}

export class TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRulesDestinationAccessControlTranslation, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRulesDestinationAccessControlTranslation | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslation | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketReplicationConfigurationRulesDestinationAccessControlTranslationToTerraform(this.internalValue);
  }


  // owner - computed: false, optional: false, required: true
  public get owner() {
    return cdktf.TerraformStringAttribute.construct(this, 'owner', this.internalValue?.owner);
  }
}

export type TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslation = S3BucketReplicationConfigurationRulesDestinationAccessControlTranslation | TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationAttribute;

export class TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRulesDestinationAccessControlTranslation[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRulesDestinationAccessControlTranslation[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationList | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationListAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketReplicationConfigurationRulesDestinationAccessControlTranslationToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationAttribute {
    return new TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationAttribute(this, index.toString());
  }
}

export type TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationList = S3BucketReplicationConfigurationRulesDestinationAccessControlTranslation[] | TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationListAttribute;

export interface S3BucketReplicationConfigurationRulesDestination {
  readonly accountId?: cdktf.TerraformString;
  readonly bucket: cdktf.TerraformString;
  readonly replicaKmsKeyId?: cdktf.TerraformString;
  readonly storageClass?: cdktf.TerraformString;
  /** access_control_translation block */
  readonly accessControlTranslation?: TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationList;
}

function s3BucketReplicationConfigurationRulesDestinationToTerraform(struct?: S3BucketReplicationConfigurationRulesDestination): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    account_id: struct!.accountId instanceof cdktf.TerraformAttribute ? struct!.accountId.toTerraform() : cdktf.stringToTerraform(struct!.accountId),
    bucket: struct!.bucket instanceof cdktf.TerraformAttribute ? struct!.bucket.toTerraform() : cdktf.stringToTerraform(struct!.bucket),
    replica_kms_key_id: struct!.replicaKmsKeyId instanceof cdktf.TerraformAttribute ? struct!.replicaKmsKeyId.toTerraform() : cdktf.stringToTerraform(struct!.replicaKmsKeyId),
    storage_class: struct!.storageClass instanceof cdktf.TerraformAttribute ? struct!.storageClass.toTerraform() : cdktf.stringToTerraform(struct!.storageClass),
    access_control_translation: struct!.accessControlTranslation instanceof cdktf.TerraformAttribute ? struct!.accessControlTranslation.toTerraform() : cdktf.listMapper(s3BucketReplicationConfigurationRulesDestinationAccessControlTranslationToTerraform)(struct!.accessControlTranslation),
  }
}

export class TerraformS3BucketReplicationConfigurationRulesDestinationAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRulesDestination, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRulesDestination | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesDestination | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesDestinationAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesDestinationAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesDestinationAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketReplicationConfigurationRulesDestinationToTerraform(this.internalValue);
  }


  // account_id - computed: false, optional: true, required: false
  public get accountId() {
    return cdktf.TerraformStringAttribute.construct(this, 'account_id', this.internalValue?.accountId);
  }

  // bucket - computed: false, optional: false, required: true
  public get bucket() {
    return cdktf.TerraformStringAttribute.construct(this, 'bucket', this.internalValue?.bucket);
  }

  // replica_kms_key_id - computed: false, optional: true, required: false
  public get replicaKmsKeyId() {
    return cdktf.TerraformStringAttribute.construct(this, 'replica_kms_key_id', this.internalValue?.replicaKmsKeyId);
  }

  // storage_class - computed: false, optional: true, required: false
  public get storageClass() {
    return cdktf.TerraformStringAttribute.construct(this, 'storage_class', this.internalValue?.storageClass);
  }

  // access_control_translation - computed: false, optional: true, required: false
  public get accessControlTranslation() {
    return new TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationListAttribute(this, 'access_control_translation');
  }
}

export type TerraformS3BucketReplicationConfigurationRulesDestination = S3BucketReplicationConfigurationRulesDestination | TerraformS3BucketReplicationConfigurationRulesDestinationAttribute;

export class TerraformS3BucketReplicationConfigurationRulesDestinationSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRulesDestination[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRulesDestination[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesDestinationSet | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesDestinationSetAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesDestinationSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesDestinationSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(s3BucketReplicationConfigurationRulesDestinationToTerraform)(this.internalValue);
  }

  public toList(): TerraformS3BucketReplicationConfigurationRulesDestinationListAttribute {
    return new TerraformS3BucketReplicationConfigurationRulesDestinationListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformS3BucketReplicationConfigurationRulesDestinationSet = S3BucketReplicationConfigurationRulesDestination[] | TerraformS3BucketReplicationConfigurationRulesDestinationSetAttribute;

export class TerraformS3BucketReplicationConfigurationRulesDestinationListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRulesDestination[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRulesDestination[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesDestinationList | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesDestinationListAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesDestinationListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesDestinationListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketReplicationConfigurationRulesDestinationToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketReplicationConfigurationRulesDestinationAttribute {
    return new TerraformS3BucketReplicationConfigurationRulesDestinationAttribute(this, index.toString());
  }
}

export type TerraformS3BucketReplicationConfigurationRulesDestinationList = S3BucketReplicationConfigurationRulesDestination[] | TerraformS3BucketReplicationConfigurationRulesDestinationListAttribute;

export interface S3BucketReplicationConfigurationRulesFilter {
  readonly prefix?: cdktf.TerraformString;
  readonly tags?: cdktf.TerraformStringMap;
}

function s3BucketReplicationConfigurationRulesFilterToTerraform(struct?: S3BucketReplicationConfigurationRulesFilter): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    prefix: struct!.prefix instanceof cdktf.TerraformAttribute ? struct!.prefix.toTerraform() : cdktf.stringToTerraform(struct!.prefix),
    tags: struct!.tags instanceof cdktf.TerraformAttribute ? struct!.tags.toTerraform() : cdktf.hashMapper(cdktf.stringToTerraform)(struct!.tags),
  }
}

export class TerraformS3BucketReplicationConfigurationRulesFilterAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRulesFilter, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRulesFilter | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesFilter | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesFilterAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesFilterAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesFilterAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketReplicationConfigurationRulesFilterToTerraform(this.internalValue);
  }


  // prefix - computed: false, optional: true, required: false
  public get prefix() {
    return cdktf.TerraformStringAttribute.construct(this, 'prefix', this.internalValue?.prefix);
  }

  // tags - computed: false, optional: true, required: false
  public get tags() {
    return cdktf.TerraformStringMapAttribute.construct(this, 'tags', this.internalValue?.tags);
  }
}

export type TerraformS3BucketReplicationConfigurationRulesFilter = S3BucketReplicationConfigurationRulesFilter | TerraformS3BucketReplicationConfigurationRulesFilterAttribute;

export class TerraformS3BucketReplicationConfigurationRulesFilterListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRulesFilter[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRulesFilter[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesFilterList | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesFilterListAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesFilterListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesFilterListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketReplicationConfigurationRulesFilterToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketReplicationConfigurationRulesFilterAttribute {
    return new TerraformS3BucketReplicationConfigurationRulesFilterAttribute(this, index.toString());
  }
}

export type TerraformS3BucketReplicationConfigurationRulesFilterList = S3BucketReplicationConfigurationRulesFilter[] | TerraformS3BucketReplicationConfigurationRulesFilterListAttribute;

export interface S3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects {
  readonly enabled: cdktf.TerraformBoolean;
}

function s3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsToTerraform(struct?: S3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    enabled: struct!.enabled instanceof cdktf.TerraformAttribute ? struct!.enabled.toTerraform() : cdktf.booleanToTerraform(struct!.enabled),
  }
}

export class TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsToTerraform(this.internalValue);
  }


  // enabled - computed: false, optional: false, required: true
  public get enabled() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'enabled', this.internalValue?.enabled);
  }
}

export type TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects = S3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects | TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsAttribute;

export class TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsSet | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsSetAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(s3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsToTerraform)(this.internalValue);
  }

  public toList(): TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsListAttribute {
    return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsSet = S3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects[] | TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsSetAttribute;

export class TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsList | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsListAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsAttribute {
    return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsAttribute(this, index.toString());
  }
}

export type TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsList = S3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects[] | TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsListAttribute;

export interface S3BucketReplicationConfigurationRulesSourceSelectionCriteria {
  /** sse_kms_encrypted_objects block */
  readonly sseKmsEncryptedObjects?: TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsSet;
}

function s3BucketReplicationConfigurationRulesSourceSelectionCriteriaToTerraform(struct?: S3BucketReplicationConfigurationRulesSourceSelectionCriteria): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    sse_kms_encrypted_objects: struct!.sseKmsEncryptedObjects instanceof cdktf.TerraformAttribute ? struct!.sseKmsEncryptedObjects.toTerraform() : cdktf.setMapper(s3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsToTerraform)(struct!.sseKmsEncryptedObjects),
  }
}

export class TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRulesSourceSelectionCriteria, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRulesSourceSelectionCriteria | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteria | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketReplicationConfigurationRulesSourceSelectionCriteriaToTerraform(this.internalValue);
  }


  // sse_kms_encrypted_objects - computed: false, optional: true, required: false
  public get sseKmsEncryptedObjects() {
    return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsSetAttribute(this, 'sse_kms_encrypted_objects');
  }
}

export type TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteria = S3BucketReplicationConfigurationRulesSourceSelectionCriteria | TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaAttribute;

export class TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRulesSourceSelectionCriteria[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRulesSourceSelectionCriteria[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSet | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSetAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(s3BucketReplicationConfigurationRulesSourceSelectionCriteriaToTerraform)(this.internalValue);
  }

  public toList(): TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaListAttribute {
    return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSet = S3BucketReplicationConfigurationRulesSourceSelectionCriteria[] | TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSetAttribute;

export class TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRulesSourceSelectionCriteria[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRulesSourceSelectionCriteria[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaList | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaListAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketReplicationConfigurationRulesSourceSelectionCriteriaToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaAttribute {
    return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaAttribute(this, index.toString());
  }
}

export type TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaList = S3BucketReplicationConfigurationRulesSourceSelectionCriteria[] | TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaListAttribute;

export interface S3BucketReplicationConfigurationRules {
  readonly id?: cdktf.TerraformString;
  readonly prefix?: cdktf.TerraformString;
  readonly priority?: cdktf.TerraformNumber;
  readonly status: cdktf.TerraformString;
  /** destination block */
  readonly destination: TerraformS3BucketReplicationConfigurationRulesDestinationSet;
  /** filter block */
  readonly filter?: TerraformS3BucketReplicationConfigurationRulesFilterList;
  /** source_selection_criteria block */
  readonly sourceSelectionCriteria?: TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSet;
}

function s3BucketReplicationConfigurationRulesToTerraform(struct?: S3BucketReplicationConfigurationRules): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    id: struct!.id instanceof cdktf.TerraformAttribute ? struct!.id.toTerraform() : cdktf.stringToTerraform(struct!.id),
    prefix: struct!.prefix instanceof cdktf.TerraformAttribute ? struct!.prefix.toTerraform() : cdktf.stringToTerraform(struct!.prefix),
    priority: struct!.priority instanceof cdktf.TerraformAttribute ? struct!.priority.toTerraform() : cdktf.numberToTerraform(struct!.priority),
    status: struct!.status instanceof cdktf.TerraformAttribute ? struct!.status.toTerraform() : cdktf.stringToTerraform(struct!.status),
    destination: struct!.destination instanceof cdktf.TerraformAttribute ? struct!.destination.toTerraform() : cdktf.setMapper(s3BucketReplicationConfigurationRulesDestinationToTerraform)(struct!.destination),
    filter: struct!.filter instanceof cdktf.TerraformAttribute ? struct!.filter.toTerraform() : cdktf.listMapper(s3BucketReplicationConfigurationRulesFilterToTerraform)(struct!.filter),
    source_selection_criteria: struct!.sourceSelectionCriteria instanceof cdktf.TerraformAttribute ? struct!.sourceSelectionCriteria.toTerraform() : cdktf.setMapper(s3BucketReplicationConfigurationRulesSourceSelectionCriteriaToTerraform)(struct!.sourceSelectionCriteria),
  }
}

export class TerraformS3BucketReplicationConfigurationRulesAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRules, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRules | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRules | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketReplicationConfigurationRulesToTerraform(this.internalValue);
  }


  // id - computed: false, optional: true, required: false
  public get id() {
    return cdktf.TerraformStringAttribute.construct(this, 'id', this.internalValue?.id);
  }

  // prefix - computed: false, optional: true, required: false
  public get prefix() {
    return cdktf.TerraformStringAttribute.construct(this, 'prefix', this.internalValue?.prefix);
  }

  // priority - computed: false, optional: true, required: false
  public get priority() {
    return cdktf.TerraformNumberAttribute.construct(this, 'priority', this.internalValue?.priority);
  }

  // status - computed: false, optional: false, required: true
  public get status() {
    return cdktf.TerraformStringAttribute.construct(this, 'status', this.internalValue?.status);
  }

  // destination - computed: false, optional: false, required: true
  public get destination() {
    return new TerraformS3BucketReplicationConfigurationRulesDestinationSetAttribute(this, 'destination');
  }

  // filter - computed: false, optional: true, required: false
  public get filter() {
    return new TerraformS3BucketReplicationConfigurationRulesFilterListAttribute(this, 'filter');
  }

  // source_selection_criteria - computed: false, optional: true, required: false
  public get sourceSelectionCriteria() {
    return new TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSetAttribute(this, 'source_selection_criteria');
  }
}

export type TerraformS3BucketReplicationConfigurationRules = S3BucketReplicationConfigurationRules | TerraformS3BucketReplicationConfigurationRulesAttribute;

export class TerraformS3BucketReplicationConfigurationRulesSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRules[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRules[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesSet | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesSetAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(s3BucketReplicationConfigurationRulesToTerraform)(this.internalValue);
  }

  public toList(): TerraformS3BucketReplicationConfigurationRulesListAttribute {
    return new TerraformS3BucketReplicationConfigurationRulesListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformS3BucketReplicationConfigurationRulesSet = S3BucketReplicationConfigurationRules[] | TerraformS3BucketReplicationConfigurationRulesSetAttribute;

export class TerraformS3BucketReplicationConfigurationRulesListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfigurationRules[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfigurationRules[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationRulesList | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationRulesListAttribute)) {
      return new TerraformS3BucketReplicationConfigurationRulesListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationRulesListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketReplicationConfigurationRulesToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketReplicationConfigurationRulesAttribute {
    return new TerraformS3BucketReplicationConfigurationRulesAttribute(this, index.toString());
  }
}

export type TerraformS3BucketReplicationConfigurationRulesList = S3BucketReplicationConfigurationRules[] | TerraformS3BucketReplicationConfigurationRulesListAttribute;

export interface S3BucketReplicationConfiguration {
  readonly role: cdktf.TerraformString;
  /** rules block */
  readonly rules: TerraformS3BucketReplicationConfigurationRulesSet;
}

function s3BucketReplicationConfigurationToTerraform(struct?: S3BucketReplicationConfiguration): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    role: struct!.role instanceof cdktf.TerraformAttribute ? struct!.role.toTerraform() : cdktf.stringToTerraform(struct!.role),
    rules: struct!.rules instanceof cdktf.TerraformAttribute ? struct!.rules.toTerraform() : cdktf.setMapper(s3BucketReplicationConfigurationRulesToTerraform)(struct!.rules),
  }
}

export class TerraformS3BucketReplicationConfigurationAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfiguration, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfiguration | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfiguration | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationAttribute)) {
      return new TerraformS3BucketReplicationConfigurationAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketReplicationConfigurationToTerraform(this.internalValue);
  }


  // role - computed: false, optional: false, required: true
  public get role() {
    return cdktf.TerraformStringAttribute.construct(this, 'role', this.internalValue?.role);
  }

  // rules - computed: false, optional: false, required: true
  public get rules() {
    return new TerraformS3BucketReplicationConfigurationRulesSetAttribute(this, 'rules');
  }
}

export type TerraformS3BucketReplicationConfiguration = S3BucketReplicationConfiguration | TerraformS3BucketReplicationConfigurationAttribute;

export class TerraformS3BucketReplicationConfigurationListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketReplicationConfiguration[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketReplicationConfiguration[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketReplicationConfigurationList | undefined) {
    if (!(value instanceof TerraformS3BucketReplicationConfigurationListAttribute)) {
      return new TerraformS3BucketReplicationConfigurationListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketReplicationConfigurationListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketReplicationConfigurationToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketReplicationConfigurationAttribute {
    return new TerraformS3BucketReplicationConfigurationAttribute(this, index.toString());
  }
}

export type TerraformS3BucketReplicationConfigurationList = S3BucketReplicationConfiguration[] | TerraformS3BucketReplicationConfigurationListAttribute;

export interface S3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault {
  readonly kmsMasterKeyId?: cdktf.TerraformString;
  readonly sseAlgorithm: cdktf.TerraformString;
}

function s3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultToTerraform(struct?: S3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    kms_master_key_id: struct!.kmsMasterKeyId instanceof cdktf.TerraformAttribute ? struct!.kmsMasterKeyId.toTerraform() : cdktf.stringToTerraform(struct!.kmsMasterKeyId),
    sse_algorithm: struct!.sseAlgorithm instanceof cdktf.TerraformAttribute ? struct!.sseAlgorithm.toTerraform() : cdktf.stringToTerraform(struct!.sseAlgorithm),
  }
}

export class TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault | undefined) {
    if (!(value instanceof TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultAttribute)) {
      return new TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultToTerraform(this.internalValue);
  }


  // kms_master_key_id - computed: false, optional: true, required: false
  public get kmsMasterKeyId() {
    return cdktf.TerraformStringAttribute.construct(this, 'kms_master_key_id', this.internalValue?.kmsMasterKeyId);
  }

  // sse_algorithm - computed: false, optional: false, required: true
  public get sseAlgorithm() {
    return cdktf.TerraformStringAttribute.construct(this, 'sse_algorithm', this.internalValue?.sseAlgorithm);
  }
}

export type TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault = S3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault | TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultAttribute;

export class TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultList | undefined) {
    if (!(value instanceof TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultListAttribute)) {
      return new TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultAttribute {
    return new TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultAttribute(this, index.toString());
  }
}

export type TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultList = S3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault[] | TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultListAttribute;

export interface S3BucketServerSideEncryptionConfigurationRule {
  /** apply_server_side_encryption_by_default block */
  readonly applyServerSideEncryptionByDefault: TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultList;
}

function s3BucketServerSideEncryptionConfigurationRuleToTerraform(struct?: S3BucketServerSideEncryptionConfigurationRule): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    apply_server_side_encryption_by_default: struct!.applyServerSideEncryptionByDefault instanceof cdktf.TerraformAttribute ? struct!.applyServerSideEncryptionByDefault.toTerraform() : cdktf.listMapper(s3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultToTerraform)(struct!.applyServerSideEncryptionByDefault),
  }
}

export class TerraformS3BucketServerSideEncryptionConfigurationRuleAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketServerSideEncryptionConfigurationRule, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketServerSideEncryptionConfigurationRule | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketServerSideEncryptionConfigurationRule | undefined) {
    if (!(value instanceof TerraformS3BucketServerSideEncryptionConfigurationRuleAttribute)) {
      return new TerraformS3BucketServerSideEncryptionConfigurationRuleAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketServerSideEncryptionConfigurationRuleAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketServerSideEncryptionConfigurationRuleToTerraform(this.internalValue);
  }


  // apply_server_side_encryption_by_default - computed: false, optional: false, required: true
  public get applyServerSideEncryptionByDefault() {
    return new TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultListAttribute(this, 'apply_server_side_encryption_by_default');
  }
}

export type TerraformS3BucketServerSideEncryptionConfigurationRule = S3BucketServerSideEncryptionConfigurationRule | TerraformS3BucketServerSideEncryptionConfigurationRuleAttribute;

export class TerraformS3BucketServerSideEncryptionConfigurationRuleListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketServerSideEncryptionConfigurationRule[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketServerSideEncryptionConfigurationRule[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketServerSideEncryptionConfigurationRuleList | undefined) {
    if (!(value instanceof TerraformS3BucketServerSideEncryptionConfigurationRuleListAttribute)) {
      return new TerraformS3BucketServerSideEncryptionConfigurationRuleListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketServerSideEncryptionConfigurationRuleListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketServerSideEncryptionConfigurationRuleToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketServerSideEncryptionConfigurationRuleAttribute {
    return new TerraformS3BucketServerSideEncryptionConfigurationRuleAttribute(this, index.toString());
  }
}

export type TerraformS3BucketServerSideEncryptionConfigurationRuleList = S3BucketServerSideEncryptionConfigurationRule[] | TerraformS3BucketServerSideEncryptionConfigurationRuleListAttribute;

export interface S3BucketServerSideEncryptionConfiguration {
  /** rule block */
  readonly rule: TerraformS3BucketServerSideEncryptionConfigurationRuleList;
}

function s3BucketServerSideEncryptionConfigurationToTerraform(struct?: S3BucketServerSideEncryptionConfiguration): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    rule: struct!.rule instanceof cdktf.TerraformAttribute ? struct!.rule.toTerraform() : cdktf.listMapper(s3BucketServerSideEncryptionConfigurationRuleToTerraform)(struct!.rule),
  }
}

export class TerraformS3BucketServerSideEncryptionConfigurationAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketServerSideEncryptionConfiguration, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketServerSideEncryptionConfiguration | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketServerSideEncryptionConfiguration | undefined) {
    if (!(value instanceof TerraformS3BucketServerSideEncryptionConfigurationAttribute)) {
      return new TerraformS3BucketServerSideEncryptionConfigurationAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketServerSideEncryptionConfigurationAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketServerSideEncryptionConfigurationToTerraform(this.internalValue);
  }


  // rule - computed: false, optional: false, required: true
  public get rule() {
    return new TerraformS3BucketServerSideEncryptionConfigurationRuleListAttribute(this, 'rule');
  }
}

export type TerraformS3BucketServerSideEncryptionConfiguration = S3BucketServerSideEncryptionConfiguration | TerraformS3BucketServerSideEncryptionConfigurationAttribute;

export class TerraformS3BucketServerSideEncryptionConfigurationListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketServerSideEncryptionConfiguration[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketServerSideEncryptionConfiguration[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketServerSideEncryptionConfigurationList | undefined) {
    if (!(value instanceof TerraformS3BucketServerSideEncryptionConfigurationListAttribute)) {
      return new TerraformS3BucketServerSideEncryptionConfigurationListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketServerSideEncryptionConfigurationListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketServerSideEncryptionConfigurationToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketServerSideEncryptionConfigurationAttribute {
    return new TerraformS3BucketServerSideEncryptionConfigurationAttribute(this, index.toString());
  }
}

export type TerraformS3BucketServerSideEncryptionConfigurationList = S3BucketServerSideEncryptionConfiguration[] | TerraformS3BucketServerSideEncryptionConfigurationListAttribute;

export interface S3BucketVersioning {
  readonly enabled?: cdktf.TerraformBoolean;
  readonly mfaDelete?: cdktf.TerraformBoolean;
}

function s3BucketVersioningToTerraform(struct?: S3BucketVersioning): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    enabled: struct!.enabled instanceof cdktf.TerraformAttribute ? struct!.enabled.toTerraform() : cdktf.booleanToTerraform(struct!.enabled),
    mfa_delete: struct!.mfaDelete instanceof cdktf.TerraformAttribute ? struct!.mfaDelete.toTerraform() : cdktf.booleanToTerraform(struct!.mfaDelete),
  }
}

export class TerraformS3BucketVersioningAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketVersioning, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketVersioning | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketVersioning | undefined) {
    if (!(value instanceof TerraformS3BucketVersioningAttribute)) {
      return new TerraformS3BucketVersioningAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketVersioningAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketVersioningToTerraform(this.internalValue);
  }


  // enabled - computed: false, optional: true, required: false
  public get enabled() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'enabled', this.internalValue?.enabled);
  }

  // mfa_delete - computed: false, optional: true, required: false
  public get mfaDelete() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'mfa_delete', this.internalValue?.mfaDelete);
  }
}

export type TerraformS3BucketVersioning = S3BucketVersioning | TerraformS3BucketVersioningAttribute;

export class TerraformS3BucketVersioningListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketVersioning[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketVersioning[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketVersioningList | undefined) {
    if (!(value instanceof TerraformS3BucketVersioningListAttribute)) {
      return new TerraformS3BucketVersioningListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketVersioningListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketVersioningToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketVersioningAttribute {
    return new TerraformS3BucketVersioningAttribute(this, index.toString());
  }
}

export type TerraformS3BucketVersioningList = S3BucketVersioning[] | TerraformS3BucketVersioningListAttribute;

export interface S3BucketWebsite {
  readonly errorDocument?: cdktf.TerraformString;
  readonly indexDocument?: cdktf.TerraformString;
  readonly redirectAllRequestsTo?: cdktf.TerraformString;
  readonly routingRules?: cdktf.TerraformString;
}

function s3BucketWebsiteToTerraform(struct?: S3BucketWebsite): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    error_document: struct!.errorDocument instanceof cdktf.TerraformAttribute ? struct!.errorDocument.toTerraform() : cdktf.stringToTerraform(struct!.errorDocument),
    index_document: struct!.indexDocument instanceof cdktf.TerraformAttribute ? struct!.indexDocument.toTerraform() : cdktf.stringToTerraform(struct!.indexDocument),
    redirect_all_requests_to: struct!.redirectAllRequestsTo instanceof cdktf.TerraformAttribute ? struct!.redirectAllRequestsTo.toTerraform() : cdktf.stringToTerraform(struct!.redirectAllRequestsTo),
    routing_rules: struct!.routingRules instanceof cdktf.TerraformAttribute ? struct!.routingRules.toTerraform() : cdktf.stringToTerraform(struct!.routingRules),
  }
}

export class TerraformS3BucketWebsiteAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketWebsite, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketWebsite | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketWebsite | undefined) {
    if (!(value instanceof TerraformS3BucketWebsiteAttribute)) {
      return new TerraformS3BucketWebsiteAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketWebsiteAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return s3BucketWebsiteToTerraform(this.internalValue);
  }


  // error_document - computed: false, optional: true, required: false
  public get errorDocument() {
    return cdktf.TerraformStringAttribute.construct(this, 'error_document', this.internalValue?.errorDocument);
  }

  // index_document - computed: false, optional: true, required: false
  public get indexDocument() {
    return cdktf.TerraformStringAttribute.construct(this, 'index_document', this.internalValue?.indexDocument);
  }

  // redirect_all_requests_to - computed: false, optional: true, required: false
  public get redirectAllRequestsTo() {
    return cdktf.TerraformStringAttribute.construct(this, 'redirect_all_requests_to', this.internalValue?.redirectAllRequestsTo);
  }

  // routing_rules - computed: false, optional: true, required: false
  public get routingRules() {
    return cdktf.TerraformStringAttribute.construct(this, 'routing_rules', this.internalValue?.routingRules);
  }
}

export type TerraformS3BucketWebsite = S3BucketWebsite | TerraformS3BucketWebsiteAttribute;

export class TerraformS3BucketWebsiteListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: S3BucketWebsite[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): S3BucketWebsite[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformS3BucketWebsiteList | undefined) {
    if (!(value instanceof TerraformS3BucketWebsiteListAttribute)) {
      return new TerraformS3BucketWebsiteListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformS3BucketWebsiteListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(s3BucketWebsiteToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformS3BucketWebsiteAttribute {
    return new TerraformS3BucketWebsiteAttribute(this, index.toString());
  }
}

export type TerraformS3BucketWebsiteList = S3BucketWebsite[] | TerraformS3BucketWebsiteListAttribute;


// Resource

export class S3Bucket extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: S3BucketConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_s3_bucket',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putAccelerationStatus(config.accelerationStatus ?? new cdktf.TerraformStringAttribute(this, 'acceleration_status', undefined));
    this.putAcl(config.acl ?? new cdktf.TerraformStringAttribute(this, 'acl', undefined));
    this._arn = new cdktf.TerraformStringAttribute(this, 'arn', undefined)
    this.putBucket(config.bucket ?? new cdktf.TerraformStringAttribute(this, 'bucket', undefined));
    this._bucketDomainName = new cdktf.TerraformStringAttribute(this, 'bucket_domain_name', undefined)
    this.putBucketPrefix(config.bucketPrefix ?? new cdktf.TerraformStringAttribute(this, 'bucket_prefix', undefined));
    this._bucketRegionalDomainName = new cdktf.TerraformStringAttribute(this, 'bucket_regional_domain_name', undefined)
    this.putForceDestroy(config.forceDestroy ?? new cdktf.TerraformBooleanAttribute(this, 'force_destroy', undefined));
    this.putHostedZoneId(config.hostedZoneId ?? new cdktf.TerraformStringAttribute(this, 'hosted_zone_id', undefined));
    this._id = new cdktf.TerraformStringAttribute(this, 'id', undefined)
    this.putPolicy(config.policy ?? new cdktf.TerraformStringAttribute(this, 'policy', undefined));
    this.putRegion(config.region ?? new cdktf.TerraformStringAttribute(this, 'region', undefined));
    this.putRequestPayer(config.requestPayer ?? new cdktf.TerraformStringAttribute(this, 'request_payer', undefined));
    this.putTags(config.tags ?? new cdktf.TerraformStringMapAttribute(this, 'tags', undefined));
    this.putWebsiteDomain(config.websiteDomain ?? new cdktf.TerraformStringAttribute(this, 'website_domain', undefined));
    this.putWebsiteEndpoint(config.websiteEndpoint ?? new cdktf.TerraformStringAttribute(this, 'website_endpoint', undefined));
    this.putCorsRule(config.corsRule ?? new TerraformS3BucketCorsRuleListAttribute(this, 'cors_rule', undefined));
    this.putGrant(config.grant ?? new TerraformS3BucketGrantSetAttribute(this, 'grant', undefined));
    this.putLifecycleRule(config.lifecycleRule ?? new TerraformS3BucketLifecycleRuleListAttribute(this, 'lifecycle_rule', undefined));
    this.putLogging(config.logging ?? new TerraformS3BucketLoggingSetAttribute(this, 'logging', undefined));
    this.putObjectLockConfiguration(config.objectLockConfiguration ?? new TerraformS3BucketObjectLockConfigurationListAttribute(this, 'object_lock_configuration', undefined));
    this.putReplicationConfiguration(config.replicationConfiguration ?? new TerraformS3BucketReplicationConfigurationListAttribute(this, 'replication_configuration', undefined));
    this.putServerSideEncryptionConfiguration(config.serverSideEncryptionConfiguration ?? new TerraformS3BucketServerSideEncryptionConfigurationListAttribute(this, 'server_side_encryption_configuration', undefined));
    this.putVersioning(config.versioning ?? new TerraformS3BucketVersioningListAttribute(this, 'versioning', undefined));
    this.putWebsite(config.website ?? new TerraformS3BucketWebsiteListAttribute(this, 'website', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // acceleration_status - computed: true, optional: true, required: false
  private _accelerationStatus!: cdktf.TerraformStringAttribute;
  public get accelerationStatus() {
    return this._accelerationStatus;
  }
  public putAccelerationStatus(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._accelerationStatus.resetInternal();
    }
    else {
      this._accelerationStatus = cdktf.TerraformStringAttribute.construct(this, 'acceleration_status', value);
    }
  }

  // acl - computed: false, optional: true, required: false
  private _acl!: cdktf.TerraformStringAttribute;
  public get acl() {
    return this._acl;
  }
  public putAcl(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._acl.resetInternal();
    }
    else {
      this._acl = cdktf.TerraformStringAttribute.construct(this, 'acl', value);
    }
  }

  // arn - computed: true, optional: true, required: false
  private _arn: cdktf.TerraformStringAttribute;
  public get arn() {
    return this._arn;
  }

  // bucket - computed: true, optional: true, required: false
  private _bucket!: cdktf.TerraformStringAttribute;
  public get bucket() {
    return this._bucket;
  }
  public putBucket(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._bucket.resetInternal();
    }
    else {
      this._bucket = cdktf.TerraformStringAttribute.construct(this, 'bucket', value);
    }
  }

  // bucket_domain_name - computed: true, optional: false, required: false
  private _bucketDomainName: cdktf.TerraformStringAttribute;
  public get bucketDomainName() {
    return this._bucketDomainName;
  }

  // bucket_prefix - computed: false, optional: true, required: false
  private _bucketPrefix!: cdktf.TerraformStringAttribute;
  public get bucketPrefix() {
    return this._bucketPrefix;
  }
  public putBucketPrefix(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._bucketPrefix.resetInternal();
    }
    else {
      this._bucketPrefix = cdktf.TerraformStringAttribute.construct(this, 'bucket_prefix', value);
    }
  }

  // bucket_regional_domain_name - computed: true, optional: false, required: false
  private _bucketRegionalDomainName: cdktf.TerraformStringAttribute;
  public get bucketRegionalDomainName() {
    return this._bucketRegionalDomainName;
  }

  // force_destroy - computed: false, optional: true, required: false
  private _forceDestroy!: cdktf.TerraformBooleanAttribute;
  public get forceDestroy() {
    return this._forceDestroy;
  }
  public putForceDestroy(value: cdktf.TerraformBoolean | undefined) {
    if (value === undefined) {
      this._forceDestroy.resetInternal();
    }
    else {
      this._forceDestroy = cdktf.TerraformBooleanAttribute.construct(this, 'force_destroy', value);
    }
  }

  // hosted_zone_id - computed: true, optional: true, required: false
  private _hostedZoneId!: cdktf.TerraformStringAttribute;
  public get hostedZoneId() {
    return this._hostedZoneId;
  }
  public putHostedZoneId(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._hostedZoneId.resetInternal();
    }
    else {
      this._hostedZoneId = cdktf.TerraformStringAttribute.construct(this, 'hosted_zone_id', value);
    }
  }

  // id - computed: true, optional: true, required: false
  private _id: cdktf.TerraformStringAttribute;
  public get id() {
    return this._id;
  }

  // policy - computed: false, optional: true, required: false
  private _policy!: cdktf.TerraformStringAttribute;
  public get policy() {
    return this._policy;
  }
  public putPolicy(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._policy.resetInternal();
    }
    else {
      this._policy = cdktf.TerraformStringAttribute.construct(this, 'policy', value);
    }
  }

  // region - computed: true, optional: true, required: false
  private _region!: cdktf.TerraformStringAttribute;
  public get region() {
    return this._region;
  }
  public putRegion(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._region.resetInternal();
    }
    else {
      this._region = cdktf.TerraformStringAttribute.construct(this, 'region', value);
    }
  }

  // request_payer - computed: true, optional: true, required: false
  private _requestPayer!: cdktf.TerraformStringAttribute;
  public get requestPayer() {
    return this._requestPayer;
  }
  public putRequestPayer(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._requestPayer.resetInternal();
    }
    else {
      this._requestPayer = cdktf.TerraformStringAttribute.construct(this, 'request_payer', value);
    }
  }

  // tags - computed: false, optional: true, required: false
  private _tags!: cdktf.TerraformStringMapAttribute;
  public get tags() {
    return this._tags;
  }
  public putTags(value: cdktf.TerraformStringMap | undefined) {
    if (value === undefined) {
      this._tags.resetInternal();
    }
    else {
      this._tags = cdktf.TerraformStringMapAttribute.construct(this, 'tags', value);
    }
  }

  // website_domain - computed: true, optional: true, required: false
  private _websiteDomain!: cdktf.TerraformStringAttribute;
  public get websiteDomain() {
    return this._websiteDomain;
  }
  public putWebsiteDomain(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._websiteDomain.resetInternal();
    }
    else {
      this._websiteDomain = cdktf.TerraformStringAttribute.construct(this, 'website_domain', value);
    }
  }

  // website_endpoint - computed: true, optional: true, required: false
  private _websiteEndpoint!: cdktf.TerraformStringAttribute;
  public get websiteEndpoint() {
    return this._websiteEndpoint;
  }
  public putWebsiteEndpoint(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._websiteEndpoint.resetInternal();
    }
    else {
      this._websiteEndpoint = cdktf.TerraformStringAttribute.construct(this, 'website_endpoint', value);
    }
  }

  // cors_rule - computed: false, optional: true, required: false
  private _corsRule!: TerraformS3BucketCorsRuleListAttribute;
  public get corsRule() {
    return this._corsRule;
  }
  public putCorsRule(value: TerraformS3BucketCorsRuleList | undefined) {
    if (value === undefined) {
      this._corsRule.resetInternal();
    }
    else {
      this._corsRule = TerraformS3BucketCorsRuleListAttribute.construct(this, 'cors_rule', value);
    }
  }

  // grant - computed: false, optional: true, required: false
  private _grant!: TerraformS3BucketGrantSetAttribute;
  public get grant() {
    return this._grant;
  }
  public putGrant(value: TerraformS3BucketGrantSet | undefined) {
    if (value === undefined) {
      this._grant.resetInternal();
    }
    else {
      this._grant = TerraformS3BucketGrantSetAttribute.construct(this, 'grant', value);
    }
  }

  // lifecycle_rule - computed: false, optional: true, required: false
  private _lifecycleRule!: TerraformS3BucketLifecycleRuleListAttribute;
  public get lifecycleRule() {
    return this._lifecycleRule;
  }
  public putLifecycleRule(value: TerraformS3BucketLifecycleRuleList | undefined) {
    if (value === undefined) {
      this._lifecycleRule.resetInternal();
    }
    else {
      this._lifecycleRule = TerraformS3BucketLifecycleRuleListAttribute.construct(this, 'lifecycle_rule', value);
    }
  }

  // logging - computed: false, optional: true, required: false
  private _logging!: TerraformS3BucketLoggingSetAttribute;
  public get logging() {
    return this._logging;
  }
  public putLogging(value: TerraformS3BucketLoggingSet | undefined) {
    if (value === undefined) {
      this._logging.resetInternal();
    }
    else {
      this._logging = TerraformS3BucketLoggingSetAttribute.construct(this, 'logging', value);
    }
  }

  // object_lock_configuration - computed: false, optional: true, required: false
  private _objectLockConfiguration!: TerraformS3BucketObjectLockConfigurationListAttribute;
  public get objectLockConfiguration() {
    return this._objectLockConfiguration;
  }
  public putObjectLockConfiguration(value: TerraformS3BucketObjectLockConfigurationList | undefined) {
    if (value === undefined) {
      this._objectLockConfiguration.resetInternal();
    }
    else {
      this._objectLockConfiguration = TerraformS3BucketObjectLockConfigurationListAttribute.construct(this, 'object_lock_configuration', value);
    }
  }

  // replication_configuration - computed: false, optional: true, required: false
  private _replicationConfiguration!: TerraformS3BucketReplicationConfigurationListAttribute;
  public get replicationConfiguration() {
    return this._replicationConfiguration;
  }
  public putReplicationConfiguration(value: TerraformS3BucketReplicationConfigurationList | undefined) {
    if (value === undefined) {
      this._replicationConfiguration.resetInternal();
    }
    else {
      this._replicationConfiguration = TerraformS3BucketReplicationConfigurationListAttribute.construct(this, 'replication_configuration', value);
    }
  }

  // server_side_encryption_configuration - computed: false, optional: true, required: false
  private _serverSideEncryptionConfiguration!: TerraformS3BucketServerSideEncryptionConfigurationListAttribute;
  public get serverSideEncryptionConfiguration() {
    return this._serverSideEncryptionConfiguration;
  }
  public putServerSideEncryptionConfiguration(value: TerraformS3BucketServerSideEncryptionConfigurationList | undefined) {
    if (value === undefined) {
      this._serverSideEncryptionConfiguration.resetInternal();
    }
    else {
      this._serverSideEncryptionConfiguration = TerraformS3BucketServerSideEncryptionConfigurationListAttribute.construct(this, 'server_side_encryption_configuration', value);
    }
  }

  // versioning - computed: false, optional: true, required: false
  private _versioning!: TerraformS3BucketVersioningListAttribute;
  public get versioning() {
    return this._versioning;
  }
  public putVersioning(value: TerraformS3BucketVersioningList | undefined) {
    if (value === undefined) {
      this._versioning.resetInternal();
    }
    else {
      this._versioning = TerraformS3BucketVersioningListAttribute.construct(this, 'versioning', value);
    }
  }

  // website - computed: false, optional: true, required: false
  private _website!: TerraformS3BucketWebsiteListAttribute;
  public get website() {
    return this._website;
  }
  public putWebsite(value: TerraformS3BucketWebsiteList | undefined) {
    if (value === undefined) {
      this._website.resetInternal();
    }
    else {
      this._website = TerraformS3BucketWebsiteListAttribute.construct(this, 'website', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      acceleration_status: this._accelerationStatus.toTerraform(),
      acl: this._acl.toTerraform(),
      bucket: this._bucket.toTerraform(),
      bucket_prefix: this._bucketPrefix.toTerraform(),
      force_destroy: this._forceDestroy.toTerraform(),
      hosted_zone_id: this._hostedZoneId.toTerraform(),
      policy: this._policy.toTerraform(),
      region: this._region.toTerraform(),
      request_payer: this._requestPayer.toTerraform(),
      tags: this._tags.toTerraform(),
      website_domain: this._websiteDomain.toTerraform(),
      website_endpoint: this._websiteEndpoint.toTerraform(),
      cors_rule: this._corsRule.toTerraform(),
      grant: this._grant.toTerraform(),
      lifecycle_rule: this._lifecycleRule.toTerraform(),
      logging: this._logging.toTerraform(),
      object_lock_configuration: this._objectLockConfiguration.toTerraform(),
      replication_configuration: this._replicationConfiguration.toTerraform(),
      server_side_encryption_configuration: this._serverSideEncryptionConfiguration.toTerraform(),
      versioning: this._versioning.toTerraform(),
      website: this._website.toTerraform(),
    };
  }
}
"
`;

exports[`generate a security group 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/security_group.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface SecurityGroupConfig extends cdktf.TerraformMetaArguments {
  readonly description?: cdktf.TerraformString;
  readonly egress?: TerraformSecurityGroupEgressSet;
  readonly ingress?: TerraformSecurityGroupIngressSet;
  readonly name?: cdktf.TerraformString;
  readonly namePrefix?: cdktf.TerraformString;
  readonly revokeRulesOnDelete?: cdktf.TerraformBoolean;
  readonly tags?: cdktf.TerraformStringMap;
  readonly vpcId?: cdktf.TerraformString;
  /** timeouts block */
  readonly timeouts?: TerraformSecurityGroupTimeouts;
}
export interface SecurityGroupEgress {
  readonly cidrBlocks?: cdktf.TerraformStringList;
  readonly description?: cdktf.TerraformString;
  readonly fromPort?: cdktf.TerraformNumber;
  readonly ipv6CidrBlocks?: cdktf.TerraformStringList;
  readonly prefixListIds?: cdktf.TerraformStringList;
  readonly protocol?: cdktf.TerraformString;
  readonly securityGroups?: cdktf.TerraformStringSet;
  readonly selfAttribute?: cdktf.TerraformBoolean;
  readonly toPort?: cdktf.TerraformNumber;
}

function securityGroupEgressToTerraform(struct?: SecurityGroupEgress): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    cidr_blocks: struct!.cidrBlocks instanceof cdktf.TerraformAttribute ? struct!.cidrBlocks.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.cidrBlocks),
    description: struct!.description instanceof cdktf.TerraformAttribute ? struct!.description.toTerraform() : cdktf.stringToTerraform(struct!.description),
    from_port: struct!.fromPort instanceof cdktf.TerraformAttribute ? struct!.fromPort.toTerraform() : cdktf.numberToTerraform(struct!.fromPort),
    ipv6_cidr_blocks: struct!.ipv6CidrBlocks instanceof cdktf.TerraformAttribute ? struct!.ipv6CidrBlocks.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.ipv6CidrBlocks),
    prefix_list_ids: struct!.prefixListIds instanceof cdktf.TerraformAttribute ? struct!.prefixListIds.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.prefixListIds),
    protocol: struct!.protocol instanceof cdktf.TerraformAttribute ? struct!.protocol.toTerraform() : cdktf.stringToTerraform(struct!.protocol),
    security_groups: struct!.securityGroups instanceof cdktf.TerraformAttribute ? struct!.securityGroups.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.securityGroups),
    self: struct!.selfAttribute instanceof cdktf.TerraformAttribute ? struct!.selfAttribute.toTerraform() : cdktf.booleanToTerraform(struct!.selfAttribute),
    to_port: struct!.toPort instanceof cdktf.TerraformAttribute ? struct!.toPort.toTerraform() : cdktf.numberToTerraform(struct!.toPort),
  }
}

export class TerraformSecurityGroupEgressAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: SecurityGroupEgress, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): SecurityGroupEgress | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformSecurityGroupEgress | undefined) {
    if (!(value instanceof TerraformSecurityGroupEgressAttribute)) {
      return new TerraformSecurityGroupEgressAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformSecurityGroupEgressAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return securityGroupEgressToTerraform(this.internalValue);
  }


  // cidr_blocks - computed: true, optional: true, required: false
  public get cidrBlocks() {
    return cdktf.TerraformStringListAttribute.construct(this, 'cidr_blocks', this.internalValue?.cidrBlocks);
  }

  // description - computed: true, optional: true, required: false
  public get description() {
    return cdktf.TerraformStringAttribute.construct(this, 'description', this.internalValue?.description);
  }

  // from_port - computed: true, optional: true, required: false
  public get fromPort() {
    return cdktf.TerraformNumberAttribute.construct(this, 'from_port', this.internalValue?.fromPort);
  }

  // ipv6_cidr_blocks - computed: true, optional: true, required: false
  public get ipv6CidrBlocks() {
    return cdktf.TerraformStringListAttribute.construct(this, 'ipv6_cidr_blocks', this.internalValue?.ipv6CidrBlocks);
  }

  // prefix_list_ids - computed: true, optional: true, required: false
  public get prefixListIds() {
    return cdktf.TerraformStringListAttribute.construct(this, 'prefix_list_ids', this.internalValue?.prefixListIds);
  }

  // protocol - computed: true, optional: true, required: false
  public get protocol() {
    return cdktf.TerraformStringAttribute.construct(this, 'protocol', this.internalValue?.protocol);
  }

  // security_groups - computed: true, optional: true, required: false
  public get securityGroups() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'security_groups', this.internalValue?.securityGroups);
  }

  // self - computed: true, optional: true, required: false
  public get selfAttribute() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'self', this.internalValue?.selfAttribute);
  }

  // to_port - computed: true, optional: true, required: false
  public get toPort() {
    return cdktf.TerraformNumberAttribute.construct(this, 'to_port', this.internalValue?.toPort);
  }
}

export type TerraformSecurityGroupEgress = SecurityGroupEgress | TerraformSecurityGroupEgressAttribute;

export class TerraformSecurityGroupEgressSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: SecurityGroupEgress[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): SecurityGroupEgress[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformSecurityGroupEgressSet | undefined) {
    if (!(value instanceof TerraformSecurityGroupEgressSetAttribute)) {
      return new TerraformSecurityGroupEgressSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformSecurityGroupEgressSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(securityGroupEgressToTerraform)(this.internalValue);
  }

  public toList(): TerraformSecurityGroupEgressListAttribute {
    return new TerraformSecurityGroupEgressListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformSecurityGroupEgressSet = SecurityGroupEgress[] | TerraformSecurityGroupEgressSetAttribute;

export class TerraformSecurityGroupEgressListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: SecurityGroupEgress[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): SecurityGroupEgress[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformSecurityGroupEgressList | undefined) {
    if (!(value instanceof TerraformSecurityGroupEgressListAttribute)) {
      return new TerraformSecurityGroupEgressListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformSecurityGroupEgressListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(securityGroupEgressToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformSecurityGroupEgressAttribute {
    return new TerraformSecurityGroupEgressAttribute(this, index.toString());
  }
}

export type TerraformSecurityGroupEgressList = SecurityGroupEgress[] | TerraformSecurityGroupEgressListAttribute;

export interface SecurityGroupIngress {
  readonly cidrBlocks?: cdktf.TerraformStringList;
  readonly description?: cdktf.TerraformString;
  readonly fromPort?: cdktf.TerraformNumber;
  readonly ipv6CidrBlocks?: cdktf.TerraformStringList;
  readonly prefixListIds?: cdktf.TerraformStringList;
  readonly protocol?: cdktf.TerraformString;
  readonly securityGroups?: cdktf.TerraformStringSet;
  readonly selfAttribute?: cdktf.TerraformBoolean;
  readonly toPort?: cdktf.TerraformNumber;
}

function securityGroupIngressToTerraform(struct?: SecurityGroupIngress): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    cidr_blocks: struct!.cidrBlocks instanceof cdktf.TerraformAttribute ? struct!.cidrBlocks.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.cidrBlocks),
    description: struct!.description instanceof cdktf.TerraformAttribute ? struct!.description.toTerraform() : cdktf.stringToTerraform(struct!.description),
    from_port: struct!.fromPort instanceof cdktf.TerraformAttribute ? struct!.fromPort.toTerraform() : cdktf.numberToTerraform(struct!.fromPort),
    ipv6_cidr_blocks: struct!.ipv6CidrBlocks instanceof cdktf.TerraformAttribute ? struct!.ipv6CidrBlocks.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.ipv6CidrBlocks),
    prefix_list_ids: struct!.prefixListIds instanceof cdktf.TerraformAttribute ? struct!.prefixListIds.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.prefixListIds),
    protocol: struct!.protocol instanceof cdktf.TerraformAttribute ? struct!.protocol.toTerraform() : cdktf.stringToTerraform(struct!.protocol),
    security_groups: struct!.securityGroups instanceof cdktf.TerraformAttribute ? struct!.securityGroups.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.securityGroups),
    self: struct!.selfAttribute instanceof cdktf.TerraformAttribute ? struct!.selfAttribute.toTerraform() : cdktf.booleanToTerraform(struct!.selfAttribute),
    to_port: struct!.toPort instanceof cdktf.TerraformAttribute ? struct!.toPort.toTerraform() : cdktf.numberToTerraform(struct!.toPort),
  }
}

export class TerraformSecurityGroupIngressAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: SecurityGroupIngress, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): SecurityGroupIngress | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformSecurityGroupIngress | undefined) {
    if (!(value instanceof TerraformSecurityGroupIngressAttribute)) {
      return new TerraformSecurityGroupIngressAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformSecurityGroupIngressAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return securityGroupIngressToTerraform(this.internalValue);
  }


  // cidr_blocks - computed: true, optional: true, required: false
  public get cidrBlocks() {
    return cdktf.TerraformStringListAttribute.construct(this, 'cidr_blocks', this.internalValue?.cidrBlocks);
  }

  // description - computed: true, optional: true, required: false
  public get description() {
    return cdktf.TerraformStringAttribute.construct(this, 'description', this.internalValue?.description);
  }

  // from_port - computed: true, optional: true, required: false
  public get fromPort() {
    return cdktf.TerraformNumberAttribute.construct(this, 'from_port', this.internalValue?.fromPort);
  }

  // ipv6_cidr_blocks - computed: true, optional: true, required: false
  public get ipv6CidrBlocks() {
    return cdktf.TerraformStringListAttribute.construct(this, 'ipv6_cidr_blocks', this.internalValue?.ipv6CidrBlocks);
  }

  // prefix_list_ids - computed: true, optional: true, required: false
  public get prefixListIds() {
    return cdktf.TerraformStringListAttribute.construct(this, 'prefix_list_ids', this.internalValue?.prefixListIds);
  }

  // protocol - computed: true, optional: true, required: false
  public get protocol() {
    return cdktf.TerraformStringAttribute.construct(this, 'protocol', this.internalValue?.protocol);
  }

  // security_groups - computed: true, optional: true, required: false
  public get securityGroups() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'security_groups', this.internalValue?.securityGroups);
  }

  // self - computed: true, optional: true, required: false
  public get selfAttribute() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'self', this.internalValue?.selfAttribute);
  }

  // to_port - computed: true, optional: true, required: false
  public get toPort() {
    return cdktf.TerraformNumberAttribute.construct(this, 'to_port', this.internalValue?.toPort);
  }
}

export type TerraformSecurityGroupIngress = SecurityGroupIngress | TerraformSecurityGroupIngressAttribute;

export class TerraformSecurityGroupIngressSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: SecurityGroupIngress[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): SecurityGroupIngress[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformSecurityGroupIngressSet | undefined) {
    if (!(value instanceof TerraformSecurityGroupIngressSetAttribute)) {
      return new TerraformSecurityGroupIngressSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformSecurityGroupIngressSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(securityGroupIngressToTerraform)(this.internalValue);
  }

  public toList(): TerraformSecurityGroupIngressListAttribute {
    return new TerraformSecurityGroupIngressListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformSecurityGroupIngressSet = SecurityGroupIngress[] | TerraformSecurityGroupIngressSetAttribute;

export class TerraformSecurityGroupIngressListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: SecurityGroupIngress[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): SecurityGroupIngress[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformSecurityGroupIngressList | undefined) {
    if (!(value instanceof TerraformSecurityGroupIngressListAttribute)) {
      return new TerraformSecurityGroupIngressListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformSecurityGroupIngressListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(securityGroupIngressToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformSecurityGroupIngressAttribute {
    return new TerraformSecurityGroupIngressAttribute(this, index.toString());
  }
}

export type TerraformSecurityGroupIngressList = SecurityGroupIngress[] | TerraformSecurityGroupIngressListAttribute;

export interface SecurityGroupTimeouts {
  readonly create?: cdktf.TerraformString;
  readonly delete?: cdktf.TerraformString;
}

function securityGroupTimeoutsToTerraform(struct?: SecurityGroupTimeouts): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    create: struct!.create instanceof cdktf.TerraformAttribute ? struct!.create.toTerraform() : cdktf.stringToTerraform(struct!.create),
    delete: struct!.delete instanceof cdktf.TerraformAttribute ? struct!.delete.toTerraform() : cdktf.stringToTerraform(struct!.delete),
  }
}

export class TerraformSecurityGroupTimeoutsAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: SecurityGroupTimeouts, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): SecurityGroupTimeouts | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformSecurityGroupTimeouts | undefined) {
    if (!(value instanceof TerraformSecurityGroupTimeoutsAttribute)) {
      return new TerraformSecurityGroupTimeoutsAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformSecurityGroupTimeoutsAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return securityGroupTimeoutsToTerraform(this.internalValue);
  }


  // create - computed: false, optional: true, required: false
  public get create() {
    return cdktf.TerraformStringAttribute.construct(this, 'create', this.internalValue?.create);
  }

  // delete - computed: false, optional: true, required: false
  public get delete() {
    return cdktf.TerraformStringAttribute.construct(this, 'delete', this.internalValue?.delete);
  }
}

export type TerraformSecurityGroupTimeouts = SecurityGroupTimeouts | TerraformSecurityGroupTimeoutsAttribute;


// Resource

export class SecurityGroup extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: SecurityGroupConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_security_group',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._arn = new cdktf.TerraformStringAttribute(this, 'arn', undefined)
    this.putDescription(config.description ?? new cdktf.TerraformStringAttribute(this, 'description', undefined));
    this.putEgress(config.egress ?? new TerraformSecurityGroupEgressSetAttribute(this, 'egress', undefined));
    this._id = new cdktf.TerraformStringAttribute(this, 'id', undefined)
    this.putIngress(config.ingress ?? new TerraformSecurityGroupIngressSetAttribute(this, 'ingress', undefined));
    this.putName(config.name ?? new cdktf.TerraformStringAttribute(this, 'name', undefined));
    this.putNamePrefix(config.namePrefix ?? new cdktf.TerraformStringAttribute(this, 'name_prefix', undefined));
    this._ownerId = new cdktf.TerraformStringAttribute(this, 'owner_id', undefined)
    this.putRevokeRulesOnDelete(config.revokeRulesOnDelete ?? new cdktf.TerraformBooleanAttribute(this, 'revoke_rules_on_delete', undefined));
    this.putTags(config.tags ?? new cdktf.TerraformStringMapAttribute(this, 'tags', undefined));
    this.putVpcId(config.vpcId ?? new cdktf.TerraformStringAttribute(this, 'vpc_id', undefined));
    this.putTimeouts(config.timeouts ?? new TerraformSecurityGroupTimeoutsAttribute(this, 'timeouts', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // arn - computed: true, optional: false, required: false
  private _arn: cdktf.TerraformStringAttribute;
  public get arn() {
    return this._arn;
  }

  // description - computed: false, optional: true, required: false
  private _description!: cdktf.TerraformStringAttribute;
  public get description() {
    return this._description;
  }
  public putDescription(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._description.resetInternal();
    }
    else {
      this._description = cdktf.TerraformStringAttribute.construct(this, 'description', value);
    }
  }

  // egress - computed: true, optional: true, required: false
  private _egress!: TerraformSecurityGroupEgressSetAttribute;
  public get egress() {
    return this._egress;
  }
  public putEgress(value: TerraformSecurityGroupEgressSet | undefined) {
    if (value === undefined) {
      this._egress.resetInternal();
    }
    else {
      this._egress = TerraformSecurityGroupEgressSetAttribute.construct(this, 'egress', value);
    }
  }

  // id - computed: true, optional: true, required: false
  private _id: cdktf.TerraformStringAttribute;
  public get id() {
    return this._id;
  }

  // ingress - computed: true, optional: true, required: false
  private _ingress!: TerraformSecurityGroupIngressSetAttribute;
  public get ingress() {
    return this._ingress;
  }
  public putIngress(value: TerraformSecurityGroupIngressSet | undefined) {
    if (value === undefined) {
      this._ingress.resetInternal();
    }
    else {
      this._ingress = TerraformSecurityGroupIngressSetAttribute.construct(this, 'ingress', value);
    }
  }

  // name - computed: true, optional: true, required: false
  private _name!: cdktf.TerraformStringAttribute;
  public get name() {
    return this._name;
  }
  public putName(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._name.resetInternal();
    }
    else {
      this._name = cdktf.TerraformStringAttribute.construct(this, 'name', value);
    }
  }

  // name_prefix - computed: false, optional: true, required: false
  private _namePrefix!: cdktf.TerraformStringAttribute;
  public get namePrefix() {
    return this._namePrefix;
  }
  public putNamePrefix(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._namePrefix.resetInternal();
    }
    else {
      this._namePrefix = cdktf.TerraformStringAttribute.construct(this, 'name_prefix', value);
    }
  }

  // owner_id - computed: true, optional: false, required: false
  private _ownerId: cdktf.TerraformStringAttribute;
  public get ownerId() {
    return this._ownerId;
  }

  // revoke_rules_on_delete - computed: false, optional: true, required: false
  private _revokeRulesOnDelete!: cdktf.TerraformBooleanAttribute;
  public get revokeRulesOnDelete() {
    return this._revokeRulesOnDelete;
  }
  public putRevokeRulesOnDelete(value: cdktf.TerraformBoolean | undefined) {
    if (value === undefined) {
      this._revokeRulesOnDelete.resetInternal();
    }
    else {
      this._revokeRulesOnDelete = cdktf.TerraformBooleanAttribute.construct(this, 'revoke_rules_on_delete', value);
    }
  }

  // tags - computed: false, optional: true, required: false
  private _tags!: cdktf.TerraformStringMapAttribute;
  public get tags() {
    return this._tags;
  }
  public putTags(value: cdktf.TerraformStringMap | undefined) {
    if (value === undefined) {
      this._tags.resetInternal();
    }
    else {
      this._tags = cdktf.TerraformStringMapAttribute.construct(this, 'tags', value);
    }
  }

  // vpc_id - computed: true, optional: true, required: false
  private _vpcId!: cdktf.TerraformStringAttribute;
  public get vpcId() {
    return this._vpcId;
  }
  public putVpcId(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._vpcId.resetInternal();
    }
    else {
      this._vpcId = cdktf.TerraformStringAttribute.construct(this, 'vpc_id', value);
    }
  }

  // timeouts - computed: false, optional: true, required: false
  private _timeouts!: TerraformSecurityGroupTimeoutsAttribute;
  public get timeouts() {
    return this._timeouts;
  }
  public putTimeouts(value: TerraformSecurityGroupTimeouts | undefined) {
    if (value === undefined) {
      this._timeouts.resetInternal();
    }
    else {
      this._timeouts = TerraformSecurityGroupTimeoutsAttribute.construct(this, 'timeouts', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      description: this._description.toTerraform(),
      egress: this._egress.toTerraform(),
      ingress: this._ingress.toTerraform(),
      name: this._name.toTerraform(),
      name_prefix: this._namePrefix.toTerraform(),
      revoke_rules_on_delete: this._revokeRulesOnDelete.toTerraform(),
      tags: this._tags.toTerraform(),
      vpc_id: this._vpcId.toTerraform(),
      timeouts: this._timeouts.toTerraform(),
    };
  }
}
"
`;
