// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`boolean list attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/boolean_list.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface BooleanListConfig extends cdktf.TerraformMetaArguments {
  readonly fooRequired: cdktf.TerraformBooleanList;
  readonly fooOptional?: cdktf.TerraformBooleanList;
}

// Resource

export class BooleanList extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: BooleanListConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_boolean_list',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putFooRequired(config.fooRequired);
    this.putFooOptional(config.fooOptional ?? new cdktf.TerraformBooleanListAttribute(this, 'foo_optional', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_required - computed: false, optional: false, required: true
  private _fooRequired!: cdktf.TerraformBooleanListAttribute;
  public get fooRequired() {
    return this._fooRequired;
  }
  public putFooRequired(value: cdktf.TerraformBooleanList) {
    this._fooRequired = cdktf.TerraformBooleanListAttribute.construct(this, 'foo_required', value);
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional!: cdktf.TerraformBooleanListAttribute;
  public get fooOptional() {
    return this._fooOptional;
  }
  public putFooOptional(value: cdktf.TerraformBooleanList | undefined) {
    if (value === undefined) {
      this._fooOptional.resetInternal();
    }
    else {
      this._fooOptional = cdktf.TerraformBooleanListAttribute.construct(this, 'foo_optional', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_required: this._fooRequired.toTerraform(),
      foo_optional: this._fooOptional.toTerraform(),
    };
  }
}
"
`;

exports[`boolean map attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/boolean_map.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface BooleanMapConfig extends cdktf.TerraformMetaArguments {
  readonly fooComputedOptional?: cdktf.TerraformBooleanMap;
  readonly fooOptional?: cdktf.TerraformBooleanMap;
}

// Resource

export class BooleanMap extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: BooleanMapConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_boolean_map',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._fooComputed = new cdktf.TerraformBooleanMapAttribute(this, 'foo_computed', undefined)
    this.putFooComputedOptional(config.fooComputedOptional ?? new cdktf.TerraformBooleanMapAttribute(this, 'foo_computed_optional', undefined));
    this.putFooOptional(config.fooOptional ?? new cdktf.TerraformBooleanMapAttribute(this, 'foo_optional', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_computed - computed: true, optional: false, required: false
  private _fooComputed: cdktf.TerraformBooleanMapAttribute;
  public get fooComputed() {
    return this._fooComputed;
  }

  // foo_computed_optional - computed: true, optional: true, required: false
  private _fooComputedOptional!: cdktf.TerraformBooleanMapAttribute;
  public get fooComputedOptional() {
    return this._fooComputedOptional;
  }
  public putFooComputedOptional(value: cdktf.TerraformBooleanMap | undefined) {
    if (value === undefined) {
      this._fooComputedOptional.resetInternal();
    }
    else {
      this._fooComputedOptional = cdktf.TerraformBooleanMapAttribute.construct(this, 'foo_computed_optional', value);
    }
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional!: cdktf.TerraformBooleanMapAttribute;
  public get fooOptional() {
    return this._fooOptional;
  }
  public putFooOptional(value: cdktf.TerraformBooleanMap | undefined) {
    if (value === undefined) {
      this._fooOptional.resetInternal();
    }
    else {
      this._fooOptional = cdktf.TerraformBooleanMapAttribute.construct(this, 'foo_optional', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_computed_optional: this._fooComputedOptional.toTerraform(),
      foo_optional: this._fooOptional.toTerraform(),
    };
  }
}
"
`;

exports[`computed complex attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/computed_complex.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface ComputedComplexConfig extends cdktf.TerraformMetaArguments {
}
export class TerraformComputedComplexEgressAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: any, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  protected valueToTerraform(): any {
    return undefined;
  }


  // cidr_blocks - computed: true, optional: false, required: false
  public get cidrBlocks() {
    return cdktf.TerraformStringListAttribute.construct(this, 'cidr_blocks', undefined);
  }

  // description - computed: true, optional: false, required: false
  public get description() {
    return cdktf.TerraformStringAttribute.construct(this, 'description', undefined);
  }

  // from_port - computed: true, optional: false, required: false
  public get fromPort() {
    return cdktf.TerraformNumberAttribute.construct(this, 'from_port', undefined);
  }

  // ipv6_cidr_blocks - computed: true, optional: false, required: false
  public get ipv6CidrBlocks() {
    return cdktf.TerraformStringListAttribute.construct(this, 'ipv6_cidr_blocks', undefined);
  }

  // prefix_list_ids - computed: true, optional: false, required: false
  public get prefixListIds() {
    return cdktf.TerraformStringListAttribute.construct(this, 'prefix_list_ids', undefined);
  }

  // protocol - computed: true, optional: false, required: false
  public get protocol() {
    return cdktf.TerraformStringAttribute.construct(this, 'protocol', undefined);
  }

  // security_groups - computed: true, optional: false, required: false
  public get securityGroups() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'security_groups', undefined);
  }

  // self - computed: true, optional: false, required: false
  public get selfAttribute() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'self', undefined);
  }

  // to_port - computed: true, optional: false, required: false
  public get toPort() {
    return cdktf.TerraformNumberAttribute.construct(this, 'to_port', undefined);
  }
}

export class TerraformComputedComplexEgressSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: any, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  protected valueToTerraform(): any {
    return undefined;
  }

  public toList(): TerraformComputedComplexEgressListAttribute {
    return new TerraformComputedComplexEgressListAttribute(this.terraformParent, this.terraformAttribute, undefined, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export class TerraformComputedComplexEgressListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: any, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  protected valueToTerraform(): any {
    return undefined;
  }

  public get(index: number): TerraformComputedComplexEgressAttribute {
    return new TerraformComputedComplexEgressAttribute(this, index.toString());
  }
}


// Resource

export class ComputedComplex extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: ComputedComplexConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_computed_complex',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._egress = new TerraformComputedComplexEgressSetAttribute(this, 'egress', undefined)
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // egress - computed: true, optional: false, required: false
  private _egress: TerraformComputedComplexEgressSetAttribute;
  public get egress() {
    return this._egress;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
    };
  }
}
"
`;

exports[`computed complex nested attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/computed_complex_nested.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface ComputedComplexNestedConfig extends cdktf.TerraformMetaArguments {
}
export class TerraformComputedComplexNestedResourcesAutoscalingGroupsAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: any, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  protected valueToTerraform(): any {
    return undefined;
  }


  // name - computed: true, optional: false, required: false
  public get name() {
    return cdktf.TerraformStringAttribute.construct(this, 'name', undefined);
  }
}

export class TerraformComputedComplexNestedResourcesAutoscalingGroupsListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: any, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  protected valueToTerraform(): any {
    return undefined;
  }

  public get(index: number): TerraformComputedComplexNestedResourcesAutoscalingGroupsAttribute {
    return new TerraformComputedComplexNestedResourcesAutoscalingGroupsAttribute(this, index.toString());
  }
}

export class TerraformComputedComplexNestedResourcesAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: any, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  protected valueToTerraform(): any {
    return undefined;
  }


  // autoscaling_groups - computed: true, optional: false, required: false
  public get autoscalingGroups() {
    return new TerraformComputedComplexNestedResourcesAutoscalingGroupsListAttribute(this, 'autoscaling_groups');
  }

  // remote_access_security_group_id - computed: true, optional: false, required: false
  public get remoteAccessSecurityGroupId() {
    return cdktf.TerraformStringAttribute.construct(this, 'remote_access_security_group_id', undefined);
  }
}

export class TerraformComputedComplexNestedResourcesListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: any, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  protected valueToTerraform(): any {
    return undefined;
  }

  public get(index: number): TerraformComputedComplexNestedResourcesAttribute {
    return new TerraformComputedComplexNestedResourcesAttribute(this, index.toString());
  }
}


// Resource

export class ComputedComplexNested extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: ComputedComplexNestedConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_computed_complex_nested',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._resources = new TerraformComputedComplexNestedResourcesListAttribute(this, 'resources', undefined)
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // resources - computed: true, optional: false, required: false
  private _resources: TerraformComputedComplexNestedResourcesListAttribute;
  public get resources() {
    return this._resources;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
    };
  }
}
"
`;

exports[`computed nested complex list block type 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/block_type_nested_computed_list.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface BlockTypeNestedComputedListConfig extends cdktf.TerraformMetaArguments {
  /** inputs block */
  readonly inputs?: TerraformBlockTypeNestedComputedListInputsList;
}
export class TerraformBlockTypeNestedComputedListInputsStartingPositionConfigurationAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: any, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  protected valueToTerraform(): any {
    return undefined;
  }


  // starting_position - computed: true, optional: false, required: false
  public get startingPosition() {
    return cdktf.TerraformStringAttribute.construct(this, 'starting_position', undefined);
  }
}

export class TerraformBlockTypeNestedComputedListInputsStartingPositionConfigurationListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: any, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  protected valueToTerraform(): any {
    return undefined;
  }

  public get(index: number): TerraformBlockTypeNestedComputedListInputsStartingPositionConfigurationAttribute {
    return new TerraformBlockTypeNestedComputedListInputsStartingPositionConfigurationAttribute(this, index.toString());
  }
}

export interface BlockTypeNestedComputedListInputs {
  readonly namePrefix: cdktf.TerraformString;
}

function blockTypeNestedComputedListInputsToTerraform(struct?: BlockTypeNestedComputedListInputs): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    name_prefix: struct!.namePrefix instanceof cdktf.TerraformAttribute ? struct!.namePrefix.toTerraform() : cdktf.stringToTerraform(struct!.namePrefix),
  }
}

export class TerraformBlockTypeNestedComputedListInputsAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: BlockTypeNestedComputedListInputs, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): BlockTypeNestedComputedListInputs | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformBlockTypeNestedComputedListInputs | undefined) {
    if (!(value instanceof TerraformBlockTypeNestedComputedListInputsAttribute)) {
      return new TerraformBlockTypeNestedComputedListInputsAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformBlockTypeNestedComputedListInputsAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return blockTypeNestedComputedListInputsToTerraform(this.internalValue);
  }


  // id - computed: true, optional: false, required: false
  public get id() {
    return cdktf.TerraformStringAttribute.construct(this, 'id', undefined);
  }

  // name_prefix - computed: false, optional: false, required: true
  public get namePrefix() {
    return cdktf.TerraformStringAttribute.construct(this, 'name_prefix', this.internalValue?.namePrefix);
  }

  // starting_position_configuration - computed: true, optional: false, required: false
  public get startingPositionConfiguration() {
    return new TerraformBlockTypeNestedComputedListInputsStartingPositionConfigurationListAttribute(this, 'starting_position_configuration');
  }

  // stream_names - computed: true, optional: false, required: false
  public get streamNames() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'stream_names', undefined);
  }
}

export type TerraformBlockTypeNestedComputedListInputs = BlockTypeNestedComputedListInputs | TerraformBlockTypeNestedComputedListInputsAttribute;

export class TerraformBlockTypeNestedComputedListInputsListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: BlockTypeNestedComputedListInputs[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): BlockTypeNestedComputedListInputs[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformBlockTypeNestedComputedListInputsList | undefined) {
    if (!(value instanceof TerraformBlockTypeNestedComputedListInputsListAttribute)) {
      return new TerraformBlockTypeNestedComputedListInputsListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformBlockTypeNestedComputedListInputsListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(blockTypeNestedComputedListInputsToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformBlockTypeNestedComputedListInputsAttribute {
    return new TerraformBlockTypeNestedComputedListInputsAttribute(this, index.toString());
  }
}

export type TerraformBlockTypeNestedComputedListInputsList = BlockTypeNestedComputedListInputs[] | TerraformBlockTypeNestedComputedListInputsListAttribute;


// Resource

export class BlockTypeNestedComputedList extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: BlockTypeNestedComputedListConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_block_type_nested_computed_list',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putInputs(config.inputs ?? new TerraformBlockTypeNestedComputedListInputsListAttribute(this, 'inputs', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // inputs - computed: false, optional: true, required: false
  private _inputs!: TerraformBlockTypeNestedComputedListInputsListAttribute;
  public get inputs() {
    return this._inputs;
  }
  public putInputs(value: TerraformBlockTypeNestedComputedListInputsList | undefined) {
    if (value === undefined) {
      this._inputs.resetInternal();
    }
    else {
      this._inputs = TerraformBlockTypeNestedComputedListInputsListAttribute.construct(this, 'inputs', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      inputs: this._inputs.toTerraform(),
    };
  }
}
"
`;

exports[`computed optional complex attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/computed_optional_complex.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface ComputedOptionalComplexConfig extends cdktf.TerraformMetaArguments {
  readonly egress?: TerraformComputedOptionalComplexEgressSet;
}
export interface ComputedOptionalComplexEgress {
  readonly cidrBlocks?: cdktf.TerraformStringList;
  readonly description?: cdktf.TerraformString;
  readonly fromPort?: cdktf.TerraformNumber;
  readonly ipv6CidrBlocks?: cdktf.TerraformStringList;
  readonly prefixListIds?: cdktf.TerraformStringList;
  readonly protocol?: cdktf.TerraformString;
  readonly securityGroups?: cdktf.TerraformStringSet;
  readonly selfAttribute?: cdktf.TerraformBoolean;
  readonly toPort?: cdktf.TerraformNumber;
}

function computedOptionalComplexEgressToTerraform(struct?: ComputedOptionalComplexEgress): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    cidr_blocks: struct!.cidrBlocks instanceof cdktf.TerraformAttribute ? struct!.cidrBlocks.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.cidrBlocks),
    description: struct!.description instanceof cdktf.TerraformAttribute ? struct!.description.toTerraform() : cdktf.stringToTerraform(struct!.description),
    from_port: struct!.fromPort instanceof cdktf.TerraformAttribute ? struct!.fromPort.toTerraform() : cdktf.numberToTerraform(struct!.fromPort),
    ipv6_cidr_blocks: struct!.ipv6CidrBlocks instanceof cdktf.TerraformAttribute ? struct!.ipv6CidrBlocks.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.ipv6CidrBlocks),
    prefix_list_ids: struct!.prefixListIds instanceof cdktf.TerraformAttribute ? struct!.prefixListIds.toTerraform() : cdktf.listMapper(cdktf.stringToTerraform)(struct!.prefixListIds),
    protocol: struct!.protocol instanceof cdktf.TerraformAttribute ? struct!.protocol.toTerraform() : cdktf.stringToTerraform(struct!.protocol),
    security_groups: struct!.securityGroups instanceof cdktf.TerraformAttribute ? struct!.securityGroups.toTerraform() : cdktf.setMapper(cdktf.stringToTerraform)(struct!.securityGroups),
    self: struct!.selfAttribute instanceof cdktf.TerraformAttribute ? struct!.selfAttribute.toTerraform() : cdktf.booleanToTerraform(struct!.selfAttribute),
    to_port: struct!.toPort instanceof cdktf.TerraformAttribute ? struct!.toPort.toTerraform() : cdktf.numberToTerraform(struct!.toPort),
  }
}

export class TerraformComputedOptionalComplexEgressAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: ComputedOptionalComplexEgress, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): ComputedOptionalComplexEgress | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformComputedOptionalComplexEgress | undefined) {
    if (!(value instanceof TerraformComputedOptionalComplexEgressAttribute)) {
      return new TerraformComputedOptionalComplexEgressAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformComputedOptionalComplexEgressAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return computedOptionalComplexEgressToTerraform(this.internalValue);
  }


  // cidr_blocks - computed: true, optional: true, required: false
  public get cidrBlocks() {
    return cdktf.TerraformStringListAttribute.construct(this, 'cidr_blocks', this.internalValue?.cidrBlocks);
  }

  // description - computed: true, optional: true, required: false
  public get description() {
    return cdktf.TerraformStringAttribute.construct(this, 'description', this.internalValue?.description);
  }

  // from_port - computed: true, optional: true, required: false
  public get fromPort() {
    return cdktf.TerraformNumberAttribute.construct(this, 'from_port', this.internalValue?.fromPort);
  }

  // ipv6_cidr_blocks - computed: true, optional: true, required: false
  public get ipv6CidrBlocks() {
    return cdktf.TerraformStringListAttribute.construct(this, 'ipv6_cidr_blocks', this.internalValue?.ipv6CidrBlocks);
  }

  // prefix_list_ids - computed: true, optional: true, required: false
  public get prefixListIds() {
    return cdktf.TerraformStringListAttribute.construct(this, 'prefix_list_ids', this.internalValue?.prefixListIds);
  }

  // protocol - computed: true, optional: true, required: false
  public get protocol() {
    return cdktf.TerraformStringAttribute.construct(this, 'protocol', this.internalValue?.protocol);
  }

  // security_groups - computed: true, optional: true, required: false
  public get securityGroups() {
    return cdktf.TerraformStringSetAttribute.construct(this, 'security_groups', this.internalValue?.securityGroups);
  }

  // self - computed: true, optional: true, required: false
  public get selfAttribute() {
    return cdktf.TerraformBooleanAttribute.construct(this, 'self', this.internalValue?.selfAttribute);
  }

  // to_port - computed: true, optional: true, required: false
  public get toPort() {
    return cdktf.TerraformNumberAttribute.construct(this, 'to_port', this.internalValue?.toPort);
  }
}

export type TerraformComputedOptionalComplexEgress = ComputedOptionalComplexEgress | TerraformComputedOptionalComplexEgressAttribute;

export class TerraformComputedOptionalComplexEgressSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: ComputedOptionalComplexEgress[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): ComputedOptionalComplexEgress[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformComputedOptionalComplexEgressSet | undefined) {
    if (!(value instanceof TerraformComputedOptionalComplexEgressSetAttribute)) {
      return new TerraformComputedOptionalComplexEgressSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformComputedOptionalComplexEgressSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(computedOptionalComplexEgressToTerraform)(this.internalValue);
  }

  public toList(): TerraformComputedOptionalComplexEgressListAttribute {
    return new TerraformComputedOptionalComplexEgressListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformComputedOptionalComplexEgressSet = ComputedOptionalComplexEgress[] | TerraformComputedOptionalComplexEgressSetAttribute;

export class TerraformComputedOptionalComplexEgressListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: ComputedOptionalComplexEgress[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): ComputedOptionalComplexEgress[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformComputedOptionalComplexEgressList | undefined) {
    if (!(value instanceof TerraformComputedOptionalComplexEgressListAttribute)) {
      return new TerraformComputedOptionalComplexEgressListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformComputedOptionalComplexEgressListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(computedOptionalComplexEgressToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformComputedOptionalComplexEgressAttribute {
    return new TerraformComputedOptionalComplexEgressAttribute(this, index.toString());
  }
}

export type TerraformComputedOptionalComplexEgressList = ComputedOptionalComplexEgress[] | TerraformComputedOptionalComplexEgressListAttribute;


// Resource

export class ComputedOptionalComplex extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: ComputedOptionalComplexConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_computed_optional_complex',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putEgress(config.egress ?? new TerraformComputedOptionalComplexEgressSetAttribute(this, 'egress', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // egress - computed: true, optional: true, required: false
  private _egress!: TerraformComputedOptionalComplexEgressSetAttribute;
  public get egress() {
    return this._egress;
  }
  public putEgress(value: TerraformComputedOptionalComplexEgressSet | undefined) {
    if (value === undefined) {
      this._egress.resetInternal();
    }
    else {
      this._egress = TerraformComputedOptionalComplexEgressSetAttribute.construct(this, 'egress', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      egress: this._egress.toTerraform(),
    };
  }
}
"
`;

exports[`deeply nested block types 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/deeply_nested_block_types.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface DeeplyNestedBlockTypesConfig extends cdktf.TerraformMetaArguments {
  /** lifecycle_rule block */
  readonly lifecycleRule?: TerraformDeeplyNestedBlockTypesLifecycleRuleList;
}
export interface DeeplyNestedBlockTypesLifecycleRuleExpiration {
  readonly date?: cdktf.TerraformString;
}

function deeplyNestedBlockTypesLifecycleRuleExpirationToTerraform(struct?: DeeplyNestedBlockTypesLifecycleRuleExpiration): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    date: struct!.date instanceof cdktf.TerraformAttribute ? struct!.date.toTerraform() : cdktf.stringToTerraform(struct!.date),
  }
}

export class TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: DeeplyNestedBlockTypesLifecycleRuleExpiration, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): DeeplyNestedBlockTypesLifecycleRuleExpiration | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformDeeplyNestedBlockTypesLifecycleRuleExpiration | undefined) {
    if (!(value instanceof TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationAttribute)) {
      return new TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return deeplyNestedBlockTypesLifecycleRuleExpirationToTerraform(this.internalValue);
  }


  // date - computed: false, optional: true, required: false
  public get date() {
    return cdktf.TerraformStringAttribute.construct(this, 'date', this.internalValue?.date);
  }
}

export type TerraformDeeplyNestedBlockTypesLifecycleRuleExpiration = DeeplyNestedBlockTypesLifecycleRuleExpiration | TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationAttribute;

export class TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: DeeplyNestedBlockTypesLifecycleRuleExpiration[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): DeeplyNestedBlockTypesLifecycleRuleExpiration[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationSet | undefined) {
    if (!(value instanceof TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationSetAttribute)) {
      return new TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(deeplyNestedBlockTypesLifecycleRuleExpirationToTerraform)(this.internalValue);
  }

  public toList(): TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationListAttribute {
    return new TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationSet = DeeplyNestedBlockTypesLifecycleRuleExpiration[] | TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationSetAttribute;

export class TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: DeeplyNestedBlockTypesLifecycleRuleExpiration[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): DeeplyNestedBlockTypesLifecycleRuleExpiration[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationList | undefined) {
    if (!(value instanceof TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationListAttribute)) {
      return new TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(deeplyNestedBlockTypesLifecycleRuleExpirationToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationAttribute {
    return new TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationAttribute(this, index.toString());
  }
}

export type TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationList = DeeplyNestedBlockTypesLifecycleRuleExpiration[] | TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationListAttribute;

export interface DeeplyNestedBlockTypesLifecycleRule {
  readonly abortIncompleteMultipartUploadDays?: cdktf.TerraformNumber;
  /** expiration block */
  readonly expiration?: TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationSet;
}

function deeplyNestedBlockTypesLifecycleRuleToTerraform(struct?: DeeplyNestedBlockTypesLifecycleRule): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    abort_incomplete_multipart_upload_days: struct!.abortIncompleteMultipartUploadDays instanceof cdktf.TerraformAttribute ? struct!.abortIncompleteMultipartUploadDays.toTerraform() : cdktf.numberToTerraform(struct!.abortIncompleteMultipartUploadDays),
    expiration: struct!.expiration instanceof cdktf.TerraformAttribute ? struct!.expiration.toTerraform() : cdktf.setMapper(deeplyNestedBlockTypesLifecycleRuleExpirationToTerraform)(struct!.expiration),
  }
}

export class TerraformDeeplyNestedBlockTypesLifecycleRuleAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: DeeplyNestedBlockTypesLifecycleRule, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): DeeplyNestedBlockTypesLifecycleRule | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformDeeplyNestedBlockTypesLifecycleRule | undefined) {
    if (!(value instanceof TerraformDeeplyNestedBlockTypesLifecycleRuleAttribute)) {
      return new TerraformDeeplyNestedBlockTypesLifecycleRuleAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformDeeplyNestedBlockTypesLifecycleRuleAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return deeplyNestedBlockTypesLifecycleRuleToTerraform(this.internalValue);
  }


  // abort_incomplete_multipart_upload_days - computed: false, optional: true, required: false
  public get abortIncompleteMultipartUploadDays() {
    return cdktf.TerraformNumberAttribute.construct(this, 'abort_incomplete_multipart_upload_days', this.internalValue?.abortIncompleteMultipartUploadDays);
  }

  // expiration - computed: false, optional: true, required: false
  public get expiration() {
    return new TerraformDeeplyNestedBlockTypesLifecycleRuleExpirationSetAttribute(this, 'expiration');
  }
}

export type TerraformDeeplyNestedBlockTypesLifecycleRule = DeeplyNestedBlockTypesLifecycleRule | TerraformDeeplyNestedBlockTypesLifecycleRuleAttribute;

export class TerraformDeeplyNestedBlockTypesLifecycleRuleListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: DeeplyNestedBlockTypesLifecycleRule[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): DeeplyNestedBlockTypesLifecycleRule[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformDeeplyNestedBlockTypesLifecycleRuleList | undefined) {
    if (!(value instanceof TerraformDeeplyNestedBlockTypesLifecycleRuleListAttribute)) {
      return new TerraformDeeplyNestedBlockTypesLifecycleRuleListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformDeeplyNestedBlockTypesLifecycleRuleListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(deeplyNestedBlockTypesLifecycleRuleToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformDeeplyNestedBlockTypesLifecycleRuleAttribute {
    return new TerraformDeeplyNestedBlockTypesLifecycleRuleAttribute(this, index.toString());
  }
}

export type TerraformDeeplyNestedBlockTypesLifecycleRuleList = DeeplyNestedBlockTypesLifecycleRule[] | TerraformDeeplyNestedBlockTypesLifecycleRuleListAttribute;


// Resource

export class DeeplyNestedBlockTypes extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: DeeplyNestedBlockTypesConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_deeply_nested_block_types',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putLifecycleRule(config.lifecycleRule ?? new TerraformDeeplyNestedBlockTypesLifecycleRuleListAttribute(this, 'lifecycle_rule', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // lifecycle_rule - computed: false, optional: true, required: false
  private _lifecycleRule!: TerraformDeeplyNestedBlockTypesLifecycleRuleListAttribute;
  public get lifecycleRule() {
    return this._lifecycleRule;
  }
  public putLifecycleRule(value: TerraformDeeplyNestedBlockTypesLifecycleRuleList | undefined) {
    if (value === undefined) {
      this._lifecycleRule.resetInternal();
    }
    else {
      this._lifecycleRule = TerraformDeeplyNestedBlockTypesLifecycleRuleListAttribute.construct(this, 'lifecycle_rule', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      lifecycle_rule: this._lifecycleRule.toTerraform(),
    };
  }
}
"
`;

exports[`ignored attributes 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/ignored_attributes.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface IgnoredAttributesConfig extends cdktf.TerraformMetaArguments {
}

// Resource

export class IgnoredAttributes extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: IgnoredAttributesConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_ignored_attributes',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._id = new cdktf.TerraformStringAttribute(this, 'id', undefined)
    this._arn = new cdktf.TerraformStringAttribute(this, 'arn', undefined)
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // id - computed: true, optional: true, required: false
  private _id: cdktf.TerraformStringAttribute;
  public get id() {
    return this._id;
  }

  // arn - computed: true, optional: false, required: false
  private _arn: cdktf.TerraformStringAttribute;
  public get arn() {
    return this._arn;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
    };
  }
}
"
`;

exports[`incompatible attribute names 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/incompatible_attribute_names.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface IncompatibleAttributeNamesConfig extends cdktf.TerraformMetaArguments {
  readonly fetchPasswordData?: cdktf.TerraformString;
  readonly selfAttribute: cdktf.TerraformString;
  readonly equalTo: cdktf.TerraformString;
}

// Resource

export class IncompatibleAttributeNames extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: IncompatibleAttributeNamesConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_incompatible_attribute_names',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putFetchPasswordData(config.fetchPasswordData ?? new cdktf.TerraformStringAttribute(this, 'get_password_data', undefined));
    this.putSelfAttribute(config.selfAttribute);
    this.putEqualTo(config.equalTo);
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // get_password_data - computed: false, optional: true, required: false
  private _getPasswordData!: cdktf.TerraformStringAttribute;
  public get fetchPasswordData() {
    return this._getPasswordData;
  }
  public putFetchPasswordData(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._getPasswordData.resetInternal();
    }
    else {
      this._getPasswordData = cdktf.TerraformStringAttribute.construct(this, 'get_password_data', value);
    }
  }

  // self - computed: false, optional: false, required: true
  private _self!: cdktf.TerraformStringAttribute;
  public get selfAttribute() {
    return this._self;
  }
  public putSelfAttribute(value: cdktf.TerraformString) {
    this._self = cdktf.TerraformStringAttribute.construct(this, 'self', value);
  }

  // equals - computed: false, optional: false, required: true
  private _equals!: cdktf.TerraformStringAttribute;
  public get equalTo() {
    return this._equals;
  }
  public putEqualTo(value: cdktf.TerraformString) {
    this._equals = cdktf.TerraformStringAttribute.construct(this, 'equals', value);
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      get_password_data: this._getPasswordData.toTerraform(),
      self: this._self.toTerraform(),
      equals: this._equals.toTerraform(),
    };
  }
}
"
`;

exports[`list of string map attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/list_of_string_map.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface ListOfStringMapConfig extends cdktf.TerraformMetaArguments {
}

// Resource

export class ListOfStringMap extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: ListOfStringMapConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_list_of_string_map',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._keys = new cdktf.TerraformStringListAttribute(this, 'keys', undefined)
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // keys - computed: true, optional: false, required: false
  private _keys: cdktf.TerraformStringListAttribute;
  public get keys() {
    return this._keys;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
    };
  }
}
"
`;

exports[`number list attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/number_list.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface NumberListConfig extends cdktf.TerraformMetaArguments {
  readonly fooRequired: cdktf.TerraformNumberList;
  readonly fooOptional?: cdktf.TerraformNumberList;
}

// Resource

export class NumberList extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: NumberListConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_number_list',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putFooRequired(config.fooRequired);
    this.putFooOptional(config.fooOptional ?? new cdktf.TerraformNumberListAttribute(this, 'foo_optional', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_required - computed: false, optional: false, required: true
  private _fooRequired!: cdktf.TerraformNumberListAttribute;
  public get fooRequired() {
    return this._fooRequired;
  }
  public putFooRequired(value: cdktf.TerraformNumberList) {
    this._fooRequired = cdktf.TerraformNumberListAttribute.construct(this, 'foo_required', value);
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional!: cdktf.TerraformNumberListAttribute;
  public get fooOptional() {
    return this._fooOptional;
  }
  public putFooOptional(value: cdktf.TerraformNumberList | undefined) {
    if (value === undefined) {
      this._fooOptional.resetInternal();
    }
    else {
      this._fooOptional = cdktf.TerraformNumberListAttribute.construct(this, 'foo_optional', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_required: this._fooRequired.toTerraform(),
      foo_optional: this._fooOptional.toTerraform(),
    };
  }
}
"
`;

exports[`number map attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/number_map.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface NumberMapConfig extends cdktf.TerraformMetaArguments {
  readonly fooComputedOptional?: cdktf.TerraformNumberMap;
  readonly fooOptional?: cdktf.TerraformNumberMap;
}

// Resource

export class NumberMap extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: NumberMapConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_number_map',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._fooComputed = new cdktf.TerraformNumberMapAttribute(this, 'foo_computed', undefined)
    this.putFooComputedOptional(config.fooComputedOptional ?? new cdktf.TerraformNumberMapAttribute(this, 'foo_computed_optional', undefined));
    this.putFooOptional(config.fooOptional ?? new cdktf.TerraformNumberMapAttribute(this, 'foo_optional', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_computed - computed: true, optional: false, required: false
  private _fooComputed: cdktf.TerraformNumberMapAttribute;
  public get fooComputed() {
    return this._fooComputed;
  }

  // foo_computed_optional - computed: true, optional: true, required: false
  private _fooComputedOptional!: cdktf.TerraformNumberMapAttribute;
  public get fooComputedOptional() {
    return this._fooComputedOptional;
  }
  public putFooComputedOptional(value: cdktf.TerraformNumberMap | undefined) {
    if (value === undefined) {
      this._fooComputedOptional.resetInternal();
    }
    else {
      this._fooComputedOptional = cdktf.TerraformNumberMapAttribute.construct(this, 'foo_computed_optional', value);
    }
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional!: cdktf.TerraformNumberMapAttribute;
  public get fooOptional() {
    return this._fooOptional;
  }
  public putFooOptional(value: cdktf.TerraformNumberMap | undefined) {
    if (value === undefined) {
      this._fooOptional.resetInternal();
    }
    else {
      this._fooOptional = cdktf.TerraformNumberMapAttribute.construct(this, 'foo_optional', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_computed_optional: this._fooComputedOptional.toTerraform(),
      foo_optional: this._fooOptional.toTerraform(),
    };
  }
}
"
`;

exports[`primitive boolean 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/primitive_boolean.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface PrimitiveBooleanConfig extends cdktf.TerraformMetaArguments {
  readonly fooComputedOptional?: cdktf.TerraformBoolean;
  readonly fooOptional?: cdktf.TerraformBoolean;
  readonly fooRequired: cdktf.TerraformBoolean;
}

// Resource

export class PrimitiveBoolean extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: PrimitiveBooleanConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_primitive_boolean',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._fooComputed = new cdktf.TerraformBooleanAttribute(this, 'foo_computed', undefined)
    this.putFooComputedOptional(config.fooComputedOptional ?? new cdktf.TerraformBooleanAttribute(this, 'foo_computed_optional', undefined));
    this.putFooOptional(config.fooOptional ?? new cdktf.TerraformBooleanAttribute(this, 'foo_optional', undefined));
    this.putFooRequired(config.fooRequired);
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_computed - computed: true, optional: false, required: false
  private _fooComputed: cdktf.TerraformBooleanAttribute;
  public get fooComputed() {
    return this._fooComputed;
  }

  // foo_computed_optional - computed: true, optional: true, required: false
  private _fooComputedOptional!: cdktf.TerraformBooleanAttribute;
  public get fooComputedOptional() {
    return this._fooComputedOptional;
  }
  public putFooComputedOptional(value: cdktf.TerraformBoolean | undefined) {
    if (value === undefined) {
      this._fooComputedOptional.resetInternal();
    }
    else {
      this._fooComputedOptional = cdktf.TerraformBooleanAttribute.construct(this, 'foo_computed_optional', value);
    }
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional!: cdktf.TerraformBooleanAttribute;
  public get fooOptional() {
    return this._fooOptional;
  }
  public putFooOptional(value: cdktf.TerraformBoolean | undefined) {
    if (value === undefined) {
      this._fooOptional.resetInternal();
    }
    else {
      this._fooOptional = cdktf.TerraformBooleanAttribute.construct(this, 'foo_optional', value);
    }
  }

  // foo_required - computed: false, optional: false, required: true
  private _fooRequired!: cdktf.TerraformBooleanAttribute;
  public get fooRequired() {
    return this._fooRequired;
  }
  public putFooRequired(value: cdktf.TerraformBoolean) {
    this._fooRequired = cdktf.TerraformBooleanAttribute.construct(this, 'foo_required', value);
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_computed_optional: this._fooComputedOptional.toTerraform(),
      foo_optional: this._fooOptional.toTerraform(),
      foo_required: this._fooRequired.toTerraform(),
    };
  }
}
"
`;

exports[`primitive dynamic 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/primitive_dynamic.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface PrimitiveDynamicConfig extends cdktf.TerraformMetaArguments {
  readonly fooComputedOptional?: cdktf.TerraformDynamic;
  readonly fooOptional?: cdktf.TerraformDynamic;
  readonly fooRequired: cdktf.TerraformDynamic;
}

// Resource

export class PrimitiveDynamic extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: PrimitiveDynamicConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_primitive_dynamic',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._fooComputed = new cdktf.TerraformDynamicAttribute(this, 'foo_computed', undefined)
    this.putFooComputedOptional(config.fooComputedOptional ?? new cdktf.TerraformDynamicAttribute(this, 'foo_computed_optional', undefined));
    this.putFooOptional(config.fooOptional ?? new cdktf.TerraformDynamicAttribute(this, 'foo_optional', undefined));
    this.putFooRequired(config.fooRequired);
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_computed - computed: true, optional: false, required: false
  private _fooComputed: cdktf.TerraformDynamicAttribute;
  public get fooComputed() {
    return this._fooComputed;
  }

  // foo_computed_optional - computed: true, optional: true, required: false
  private _fooComputedOptional!: cdktf.TerraformDynamicAttribute;
  public get fooComputedOptional() {
    return this._fooComputedOptional;
  }
  public putFooComputedOptional(value: cdktf.TerraformDynamic | undefined) {
    if (value === undefined) {
      this._fooComputedOptional.resetInternal();
    }
    else {
      this._fooComputedOptional = cdktf.TerraformDynamicAttribute.construct(this, 'foo_computed_optional', value);
    }
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional!: cdktf.TerraformDynamicAttribute;
  public get fooOptional() {
    return this._fooOptional;
  }
  public putFooOptional(value: cdktf.TerraformDynamic | undefined) {
    if (value === undefined) {
      this._fooOptional.resetInternal();
    }
    else {
      this._fooOptional = cdktf.TerraformDynamicAttribute.construct(this, 'foo_optional', value);
    }
  }

  // foo_required - computed: false, optional: false, required: true
  private _fooRequired!: cdktf.TerraformDynamicAttribute;
  public get fooRequired() {
    return this._fooRequired;
  }
  public putFooRequired(value: cdktf.TerraformDynamic) {
    this._fooRequired = cdktf.TerraformDynamicAttribute.construct(this, 'foo_required', value);
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_computed_optional: this._fooComputedOptional.toTerraform(),
      foo_optional: this._fooOptional.toTerraform(),
      foo_required: this._fooRequired.toTerraform(),
    };
  }
}
"
`;

exports[`primitive number 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/primitive_number.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface PrimitiveNumberConfig extends cdktf.TerraformMetaArguments {
  readonly fooComputedOptional?: cdktf.TerraformNumber;
  readonly fooOptional?: cdktf.TerraformNumber;
  readonly fooRequired: cdktf.TerraformNumber;
}

// Resource

export class PrimitiveNumber extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: PrimitiveNumberConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_primitive_number',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._fooComputed = new cdktf.TerraformNumberAttribute(this, 'foo_computed', undefined)
    this.putFooComputedOptional(config.fooComputedOptional ?? new cdktf.TerraformNumberAttribute(this, 'foo_computed_optional', undefined));
    this.putFooOptional(config.fooOptional ?? new cdktf.TerraformNumberAttribute(this, 'foo_optional', undefined));
    this.putFooRequired(config.fooRequired);
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_computed - computed: true, optional: false, required: false
  private _fooComputed: cdktf.TerraformNumberAttribute;
  public get fooComputed() {
    return this._fooComputed;
  }

  // foo_computed_optional - computed: true, optional: true, required: false
  private _fooComputedOptional!: cdktf.TerraformNumberAttribute;
  public get fooComputedOptional() {
    return this._fooComputedOptional;
  }
  public putFooComputedOptional(value: cdktf.TerraformNumber | undefined) {
    if (value === undefined) {
      this._fooComputedOptional.resetInternal();
    }
    else {
      this._fooComputedOptional = cdktf.TerraformNumberAttribute.construct(this, 'foo_computed_optional', value);
    }
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional!: cdktf.TerraformNumberAttribute;
  public get fooOptional() {
    return this._fooOptional;
  }
  public putFooOptional(value: cdktf.TerraformNumber | undefined) {
    if (value === undefined) {
      this._fooOptional.resetInternal();
    }
    else {
      this._fooOptional = cdktf.TerraformNumberAttribute.construct(this, 'foo_optional', value);
    }
  }

  // foo_required - computed: false, optional: false, required: true
  private _fooRequired!: cdktf.TerraformNumberAttribute;
  public get fooRequired() {
    return this._fooRequired;
  }
  public putFooRequired(value: cdktf.TerraformNumber) {
    this._fooRequired = cdktf.TerraformNumberAttribute.construct(this, 'foo_required', value);
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_computed_optional: this._fooComputedOptional.toTerraform(),
      foo_optional: this._fooOptional.toTerraform(),
      foo_required: this._fooRequired.toTerraform(),
    };
  }
}
"
`;

exports[`primitive string 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/primitive_string.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface PrimitiveStringConfig extends cdktf.TerraformMetaArguments {
  readonly fooComputedOptional?: cdktf.TerraformString;
  readonly fooOptional?: cdktf.TerraformString;
  readonly fooRequired: cdktf.TerraformString;
}

// Resource

export class PrimitiveString extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: PrimitiveStringConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_primitive_string',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._fooComputed = new cdktf.TerraformStringAttribute(this, 'foo_computed', undefined)
    this.putFooComputedOptional(config.fooComputedOptional ?? new cdktf.TerraformStringAttribute(this, 'foo_computed_optional', undefined));
    this.putFooOptional(config.fooOptional ?? new cdktf.TerraformStringAttribute(this, 'foo_optional', undefined));
    this.putFooRequired(config.fooRequired);
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_computed - computed: true, optional: false, required: false
  private _fooComputed: cdktf.TerraformStringAttribute;
  public get fooComputed() {
    return this._fooComputed;
  }

  // foo_computed_optional - computed: true, optional: true, required: false
  private _fooComputedOptional!: cdktf.TerraformStringAttribute;
  public get fooComputedOptional() {
    return this._fooComputedOptional;
  }
  public putFooComputedOptional(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._fooComputedOptional.resetInternal();
    }
    else {
      this._fooComputedOptional = cdktf.TerraformStringAttribute.construct(this, 'foo_computed_optional', value);
    }
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional!: cdktf.TerraformStringAttribute;
  public get fooOptional() {
    return this._fooOptional;
  }
  public putFooOptional(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._fooOptional.resetInternal();
    }
    else {
      this._fooOptional = cdktf.TerraformStringAttribute.construct(this, 'foo_optional', value);
    }
  }

  // foo_required - computed: false, optional: false, required: true
  private _fooRequired!: cdktf.TerraformStringAttribute;
  public get fooRequired() {
    return this._fooRequired;
  }
  public putFooRequired(value: cdktf.TerraformString) {
    this._fooRequired = cdktf.TerraformStringAttribute.construct(this, 'foo_required', value);
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_computed_optional: this._fooComputedOptional.toTerraform(),
      foo_optional: this._fooOptional.toTerraform(),
      foo_required: this._fooRequired.toTerraform(),
    };
  }
}
"
`;

exports[`reset and input name conflicts 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/name_conflict.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface NameConflictConfig extends cdktf.TerraformMetaArguments {
  readonly values?: cdktf.TerraformString;
  readonly resetValues?: cdktf.TerraformString;
  readonly template?: cdktf.TerraformString;
  readonly templateInput?: cdktf.TerraformString;
}

// Resource

export class NameConflict extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: NameConflictConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_name_conflict',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putValues(config.values ?? new cdktf.TerraformStringAttribute(this, 'values', undefined));
    this.putResetValues(config.resetValues ?? new cdktf.TerraformStringAttribute(this, 'reset_values', undefined));
    this.putTemplate(config.template ?? new cdktf.TerraformStringAttribute(this, 'template', undefined));
    this.putTemplateInput(config.templateInput ?? new cdktf.TerraformStringAttribute(this, 'template_input', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // values - computed: false, optional: true, required: false
  private _values!: cdktf.TerraformStringAttribute;
  public get values() {
    return this._values;
  }
  public putValues(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._values.resetInternal();
    }
    else {
      this._values = cdktf.TerraformStringAttribute.construct(this, 'values', value);
    }
  }

  // reset_values - computed: false, optional: true, required: false
  private _resetValues!: cdktf.TerraformStringAttribute;
  public get resetValues() {
    return this._resetValues;
  }
  public putResetValues(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._resetValues.resetInternal();
    }
    else {
      this._resetValues = cdktf.TerraformStringAttribute.construct(this, 'reset_values', value);
    }
  }

  // template - computed: false, optional: true, required: false
  private _template!: cdktf.TerraformStringAttribute;
  public get template() {
    return this._template;
  }
  public putTemplate(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._template.resetInternal();
    }
    else {
      this._template = cdktf.TerraformStringAttribute.construct(this, 'template', value);
    }
  }

  // template_input - computed: false, optional: true, required: false
  private _templateInput!: cdktf.TerraformStringAttribute;
  public get templateInput() {
    return this._templateInput;
  }
  public putTemplateInput(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._templateInput.resetInternal();
    }
    else {
      this._templateInput = cdktf.TerraformStringAttribute.construct(this, 'template_input', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      values: this._values.toTerraform(),
      reset_values: this._resetValues.toTerraform(),
      template: this._template.toTerraform(),
      template_input: this._templateInput.toTerraform(),
    };
  }
}
"
`;

exports[`set / list block type 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/block_type_set_list.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface BlockTypeSetListConfig extends cdktf.TerraformMetaArguments {
  /** timeouts_set block */
  readonly timeoutsSet?: TerraformBlockTypeSetListTimeoutsSetSet;
  /** timeouts_list block */
  readonly timeoutsList?: TerraformBlockTypeSetListTimeoutsListList;
}
export interface BlockTypeSetListTimeoutsSet {
  readonly create?: cdktf.TerraformString;
}

function blockTypeSetListTimeoutsSetToTerraform(struct?: BlockTypeSetListTimeoutsSet): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    create: struct!.create instanceof cdktf.TerraformAttribute ? struct!.create.toTerraform() : cdktf.stringToTerraform(struct!.create),
  }
}

export class TerraformBlockTypeSetListTimeoutsSetAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: BlockTypeSetListTimeoutsSet, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): BlockTypeSetListTimeoutsSet | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformBlockTypeSetListTimeoutsSet | undefined) {
    if (!(value instanceof TerraformBlockTypeSetListTimeoutsSetAttribute)) {
      return new TerraformBlockTypeSetListTimeoutsSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformBlockTypeSetListTimeoutsSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return blockTypeSetListTimeoutsSetToTerraform(this.internalValue);
  }


  // create - computed: false, optional: true, required: false
  public get create() {
    return cdktf.TerraformStringAttribute.construct(this, 'create', this.internalValue?.create);
  }
}

export type TerraformBlockTypeSetListTimeoutsSet = BlockTypeSetListTimeoutsSet | TerraformBlockTypeSetListTimeoutsSetAttribute;

export class TerraformBlockTypeSetListTimeoutsSetSetAttribute extends cdktf.TerraformSetAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: BlockTypeSetListTimeoutsSet[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): BlockTypeSetListTimeoutsSet[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformBlockTypeSetListTimeoutsSetSet | undefined) {
    if (!(value instanceof TerraformBlockTypeSetListTimeoutsSetSetAttribute)) {
      return new TerraformBlockTypeSetListTimeoutsSetSetAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformBlockTypeSetListTimeoutsSetSetAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.setMapper(blockTypeSetListTimeoutsSetToTerraform)(this.internalValue);
  }

  public toList(): TerraformBlockTypeSetListTimeoutsSetListAttribute {
    return new TerraformBlockTypeSetListTimeoutsSetListAttribute(this.terraformParent, this.terraformAttribute, this.internalValue, { nested: this.nested, _operation: (fqn: string) => \`tolist(\${fqn})\` });
  }
}

export type TerraformBlockTypeSetListTimeoutsSetSet = BlockTypeSetListTimeoutsSet[] | TerraformBlockTypeSetListTimeoutsSetSetAttribute;

export class TerraformBlockTypeSetListTimeoutsSetListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: BlockTypeSetListTimeoutsSet[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): BlockTypeSetListTimeoutsSet[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformBlockTypeSetListTimeoutsSetList | undefined) {
    if (!(value instanceof TerraformBlockTypeSetListTimeoutsSetListAttribute)) {
      return new TerraformBlockTypeSetListTimeoutsSetListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformBlockTypeSetListTimeoutsSetListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(blockTypeSetListTimeoutsSetToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformBlockTypeSetListTimeoutsSetAttribute {
    return new TerraformBlockTypeSetListTimeoutsSetAttribute(this, index.toString());
  }
}

export type TerraformBlockTypeSetListTimeoutsSetList = BlockTypeSetListTimeoutsSet[] | TerraformBlockTypeSetListTimeoutsSetListAttribute;

export interface BlockTypeSetListTimeoutsList {
  readonly create?: cdktf.TerraformString;
}

function blockTypeSetListTimeoutsListToTerraform(struct?: BlockTypeSetListTimeoutsList): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    create: struct!.create instanceof cdktf.TerraformAttribute ? struct!.create.toTerraform() : cdktf.stringToTerraform(struct!.create),
  }
}

export class TerraformBlockTypeSetListTimeoutsListAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: BlockTypeSetListTimeoutsList, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): BlockTypeSetListTimeoutsList | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformBlockTypeSetListTimeoutsList | undefined) {
    if (!(value instanceof TerraformBlockTypeSetListTimeoutsListAttribute)) {
      return new TerraformBlockTypeSetListTimeoutsListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformBlockTypeSetListTimeoutsListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return blockTypeSetListTimeoutsListToTerraform(this.internalValue);
  }


  // create - computed: false, optional: true, required: false
  public get create() {
    return cdktf.TerraformStringAttribute.construct(this, 'create', this.internalValue?.create);
  }
}

export type TerraformBlockTypeSetListTimeoutsList = BlockTypeSetListTimeoutsList | TerraformBlockTypeSetListTimeoutsListAttribute;

export class TerraformBlockTypeSetListTimeoutsListListAttribute extends cdktf.TerraformListAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: BlockTypeSetListTimeoutsList[], options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): BlockTypeSetListTimeoutsList[] | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformBlockTypeSetListTimeoutsListList | undefined) {
    if (!(value instanceof TerraformBlockTypeSetListTimeoutsListListAttribute)) {
      return new TerraformBlockTypeSetListTimeoutsListListAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformBlockTypeSetListTimeoutsListListAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return cdktf.listMapper(blockTypeSetListTimeoutsListToTerraform)(this.internalValue);
  }

  public get(index: number): TerraformBlockTypeSetListTimeoutsListAttribute {
    return new TerraformBlockTypeSetListTimeoutsListAttribute(this, index.toString());
  }
}

export type TerraformBlockTypeSetListTimeoutsListList = BlockTypeSetListTimeoutsList[] | TerraformBlockTypeSetListTimeoutsListListAttribute;


// Resource

export class BlockTypeSetList extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: BlockTypeSetListConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_block_type_set_list',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putTimeoutsSet(config.timeoutsSet ?? new TerraformBlockTypeSetListTimeoutsSetSetAttribute(this, 'timeouts_set', undefined));
    this.putTimeoutsList(config.timeoutsList ?? new TerraformBlockTypeSetListTimeoutsListListAttribute(this, 'timeouts_list', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // timeouts_set - computed: false, optional: true, required: false
  private _timeoutsSet!: TerraformBlockTypeSetListTimeoutsSetSetAttribute;
  public get timeoutsSet() {
    return this._timeoutsSet;
  }
  public putTimeoutsSet(value: TerraformBlockTypeSetListTimeoutsSetSet | undefined) {
    if (value === undefined) {
      this._timeoutsSet.resetInternal();
    }
    else {
      this._timeoutsSet = TerraformBlockTypeSetListTimeoutsSetSetAttribute.construct(this, 'timeouts_set', value);
    }
  }

  // timeouts_list - computed: false, optional: true, required: false
  private _timeoutsList!: TerraformBlockTypeSetListTimeoutsListListAttribute;
  public get timeoutsList() {
    return this._timeoutsList;
  }
  public putTimeoutsList(value: TerraformBlockTypeSetListTimeoutsListList | undefined) {
    if (value === undefined) {
      this._timeoutsList.resetInternal();
    }
    else {
      this._timeoutsList = TerraformBlockTypeSetListTimeoutsListListAttribute.construct(this, 'timeouts_list', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      timeouts_set: this._timeoutsSet.toTerraform(),
      timeouts_list: this._timeoutsList.toTerraform(),
    };
  }
}
"
`;

exports[`single block type 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/single_block_type.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface SingleBlockTypeConfig extends cdktf.TerraformMetaArguments {
  /** timeouts block */
  readonly timeouts?: TerraformSingleBlockTypeTimeouts;
}
export interface SingleBlockTypeTimeouts {
  readonly create?: cdktf.TerraformString;
}

function singleBlockTypeTimeoutsToTerraform(struct?: SingleBlockTypeTimeouts): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    create: struct!.create instanceof cdktf.TerraformAttribute ? struct!.create.toTerraform() : cdktf.stringToTerraform(struct!.create),
  }
}

export class TerraformSingleBlockTypeTimeoutsAttribute extends cdktf.TerraformObjectAttribute {
  public constructor(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value?: SingleBlockTypeTimeouts, options?: cdktf.TerraformAttributeOptions) {
    super(parent, terraformAttribute, value, options);
  }

  public get internalValue(): SingleBlockTypeTimeouts | undefined {
    return this.realValue;
  }

  public static construct(parent: cdktf.ITerraformAddressable, terraformAttribute: string, value: TerraformSingleBlockTypeTimeouts | undefined) {
    if (!(value instanceof TerraformSingleBlockTypeTimeoutsAttribute)) {
      return new TerraformSingleBlockTypeTimeoutsAttribute(parent, terraformAttribute, value);
    }
    else if (value.terraformParent === parent) {
      return value;
    }
    else {
      return new TerraformSingleBlockTypeTimeoutsAttribute(parent, terraformAttribute, value.internalValue, { nested: value });
    }
  }

  protected valueToTerraform(): any {
    return singleBlockTypeTimeoutsToTerraform(this.internalValue);
  }


  // create - computed: false, optional: true, required: false
  public get create() {
    return cdktf.TerraformStringAttribute.construct(this, 'create', this.internalValue?.create);
  }
}

export type TerraformSingleBlockTypeTimeouts = SingleBlockTypeTimeouts | TerraformSingleBlockTypeTimeoutsAttribute;


// Resource

export class SingleBlockType extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: SingleBlockTypeConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_single_block_type',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putTimeouts(config.timeouts ?? new TerraformSingleBlockTypeTimeoutsAttribute(this, 'timeouts', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // timeouts - computed: false, optional: true, required: false
  private _timeouts!: TerraformSingleBlockTypeTimeoutsAttribute;
  public get timeouts() {
    return this._timeouts;
  }
  public putTimeouts(value: TerraformSingleBlockTypeTimeouts | undefined) {
    if (value === undefined) {
      this._timeouts.resetInternal();
    }
    else {
      this._timeouts = TerraformSingleBlockTypeTimeoutsAttribute.construct(this, 'timeouts', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      timeouts: this._timeouts.toTerraform(),
    };
  }
}
"
`;

exports[`string list attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/string_list.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface StringListConfig extends cdktf.TerraformMetaArguments {
  readonly subjectAlternativeNamesOptionalComputed?: cdktf.TerraformStringList;
  readonly subjectAlternativeNamesRequired: cdktf.TerraformStringList;
  readonly subjectAlternativeNamesOptional?: cdktf.TerraformStringList;
}

// Resource

export class StringList extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: StringListConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_string_list',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putSubjectAlternativeNamesOptionalComputed(config.subjectAlternativeNamesOptionalComputed ?? new cdktf.TerraformStringListAttribute(this, 'subject_alternative_names_optional_computed', undefined));
    this._subjectAlternativeNamesComputed = new cdktf.TerraformStringListAttribute(this, 'subject_alternative_names_computed', undefined)
    this.putSubjectAlternativeNamesRequired(config.subjectAlternativeNamesRequired);
    this.putSubjectAlternativeNamesOptional(config.subjectAlternativeNamesOptional ?? new cdktf.TerraformStringListAttribute(this, 'subject_alternative_names_optional', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // subject_alternative_names_optional_computed - computed: true, optional: true, required: false
  private _subjectAlternativeNamesOptionalComputed!: cdktf.TerraformStringListAttribute;
  public get subjectAlternativeNamesOptionalComputed() {
    return this._subjectAlternativeNamesOptionalComputed;
  }
  public putSubjectAlternativeNamesOptionalComputed(value: cdktf.TerraformStringList | undefined) {
    if (value === undefined) {
      this._subjectAlternativeNamesOptionalComputed.resetInternal();
    }
    else {
      this._subjectAlternativeNamesOptionalComputed = cdktf.TerraformStringListAttribute.construct(this, 'subject_alternative_names_optional_computed', value);
    }
  }

  // subject_alternative_names_computed - computed: true, optional: false, required: false
  private _subjectAlternativeNamesComputed: cdktf.TerraformStringListAttribute;
  public get subjectAlternativeNamesComputed() {
    return this._subjectAlternativeNamesComputed;
  }

  // subject_alternative_names_required - computed: false, optional: false, required: true
  private _subjectAlternativeNamesRequired!: cdktf.TerraformStringListAttribute;
  public get subjectAlternativeNamesRequired() {
    return this._subjectAlternativeNamesRequired;
  }
  public putSubjectAlternativeNamesRequired(value: cdktf.TerraformStringList) {
    this._subjectAlternativeNamesRequired = cdktf.TerraformStringListAttribute.construct(this, 'subject_alternative_names_required', value);
  }

  // subject_alternative_names_optional - computed: false, optional: true, required: false
  private _subjectAlternativeNamesOptional!: cdktf.TerraformStringListAttribute;
  public get subjectAlternativeNamesOptional() {
    return this._subjectAlternativeNamesOptional;
  }
  public putSubjectAlternativeNamesOptional(value: cdktf.TerraformStringList | undefined) {
    if (value === undefined) {
      this._subjectAlternativeNamesOptional.resetInternal();
    }
    else {
      this._subjectAlternativeNamesOptional = cdktf.TerraformStringListAttribute.construct(this, 'subject_alternative_names_optional', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      subject_alternative_names_optional_computed: this._subjectAlternativeNamesOptionalComputed.toTerraform(),
      subject_alternative_names_required: this._subjectAlternativeNamesRequired.toTerraform(),
      subject_alternative_names_optional: this._subjectAlternativeNamesOptional.toTerraform(),
    };
  }
}
"
`;

exports[`string map attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/string_map.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface StringMapConfig extends cdktf.TerraformMetaArguments {
  readonly subjectAlternativeNamesComputedOptional?: cdktf.TerraformStringMap;
  readonly subjectAlternativeNamesOptional?: cdktf.TerraformStringMap;
}

// Resource

export class StringMap extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: StringMapConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_string_map',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._subjectAlternativeNamesComputed = new cdktf.TerraformStringMapAttribute(this, 'subject_alternative_names_computed', undefined)
    this.putSubjectAlternativeNamesComputedOptional(config.subjectAlternativeNamesComputedOptional ?? new cdktf.TerraformStringMapAttribute(this, 'subject_alternative_names_computed_optional', undefined));
    this.putSubjectAlternativeNamesOptional(config.subjectAlternativeNamesOptional ?? new cdktf.TerraformStringMapAttribute(this, 'subject_alternative_names_optional', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // subject_alternative_names_computed - computed: true, optional: false, required: false
  private _subjectAlternativeNamesComputed: cdktf.TerraformStringMapAttribute;
  public get subjectAlternativeNamesComputed() {
    return this._subjectAlternativeNamesComputed;
  }

  // subject_alternative_names_computed_optional - computed: true, optional: true, required: false
  private _subjectAlternativeNamesComputedOptional!: cdktf.TerraformStringMapAttribute;
  public get subjectAlternativeNamesComputedOptional() {
    return this._subjectAlternativeNamesComputedOptional;
  }
  public putSubjectAlternativeNamesComputedOptional(value: cdktf.TerraformStringMap | undefined) {
    if (value === undefined) {
      this._subjectAlternativeNamesComputedOptional.resetInternal();
    }
    else {
      this._subjectAlternativeNamesComputedOptional = cdktf.TerraformStringMapAttribute.construct(this, 'subject_alternative_names_computed_optional', value);
    }
  }

  // subject_alternative_names_optional - computed: false, optional: true, required: false
  private _subjectAlternativeNamesOptional!: cdktf.TerraformStringMapAttribute;
  public get subjectAlternativeNamesOptional() {
    return this._subjectAlternativeNamesOptional;
  }
  public putSubjectAlternativeNamesOptional(value: cdktf.TerraformStringMap | undefined) {
    if (value === undefined) {
      this._subjectAlternativeNamesOptional.resetInternal();
    }
    else {
      this._subjectAlternativeNamesOptional = cdktf.TerraformStringMapAttribute.construct(this, 'subject_alternative_names_optional', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      subject_alternative_names_computed_optional: this._subjectAlternativeNamesComputedOptional.toTerraform(),
      subject_alternative_names_optional: this._subjectAlternativeNamesOptional.toTerraform(),
    };
  }
}
"
`;
