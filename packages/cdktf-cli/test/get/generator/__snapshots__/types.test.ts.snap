// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`boolean list attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/boolean_list.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"foo_required\\": {
        \\"type\\": [
          \\"list\\",
          \\"bool\\"
        ],
        \\"required\\": true
      },
      \\"foo_optional\\": {
        \\"type\\": [
          \\"list\\",
          \\"bool\\"
        ],
        \\"optional\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';

// Configuration

export interface BooleanListConfig extends TerraformMetaArguments {
  readonly fooRequired: boolean[];
  readonly fooOptional?: boolean[];
}

// Resource

export class BooleanList extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: BooleanListConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_boolean_list',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._fooRequired = config.fooRequired;
    this._fooOptional = config.fooOptional;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_required - computed: false, optional: false, required: true
  private _fooRequired: boolean[];
  public get fooRequired() {
    return this._fooRequired;
  }
  public set fooRequired(value: boolean[]) {
    this._fooRequired = value;
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional?: boolean[];
  public get fooOptional() {
    return this._fooOptional;
  }
  public set fooOptional(value: boolean[] | undefined) {
    this._fooOptional = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_required: this._fooRequired,
      foo_optional: this._fooOptional,
    };
  }
}
"
`;

exports[`boolean map attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/boolean_map.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"foo_computed\\": {
        \\"type\\": [
          \\"map\\",
          \\"bool\\"
        ],
        \\"computed\\": true
      },
      \\"foo_computed_optional\\": {
        \\"type\\": [
          \\"map\\",
          \\"bool\\"
        ],
        \\"optional\\": true,
        \\"computed\\": true
      },
      \\"foo_optional\\": {
        \\"type\\": [
          \\"map\\",
          \\"bool\\"
        ],
        \\"optional\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';
import { BooleanMap } from \\"cdktf\\";

// Configuration

export interface BooleanMapConfig extends TerraformMetaArguments {
  readonly fooComputedOptional?: { [key: string]: boolean };
  readonly fooOptional?: { [key: string]: boolean };
}

// Resource

export class BooleanMap extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: BooleanMapConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_boolean_map',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._fooComputedOptional = config.fooComputedOptional;
    this._fooOptional = config.fooOptional;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_computed - computed: true, optional: false, required: true
  public fooComputed(key: string): string {
    return new BooleanMap(this, 'foo_computed').lookup(key);
  }

  // foo_computed_optional - computed: true, optional: true, required: false
  private _fooComputedOptional?: { [key: string]: boolean }
  public get fooComputedOptional(): { [key: string]: boolean } | undefined {
    return this._fooComputedOptional; // Getting the computed value is not yet implemented
  }
  public set fooComputedOptional(value: { [key: string]: boolean } | undefined) {
    this._fooComputedOptional = value;
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional?: { [key: string]: boolean };
  public get fooOptional() {
    return this._fooOptional;
  }
  public set fooOptional(value: { [key: string]: boolean } | undefined) {
    this._fooOptional = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_computed_optional: this._fooComputedOptional,
      foo_optional: this._fooOptional,
    };
  }
}
"
`;

exports[`computed complex attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/computed_complex.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"egress\\": {
        \\"type\\": [
          \\"set\\",
          [
            \\"object\\",
            {
              \\"cidr_blocks\\": [
                \\"list\\",
                \\"string\\"
              ],
              \\"description\\": \\"string\\",
              \\"from_port\\": \\"number\\",
              \\"ipv6_cidr_blocks\\": [
                \\"list\\",
                \\"string\\"
              ],
              \\"prefix_list_ids\\": [
                \\"list\\",
                \\"string\\"
              ],
              \\"protocol\\": \\"string\\",
              \\"security_groups\\": [
                \\"set\\",
                \\"string\\"
              ],
              \\"self\\": \\"bool\\",
              \\"to_port\\": \\"number\\"
            }
          ]
        ],
        \\"computed\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';
import { ComplexComputedList } from \\"cdktf\\";

// Configuration

export interface ComputedComplexConfig extends TerraformMetaArguments {
}
export class ComputedComplexEgress extends ComplexComputedList {

  // cidr_blocks - computed: true, optional: false, required: true
  public get cidrBlocks() {
    return this.getListAttribute('cidr_blocks');
  }

  // description - computed: true, optional: false, required: true
  public get description() {
    return this.getStringAttribute('description');
  }

  // from_port - computed: true, optional: false, required: true
  public get fromPort() {
    return this.getNumberAttribute('from_port');
  }

  // ipv6_cidr_blocks - computed: true, optional: false, required: true
  public get ipv6CidrBlocks() {
    return this.getListAttribute('ipv6_cidr_blocks');
  }

  // prefix_list_ids - computed: true, optional: false, required: true
  public get prefixListIds() {
    return this.getListAttribute('prefix_list_ids');
  }

  // protocol - computed: true, optional: false, required: true
  public get protocol() {
    return this.getStringAttribute('protocol');
  }

  // security_groups - computed: true, optional: false, required: true
  public get securityGroups() {
    return this.getListAttribute('security_groups');
  }

  // self - computed: true, optional: false, required: true
  public get selfAttribute() {
    return this.getBooleanAttribute('self');
  }

  // to_port - computed: true, optional: false, required: true
  public get toPort() {
    return this.getNumberAttribute('to_port');
  }
}

// Resource

export class ComputedComplex extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: ComputedComplexConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_computed_complex',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // egress - computed: true, optional: false, required: true
  public egress(index: string) {
    return new ComputedComplexEgress(this, 'egress', index);
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
    };
  }
}
"
`;

exports[`computed complex nested attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/computed_complex_nested.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"resources\\": {
        \\"type\\": [
          \\"list\\",
          [
            \\"object\\",
            {
              \\"autoscaling_groups\\": [
                \\"list\\",
                [
                  \\"object\\",
                  {
                    \\"name\\": \\"string\\"
                  }
                ]
              ],
              \\"remote_access_security_group_id\\": \\"string\\"
            }
          ]
        ],
        \\"computed\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';
import { ComplexComputedList } from \\"cdktf\\";

// Configuration

export interface ComputedComplexNestedConfig extends TerraformMetaArguments {
}
export class ComputedComplexNestedResourcesAutoscalingGroups extends ComplexComputedList {

  // name - computed: true, optional: false, required: true
  public get name() {
    return this.getStringAttribute('name');
  }
}
export class ComputedComplexNestedResources extends ComplexComputedList {

  // autoscaling_groups - computed: true, optional: false, required: true
  public get autoscalingGroups() {
    return 'not implemented' as any;
  }

  // remote_access_security_group_id - computed: true, optional: false, required: true
  public get remoteAccessSecurityGroupId() {
    return this.getStringAttribute('remote_access_security_group_id');
  }
}

// Resource

export class ComputedComplexNested extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: ComputedComplexNestedConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_computed_complex_nested',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // resources - computed: true, optional: false, required: true
  public resources(index: string) {
    return new ComputedComplexNestedResources(this, 'resources', index);
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
    };
  }
}
"
`;

exports[`computed nested complex list block type 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/block_type_nested_computed_list.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {},
    \\"block_types\\": {
      \\"inputs\\": {
        \\"nesting_mode\\": \\"list\\",
        \\"block\\": {
          \\"attributes\\": {
            \\"id\\": {
              \\"type\\": \\"string\\",
              \\"computed\\": true
            },
            \\"name_prefix\\": {
              \\"type\\": \\"string\\",
              \\"required\\": true
            },
            \\"starting_position_configuration\\": {
              \\"type\\": [
                \\"list\\",
                [
                  \\"object\\",
                  {
                    \\"starting_position\\": \\"string\\"
                  }
                ]
              ],
              \\"computed\\": true
            },
            \\"stream_names\\": {
              \\"type\\": [
                \\"set\\",
                \\"string\\"
              ],
              \\"computed\\": true
            }
          },
          \\"block_types\\": {}
        }
      }
    }
  }
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';

// Configuration

export interface BlockTypeNestedComputedListConfig extends TerraformMetaArguments {
  /** inputs block */
  readonly inputs?: BlockTypeNestedComputedListInputs[];
}
export interface BlockTypeNestedComputedListInputs {
  readonly namePrefix: string;
}

// Resource

export class BlockTypeNestedComputedList extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: BlockTypeNestedComputedListConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_block_type_nested_computed_list',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._inputs = config.inputs;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // inputs - computed: false, optional: true, required: false
  private _inputs?: BlockTypeNestedComputedListInputs[];
  public get inputs() {
    return this._inputs;
  }
  public set inputs(value: BlockTypeNestedComputedListInputs[] | undefined) {
    this._inputs = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      inputs: this._inputs,
    };
  }
}
"
`;

exports[`computed optional complex attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/computed_optional_complex.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"egress\\": {
        \\"type\\": [
          \\"set\\",
          [
            \\"object\\",
            {
              \\"cidr_blocks\\": [
                \\"list\\",
                \\"string\\"
              ],
              \\"description\\": \\"string\\",
              \\"from_port\\": \\"number\\",
              \\"ipv6_cidr_blocks\\": [
                \\"list\\",
                \\"string\\"
              ],
              \\"prefix_list_ids\\": [
                \\"list\\",
                \\"string\\"
              ],
              \\"protocol\\": \\"string\\",
              \\"security_groups\\": [
                \\"set\\",
                \\"string\\"
              ],
              \\"self\\": \\"bool\\",
              \\"to_port\\": \\"number\\"
            }
          ]
        ],
        \\"optional\\": true,
        \\"computed\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';

// Configuration

export interface ComputedOptionalComplexConfig extends TerraformMetaArguments {
  readonly egress?: ComputedOptionalComplexEgress[];
}
export interface ComputedOptionalComplexEgress {
  readonly cidrBlocks?: string[];
  readonly description?: string;
  readonly fromPort?: number;
  readonly ipv6CidrBlocks?: string[];
  readonly prefixListIds?: string[];
  readonly protocol?: string;
  readonly securityGroups?: string[];
  readonly selfAttribute?: boolean;
  readonly toPort?: number;
}

// Resource

export class ComputedOptionalComplex extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: ComputedOptionalComplexConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_computed_optional_complex',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._egress = config.egress;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // egress - computed: true, optional: true, required: false
  private _egress?: ComputedOptionalComplexEgress[]
  public get egress(): ComputedOptionalComplexEgress[] | undefined {
    return this._egress; // Getting the computed value is not yet implemented
  }
  public set egress(value: ComputedOptionalComplexEgress[] | undefined) {
    this._egress = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      egress: this._egress,
    };
  }
}
"
`;

exports[`deeply nested block types 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/deeply_nested_block_types.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {},
    \\"block_types\\": {
      \\"lifecycle_rule\\": {
        \\"nesting_mode\\": \\"list\\",
        \\"block\\": {
          \\"attributes\\": {
            \\"abort_incomplete_multipart_upload_days\\": {
              \\"type\\": \\"number\\",
              \\"optional\\": true
            }
          },
          \\"block_types\\": {
            \\"expiration\\": {
              \\"nesting_mode\\": \\"set\\",
              \\"block\\": {
                \\"attributes\\": {
                  \\"date\\": {
                    \\"type\\": \\"string\\",
                    \\"optional\\": true
                  }
                }
              },
              \\"max_items\\": 1
            }
          }
        }
      }
    }
  }
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';

// Configuration

export interface DeeplyNestedBlockTypesConfig extends TerraformMetaArguments {
  /** lifecycle_rule block */
  readonly lifecycleRule?: DeeplyNestedBlockTypesLifecycleRule[];
}
export interface DeeplyNestedBlockTypesLifecycleRuleExpiration {
  readonly date?: string;
}
export interface DeeplyNestedBlockTypesLifecycleRule {
  readonly abortIncompleteMultipartUploadDays?: number;
  /** expiration block */
  readonly expiration?: DeeplyNestedBlockTypesLifecycleRuleExpiration[];
}

// Resource

export class DeeplyNestedBlockTypes extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: DeeplyNestedBlockTypesConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_deeply_nested_block_types',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._lifecycleRule = config.lifecycleRule;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // lifecycle_rule - computed: false, optional: true, required: false
  private _lifecycleRule?: DeeplyNestedBlockTypesLifecycleRule[];
  public get lifecycleRule() {
    return this._lifecycleRule;
  }
  public set lifecycleRule(value: DeeplyNestedBlockTypesLifecycleRule[] | undefined) {
    this._lifecycleRule = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      lifecycle_rule: this._lifecycleRule,
    };
  }
}
"
`;

exports[`ignored attributes 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/ignored_attributes.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"id\\": {
        \\"type\\": \\"string\\",
        \\"computed\\": true,
        \\"optional\\": true
      },
      \\"arn\\": {
        \\"type\\": \\"string\\",
        \\"computed\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';

// Configuration

export interface IgnoredAttributesConfig extends TerraformMetaArguments {
}

// Resource

export class IgnoredAttributes extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: IgnoredAttributesConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_ignored_attributes',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // id - computed: true, optional: true, required: false
  private _id?: string;
  public get id() {
    return this._id ?? this.getStringAttribute('id');
  }
  public set id(value: string | undefined) {
    this._id = value;
  }

  // arn - computed: true, optional: false, required: true
  public get arn() {
    return this.getStringAttribute('arn');
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
    };
  }
}
"
`;

exports[`incompatible attribute names 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/incompatible_attribute_names.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"get_password_data\\": {
        \\"type\\": \\"string\\",
        \\"optional\\": true
      },
      \\"self\\": {
        \\"type\\": \\"string\\",
        \\"required\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';

// Configuration

export interface IncompatibleAttributeNamesConfig extends TerraformMetaArguments {
  readonly fetchPasswordData?: string;
  readonly selfAttribute: string;
}

// Resource

export class IncompatibleAttributeNames extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: IncompatibleAttributeNamesConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_incompatible_attribute_names',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._getPasswordData = config.fetchPasswordData;
    this._self = config.selfAttribute;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // get_password_data - computed: false, optional: true, required: false
  private _getPasswordData?: string;
  public get fetchPasswordData() {
    return this._getPasswordData;
  }
  public set fetchPasswordData(value: string | undefined) {
    this._getPasswordData = value;
  }

  // self - computed: false, optional: false, required: true
  private _self: string;
  public get selfAttribute() {
    return this._self;
  }
  public set selfAttribute(value: string) {
    this._self = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      get_password_data: this._getPasswordData,
      self: this._self,
    };
  }
}
"
`;

exports[`number list attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/number_list.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"foo_required\\": {
        \\"type\\": [
          \\"list\\",
          \\"number\\"
        ],
        \\"required\\": true
      },
      \\"foo_optional\\": {
        \\"type\\": [
          \\"list\\",
          \\"number\\"
        ],
        \\"optional\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';

// Configuration

export interface NumberListConfig extends TerraformMetaArguments {
  readonly fooRequired: number[];
  readonly fooOptional?: number[];
}

// Resource

export class NumberList extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: NumberListConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_number_list',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._fooRequired = config.fooRequired;
    this._fooOptional = config.fooOptional;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_required - computed: false, optional: false, required: true
  private _fooRequired: number[];
  public get fooRequired() {
    return this._fooRequired;
  }
  public set fooRequired(value: number[]) {
    this._fooRequired = value;
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional?: number[];
  public get fooOptional() {
    return this._fooOptional;
  }
  public set fooOptional(value: number[] | undefined) {
    this._fooOptional = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_required: this._fooRequired,
      foo_optional: this._fooOptional,
    };
  }
}
"
`;

exports[`number map attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/number_map.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"foo_computed\\": {
        \\"type\\": [
          \\"map\\",
          \\"number\\"
        ],
        \\"computed\\": true
      },
      \\"foo_computed_optional\\": {
        \\"type\\": [
          \\"map\\",
          \\"number\\"
        ],
        \\"optional\\": true,
        \\"computed\\": true
      },
      \\"foo_optional\\": {
        \\"type\\": [
          \\"map\\",
          \\"number\\"
        ],
        \\"optional\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';
import { NumberMap } from \\"cdktf\\";

// Configuration

export interface NumberMapConfig extends TerraformMetaArguments {
  readonly fooComputedOptional?: { [key: string]: number };
  readonly fooOptional?: { [key: string]: number };
}

// Resource

export class NumberMap extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: NumberMapConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_number_map',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._fooComputedOptional = config.fooComputedOptional;
    this._fooOptional = config.fooOptional;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_computed - computed: true, optional: false, required: true
  public fooComputed(key: string): string {
    return new NumberMap(this, 'foo_computed').lookup(key);
  }

  // foo_computed_optional - computed: true, optional: true, required: false
  private _fooComputedOptional?: { [key: string]: number }
  public get fooComputedOptional(): { [key: string]: number } | undefined {
    return this._fooComputedOptional; // Getting the computed value is not yet implemented
  }
  public set fooComputedOptional(value: { [key: string]: number } | undefined) {
    this._fooComputedOptional = value;
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional?: { [key: string]: number };
  public get fooOptional() {
    return this._fooOptional;
  }
  public set fooOptional(value: { [key: string]: number } | undefined) {
    this._fooOptional = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_computed_optional: this._fooComputedOptional,
      foo_optional: this._fooOptional,
    };
  }
}
"
`;

exports[`primitive boolean 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/primitive_boolean.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"foo_computed\\": {
        \\"type\\": \\"bool\\",
        \\"computed\\": true
      },
      \\"foo_computed_optional\\": {
        \\"type\\": \\"bool\\",
        \\"computed\\": true,
        \\"optional\\": true
      },
      \\"foo_optional\\": {
        \\"type\\": \\"bool\\",
        \\"optional\\": true
      },
      \\"foo_required\\": {
        \\"type\\": \\"bool\\",
        \\"required\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';

// Configuration

export interface PrimitiveBooleanConfig extends TerraformMetaArguments {
  readonly fooComputedOptional?: boolean;
  readonly fooOptional?: boolean;
  readonly fooRequired: boolean;
}

// Resource

export class PrimitiveBoolean extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: PrimitiveBooleanConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_primitive_boolean',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._fooComputedOptional = config.fooComputedOptional;
    this._fooOptional = config.fooOptional;
    this._fooRequired = config.fooRequired;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_computed - computed: true, optional: false, required: true
  public get fooComputed() {
    return this.getBooleanAttribute('foo_computed');
  }

  // foo_computed_optional - computed: true, optional: true, required: false
  private _fooComputedOptional?: boolean;
  public get fooComputedOptional() {
    return this._fooComputedOptional ?? this.getBooleanAttribute('foo_computed_optional');
  }
  public set fooComputedOptional(value: boolean | undefined) {
    this._fooComputedOptional = value;
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional?: boolean;
  public get fooOptional() {
    return this._fooOptional;
  }
  public set fooOptional(value: boolean | undefined) {
    this._fooOptional = value;
  }

  // foo_required - computed: false, optional: false, required: true
  private _fooRequired: boolean;
  public get fooRequired() {
    return this._fooRequired;
  }
  public set fooRequired(value: boolean) {
    this._fooRequired = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_computed_optional: this._fooComputedOptional,
      foo_optional: this._fooOptional,
      foo_required: this._fooRequired,
    };
  }
}
"
`;

exports[`primitive number 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/primitive_number.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"foo_computed\\": {
        \\"type\\": \\"number\\",
        \\"computed\\": true
      },
      \\"foo_computed_optional\\": {
        \\"type\\": \\"number\\",
        \\"computed\\": true,
        \\"optional\\": true
      },
      \\"foo_optional\\": {
        \\"type\\": \\"number\\",
        \\"optional\\": true
      },
      \\"foo_required\\": {
        \\"type\\": \\"number\\",
        \\"required\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';

// Configuration

export interface PrimitiveNumberConfig extends TerraformMetaArguments {
  readonly fooComputedOptional?: number;
  readonly fooOptional?: number;
  readonly fooRequired: number;
}

// Resource

export class PrimitiveNumber extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: PrimitiveNumberConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_primitive_number',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._fooComputedOptional = config.fooComputedOptional;
    this._fooOptional = config.fooOptional;
    this._fooRequired = config.fooRequired;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_computed - computed: true, optional: false, required: true
  public get fooComputed() {
    return this.getNumberAttribute('foo_computed');
  }

  // foo_computed_optional - computed: true, optional: true, required: false
  private _fooComputedOptional?: number;
  public get fooComputedOptional() {
    return this._fooComputedOptional ?? this.getNumberAttribute('foo_computed_optional');
  }
  public set fooComputedOptional(value: number | undefined) {
    this._fooComputedOptional = value;
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional?: number;
  public get fooOptional() {
    return this._fooOptional;
  }
  public set fooOptional(value: number | undefined) {
    this._fooOptional = value;
  }

  // foo_required - computed: false, optional: false, required: true
  private _fooRequired: number;
  public get fooRequired() {
    return this._fooRequired;
  }
  public set fooRequired(value: number) {
    this._fooRequired = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_computed_optional: this._fooComputedOptional,
      foo_optional: this._fooOptional,
      foo_required: this._fooRequired,
    };
  }
}
"
`;

exports[`primitive string 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/primitive_string.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"foo_computed\\": {
        \\"type\\": \\"string\\",
        \\"computed\\": true
      },
      \\"foo_computed_optional\\": {
        \\"type\\": \\"string\\",
        \\"computed\\": true,
        \\"optional\\": true
      },
      \\"foo_optional\\": {
        \\"type\\": \\"string\\",
        \\"optional\\": true
      },
      \\"foo_required\\": {
        \\"type\\": \\"string\\",
        \\"required\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';

// Configuration

export interface PrimitiveStringConfig extends TerraformMetaArguments {
  readonly fooComputedOptional?: string;
  readonly fooOptional?: string;
  readonly fooRequired: string;
}

// Resource

export class PrimitiveString extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: PrimitiveStringConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_primitive_string',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._fooComputedOptional = config.fooComputedOptional;
    this._fooOptional = config.fooOptional;
    this._fooRequired = config.fooRequired;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // foo_computed - computed: true, optional: false, required: true
  public get fooComputed() {
    return this.getStringAttribute('foo_computed');
  }

  // foo_computed_optional - computed: true, optional: true, required: false
  private _fooComputedOptional?: string;
  public get fooComputedOptional() {
    return this._fooComputedOptional ?? this.getStringAttribute('foo_computed_optional');
  }
  public set fooComputedOptional(value: string | undefined) {
    this._fooComputedOptional = value;
  }

  // foo_optional - computed: false, optional: true, required: false
  private _fooOptional?: string;
  public get fooOptional() {
    return this._fooOptional;
  }
  public set fooOptional(value: string | undefined) {
    this._fooOptional = value;
  }

  // foo_required - computed: false, optional: false, required: true
  private _fooRequired: string;
  public get fooRequired() {
    return this._fooRequired;
  }
  public set fooRequired(value: string) {
    this._fooRequired = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      foo_computed_optional: this._fooComputedOptional,
      foo_optional: this._fooOptional,
      foo_required: this._fooRequired,
    };
  }
}
"
`;

exports[`set / list block type 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/block_type_set_list.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {},
    \\"block_types\\": {
      \\"timeouts_set\\": {
        \\"nesting_mode\\": \\"set\\",
        \\"block\\": {
          \\"attributes\\": {
            \\"create\\": {
              \\"type\\": \\"string\\",
              \\"optional\\": true
            }
          }
        }
      },
      \\"timeouts_list\\": {
        \\"nesting_mode\\": \\"list\\",
        \\"block\\": {
          \\"attributes\\": {
            \\"create\\": {
              \\"type\\": \\"string\\",
              \\"optional\\": true
            }
          }
        }
      }
    }
  }
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';

// Configuration

export interface BlockTypeSetListConfig extends TerraformMetaArguments {
  /** timeouts_set block */
  readonly timeoutsSet?: BlockTypeSetListTimeoutsSet[];
  /** timeouts_list block */
  readonly timeoutsList?: BlockTypeSetListTimeoutsList[];
}
export interface BlockTypeSetListTimeoutsSet {
  readonly create?: string;
}
export interface BlockTypeSetListTimeoutsList {
  readonly create?: string;
}

// Resource

export class BlockTypeSetList extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: BlockTypeSetListConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_block_type_set_list',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._timeoutsSet = config.timeoutsSet;
    this._timeoutsList = config.timeoutsList;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // timeouts_set - computed: false, optional: true, required: false
  private _timeoutsSet?: BlockTypeSetListTimeoutsSet[];
  public get timeoutsSet() {
    return this._timeoutsSet;
  }
  public set timeoutsSet(value: BlockTypeSetListTimeoutsSet[] | undefined) {
    this._timeoutsSet = value;
  }

  // timeouts_list - computed: false, optional: true, required: false
  private _timeoutsList?: BlockTypeSetListTimeoutsList[];
  public get timeoutsList() {
    return this._timeoutsList;
  }
  public set timeoutsList(value: BlockTypeSetListTimeoutsList[] | undefined) {
    this._timeoutsList = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      timeouts_set: this._timeoutsSet,
      timeouts_list: this._timeoutsList,
    };
  }
}
"
`;

exports[`single block type 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/single_block_type.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {},
    \\"block_types\\": {
      \\"timeouts\\": {
        \\"nesting_mode\\": \\"single\\",
        \\"block\\": {
          \\"attributes\\": {
            \\"create\\": {
              \\"type\\": \\"string\\",
              \\"optional\\": true
            }
          }
        }
      }
    }
  }
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';

// Configuration

export interface SingleBlockTypeConfig extends TerraformMetaArguments {
  /** timeouts block */
  readonly timeouts?: SingleBlockTypeTimeouts;
}
export interface SingleBlockTypeTimeouts {
  readonly create?: string;
}

// Resource

export class SingleBlockType extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: SingleBlockTypeConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_single_block_type',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._timeouts = config.timeouts;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // timeouts - computed: false, optional: true, required: false
  private _timeouts?: SingleBlockTypeTimeouts;
  public get timeouts() {
    return this._timeouts;
  }
  public set timeouts(value: SingleBlockTypeTimeouts | undefined) {
    this._timeouts = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      timeouts: this._timeouts,
    };
  }
}
"
`;

exports[`string list attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/string_list.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"subject_alternative_names_optional_computed\\": {
        \\"type\\": [
          \\"list\\",
          \\"string\\"
        ],
        \\"optional\\": true,
        \\"computed\\": true
      },
      \\"subject_alternative_names_computed\\": {
        \\"type\\": [
          \\"list\\",
          \\"string\\"
        ],
        \\"computed\\": true
      },
      \\"subject_alternative_names_required\\": {
        \\"type\\": [
          \\"list\\",
          \\"string\\"
        ],
        \\"required\\": true
      },
      \\"subject_alternative_names_optional\\": {
        \\"type\\": [
          \\"list\\",
          \\"string\\"
        ],
        \\"optional\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';

// Configuration

export interface StringListConfig extends TerraformMetaArguments {
  readonly subjectAlternativeNamesOptionalComputed?: string[];
  readonly subjectAlternativeNamesRequired: string[];
  readonly subjectAlternativeNamesOptional?: string[];
}

// Resource

export class StringList extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: StringListConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_string_list',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._subjectAlternativeNamesOptionalComputed = config.subjectAlternativeNamesOptionalComputed;
    this._subjectAlternativeNamesRequired = config.subjectAlternativeNamesRequired;
    this._subjectAlternativeNamesOptional = config.subjectAlternativeNamesOptional;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // subject_alternative_names_optional_computed - computed: true, optional: true, required: false
  private _subjectAlternativeNamesOptionalComputed?: string[];
  public get subjectAlternativeNamesOptionalComputed() {
    return this._subjectAlternativeNamesOptionalComputed ?? this.getListAttribute('subject_alternative_names_optional_computed');
  }
  public set subjectAlternativeNamesOptionalComputed(value: string[] | undefined) {
    this._subjectAlternativeNamesOptionalComputed = value;
  }

  // subject_alternative_names_computed - computed: true, optional: false, required: true
  public get subjectAlternativeNamesComputed() {
    return this.getListAttribute('subject_alternative_names_computed');
  }

  // subject_alternative_names_required - computed: false, optional: false, required: true
  private _subjectAlternativeNamesRequired: string[];
  public get subjectAlternativeNamesRequired() {
    return this._subjectAlternativeNamesRequired;
  }
  public set subjectAlternativeNamesRequired(value: string[]) {
    this._subjectAlternativeNamesRequired = value;
  }

  // subject_alternative_names_optional - computed: false, optional: true, required: false
  private _subjectAlternativeNamesOptional?: string[];
  public get subjectAlternativeNamesOptional() {
    return this._subjectAlternativeNamesOptional;
  }
  public set subjectAlternativeNamesOptional(value: string[] | undefined) {
    this._subjectAlternativeNamesOptional = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      subject_alternative_names_optional_computed: this._subjectAlternativeNamesOptionalComputed,
      subject_alternative_names_required: this._subjectAlternativeNamesRequired,
      subject_alternative_names_optional: this._subjectAlternativeNamesOptional,
    };
  }
}
"
`;

exports[`string map attribute 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/string_map.html
// generated from terraform resource schema

/*
{
  \\"version\\": 1,
  \\"block\\": {
    \\"attributes\\": {
      \\"subject_alternative_names_computed\\": {
        \\"type\\": [
          \\"map\\",
          \\"string\\"
        ],
        \\"computed\\": true
      },
      \\"subject_alternative_names_computed_optional\\": {
        \\"type\\": [
          \\"map\\",
          \\"string\\"
        ],
        \\"optional\\": true,
        \\"computed\\": true
      },
      \\"subject_alternative_names_optional\\": {
        \\"type\\": [
          \\"map\\",
          \\"string\\"
        ],
        \\"optional\\": true
      }
    }
  },
  \\"block_types\\": {}
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';
import { TerraformMetaArguments } from 'cdktf';
import { StringMap } from \\"cdktf\\";

// Configuration

export interface StringMapConfig extends TerraformMetaArguments {
  readonly subjectAlternativeNamesComputedOptional?: { [key: string]: string };
  readonly subjectAlternativeNamesOptional?: { [key: string]: string };
}

// Resource

export class StringMap extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: StringMapConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_string_map',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._subjectAlternativeNamesComputedOptional = config.subjectAlternativeNamesComputedOptional;
    this._subjectAlternativeNamesOptional = config.subjectAlternativeNamesOptional;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // subject_alternative_names_computed - computed: true, optional: false, required: true
  public subjectAlternativeNamesComputed(key: string): string {
    return new StringMap(this, 'subject_alternative_names_computed').lookup(key);
  }

  // subject_alternative_names_computed_optional - computed: true, optional: true, required: false
  private _subjectAlternativeNamesComputedOptional?: { [key: string]: string }
  public get subjectAlternativeNamesComputedOptional(): { [key: string]: string } | undefined {
    return this._subjectAlternativeNamesComputedOptional; // Getting the computed value is not yet implemented
  }
  public set subjectAlternativeNamesComputedOptional(value: { [key: string]: string } | undefined) {
    this._subjectAlternativeNamesComputedOptional = value;
  }

  // subject_alternative_names_optional - computed: false, optional: true, required: false
  private _subjectAlternativeNamesOptional?: { [key: string]: string };
  public get subjectAlternativeNamesOptional() {
    return this._subjectAlternativeNamesOptional;
  }
  public set subjectAlternativeNamesOptional(value: { [key: string]: string } | undefined) {
    this._subjectAlternativeNamesOptional = value;
  }

  // =========
  // SYNTHESIS
  // =========

  public synthesizeAttributes(): { [name: string]: any } {
    return {
      subject_alternative_names_computed_optional: this._subjectAlternativeNamesComputedOptional,
      subject_alternative_names_optional: this._subjectAlternativeNamesOptional,
    };
  }
}
"
`;
