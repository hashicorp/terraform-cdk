// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate an acm certifacte resource with complex computed types 1`] = `
"// generated from terraform resource schema

/*
{
  \\"version\\": 0,
  \\"block\\": {
    \\"attributes\\": {
      \\"arn\\": {
        \\"type\\": \\"string\\",
        \\"computed\\": true
      },
      \\"certificate_authority_arn\\": {
        \\"type\\": \\"string\\",
        \\"optional\\": true
      },
      \\"certificate_body\\": {
        \\"type\\": \\"string\\",
        \\"optional\\": true
      },
      \\"certificate_chain\\": {
        \\"type\\": \\"string\\",
        \\"optional\\": true
      },
      \\"domain_name\\": {
        \\"type\\": \\"string\\",
        \\"optional\\": true,
        \\"computed\\": true
      },
      \\"domain_validation_options\\": {
        \\"type\\": [
          \\"list\\",
          [
            \\"object\\",
            {
              \\"domain_name\\": \\"string\\",
              \\"resource_record_name\\": \\"string\\",
              \\"resource_record_type\\": \\"string\\",
              \\"resource_record_value\\": \\"string\\"
            }
          ]
        ],
        \\"computed\\": true
      },
      \\"id\\": {
        \\"type\\": \\"string\\",
        \\"optional\\": true,
        \\"computed\\": true
      },
      \\"private_key\\": {
        \\"type\\": \\"string\\",
        \\"optional\\": true,
        \\"sensitive\\": true
      },
      \\"subject_alternative_names\\": {
        \\"type\\": [
          \\"list\\",
          \\"string\\"
        ],
        \\"optional\\": true,
        \\"computed\\": true
      },
      \\"tags\\": {
        \\"type\\": [
          \\"map\\",
          \\"string\\"
        ],
        \\"optional\\": true
      },
      \\"validation_emails\\": {
        \\"type\\": [
          \\"list\\",
          \\"string\\"
        ],
        \\"computed\\": true
      },
      \\"validation_method\\": {
        \\"type\\": \\"string\\",
        \\"optional\\": true,
        \\"computed\\": true
      }
    },
    \\"block_types\\": {
      \\"options\\": {
        \\"nesting_mode\\": \\"list\\",
        \\"block\\": {
          \\"attributes\\": {
            \\"certificate_transparency_logging_preference\\": {
              \\"type\\": \\"string\\",
              \\"optional\\": true
            }
          }
        },
        \\"max_items\\": 1
      }
    }
  }
}
*/
import { Construct } from 'constructs';
import { TerraformResource } from 'cdktf';

// Configuration

export interface AcmCertificateConfig {
  readonly certificateAuthorityArn?: string;
  readonly certificateBody?: string;
  readonly certificateChain?: string;
  readonly privateKey?: string;
  readonly tags?: { [key: string]: string };
  /** options block */
  readonly options?: AcmCertificateOptions[];
}
export interface AcmCertificateDomainValidationOptions {
  readonly domainName?: string;
  readonly resourceRecordName?: string;
  readonly resourceRecordType?: string;
  readonly resourceRecordValue?: string;
}
export interface AcmCertificateOptions {
  readonly certificateTransparencyLoggingPreference?: string;
}

// Resource

export class AcmCertificate extends TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: AcmCertificateConfig = {}) {
    super(scope, id, {
      type: 'aws_acm_certificate',
    });
    this._certificateAuthorityArn = config.certificateAuthorityArn;
    this._certificateBody = config.certificateBody;
    this._certificateChain = config.certificateChain;
    this._privateKey = config.privateKey;
    this._tags = config.tags;
    this._options = config.options;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // arn
  public get arn() {
    return this.getStringAttribute('arn');
  }

  // certificate_authority_arn
  private _certificateAuthorityArn?: string;
  public get certificateAuthorityArn() {
    return this._certificateAuthorityArn ?? this.getStringAttribute('certificate_authority_arn');
  }
  public set certificateAuthorityArn(value: string) {
    this._certificateAuthorityArn = value;
  }

  // certificate_body
  private _certificateBody?: string;
  public get certificateBody() {
    return this._certificateBody ?? this.getStringAttribute('certificate_body');
  }
  public set certificateBody(value: string) {
    this._certificateBody = value;
  }

  // certificate_chain
  private _certificateChain?: string;
  public get certificateChain() {
    return this._certificateChain ?? this.getStringAttribute('certificate_chain');
  }
  public set certificateChain(value: string) {
    this._certificateChain = value;
  }

  // domain_name
  public get domainName() {
    return this.getStringAttribute('domain_name');
  }

  // domain_validation_options
  public get domainValidationOptions() {
    throw new Error('computed attribute \\"$acm_certificate.domain_validation_options\\" has unsupported type \\"AcmCertificateDomainValidationOptions[]\\"');
  }

  // id
  public get id() {
    return this.getStringAttribute('id');
  }

  // private_key
  private _privateKey?: string;
  public get privateKey() {
    return this._privateKey ?? this.getStringAttribute('private_key');
  }
  public set privateKey(value: string) {
    this._privateKey = value;
  }

  // subject_alternative_names
  public get subjectAlternativeNames() {
    return this.getListAttribute('subject_alternative_names');
  }

  // tags
  private _tags?: { [key: string]: string };
  public get tags() {
    return this._tags;
  }
  public set tags(value: { [key: string]: string } | undefined) {
    this._tags = value;
  }

  // validation_emails
  public get validationEmails() {
    return this.getListAttribute('validation_emails');
  }

  // validation_method
  public get validationMethod() {
    return this.getStringAttribute('validation_method');
  }

  // options
  private _options?: AcmCertificateOptions[];
  public get options() {
    return this._options;
  }
  public set options(value: AcmCertificateOptions[] | undefined) {
    this._options = value;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes() {
    return {
      certificate_authority_arn: this._certificateAuthorityArn,
      certificate_body: this._certificateBody,
      certificate_chain: this._certificateChain,
      private_key: this._privateKey,
      tags: this._tags,
      options: this._options,
    };
  }
}
"
`;
