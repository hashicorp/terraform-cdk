// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tfExpressions arithmetics snapshot 1`] = `
"import * as cdktf from \\"cdktf\\";
/*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
You can read more about this at https://cdk.tf/variables*/
const admins = new cdktf.TerraformVariable(this, \\"admins\\", {});
const members = new cdktf.TerraformVariable(this, \\"members\\", {});
new cdktf.TerraformOutput(this, \\"arithmetics\\", {
  value: \`\\\\\${\${members.value} + \${admins.value}}\`,
});
"
`;

exports[`tfExpressions conditionals snapshot 1`] = `
"/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from \\"./.gen/providers/aws\\";
new aws.provider.AwsProvider(this, \\"aws\\", {
  region: \\"us-east-1\\",
});
const awsKmsKeyExamplekms = new aws.kmsKey.KmsKey(this, \\"examplekms\\", {
  deletionWindowInDays: 7,
  description: \\"KMS key 1\\",
});
const awsS3BucketExamplebucket = new aws.s3Bucket.S3Bucket(
  this,
  \\"examplebucket\\",
  {
    acl: \\"private\\",
    bucket: \\"examplebuckettftest\\",
  }
);
new aws.s3BucketObject.S3BucketObject(this, \\"examplebucket_object\\", {
  bucket: \`\\\\\${\${awsKmsKeyExamplekms.deletionWindowInDays} > 3 ? \${awsS3BucketExamplebucket.id} : []}\`,
  key: \\"someobject\\",
  kmsKeyId: awsKmsKeyExamplekms.arn,
  source: \\"index.html\\",
});
"
`;

exports[`tfExpressions for expression 1 snapshot 1`] = `
"import * as cdktf from \\"cdktf\\";
/*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
You can read more about this at https://cdk.tf/variables*/
const users = new cdktf.TerraformVariable(this, \\"users\\", {});
const adminUsers = \`\\\\\${{
                for name, user in \${users.value} : name => user
                if user.is_admin
              }}\`;
const regularUsers = \`\\\\\${{
                for name, user in \${users.value} : name => user
                if !user.is_admin
              }}\`;
new cdktf.TerraformOutput(this, \\"combined-so-it-does-not-get-removed\\", {
  value: \`\\\\\${\${adminUsers}},\\\\\${\${regularUsers}}\`,
});
"
`;

exports[`tfExpressions for expression 2 snapshot 1`] = `
"import * as cdktf from \\"cdktf\\";
/*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
You can read more about this at https://cdk.tf/variables*/
const users = new cdktf.TerraformVariable(this, \\"users\\", {});
const usersByRole = \`\\\\\${{
              for name, user in \${users.value} : user.role => name...
            }}\`;
new cdktf.TerraformOutput(this, \\"so-it-does-not-get-removed\\", {
  value: usersByRole,
});
"
`;

exports[`tfExpressions for expression 3 snapshot 1`] = `
"import * as cdktf from \\"cdktf\\";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as datadog from \\"./.gen/providers/datadog\\";
/*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
You can read more about this at https://cdk.tf/variables*/
new datadog.provider.DatadogProvider(this, \\"datadog\\", {
  apiKey: \\"api_key\\",
  appKey: \\"app_key\\",
});
const users = new cdktf.TerraformVariable(this, \\"users\\", {});
new datadog.monitor.Monitor(this, \\"hard_query\\", {
  message: \\"here we go\\",
  name: \\"queries are hard\\",
  query: \`\\\\\${join(\\" && \\", [for o in \${users.value} : \\"!(!\\\\\${o.id})\\"])}\`,
  type: \\"metric alert\\",
});
"
`;

exports[`tfExpressions list access through square brackets snapshot 1`] = `
"import * as cdktf from \\"cdktf\\";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from \\"./.gen/providers/aws\\";
/*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
You can read more about this at https://cdk.tf/variables*/
new aws.provider.AwsProvider(this, \\"aws\\", {
  region: \\"us-east-1\\",
});
const settings = new cdktf.TerraformVariable(this, \\"settings\\", {});
new aws.s3Bucket.S3Bucket(this, \\"examplebucket\\", {
  acl: \\"private\\",
  bucket: \`\\\\\${\${settings.value}[0][\\"bucket_name\\"]}\`,
});
"
`;

exports[`tfExpressions numeric property access snapshot 1`] = `
"import * as cdktf from \\"cdktf\\";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from \\"./.gen/providers/google\\";
new google.provider.GoogleProvider(this, \\"google\\", {
  project: \\"my-project\\",
  region: \\"us-central1\\",
});
const googleComputeInstanceExample = new google.computeInstance.ComputeInstance(
  this,
  \\"example\\",
  {
    bootDisk: {
      initializeParams: {
        image: \\"debian-cloud/debian-9\\",
      },
    },
    machineType: \\"f1-micro\\",
    name: \\"example\\",
    networkInterface: [
      {
        accessConfig: [{}],
        network: \\"default\\",
      },
    ],
    zone: \\"us-east1-b\\",
  }
);
new cdktf.TerraformOutput(this, \\"public_ip\\", {
  value: \`\\\\\${\${googleComputeInstanceExample.networkInterface}.0.access_config.0.assigned_nat_ip}\`,
});
"
`;

exports[`tfExpressions property access through square brackets snapshot 1`] = `
"import * as cdktf from \\"cdktf\\";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from \\"./.gen/providers/aws\\";
/*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
You can read more about this at https://cdk.tf/variables*/
new aws.provider.AwsProvider(this, \\"aws\\", {
  region: \\"us-east-1\\",
});
const settings = new cdktf.TerraformVariable(this, \\"settings\\", {});
new aws.s3Bucket.S3Bucket(this, \\"examplebucket\\", {
  acl: \\"private\\",
  bucket: \`\\\\\${\${settings.value}[\\"bucket_name\\"]}\`,
});
"
`;
