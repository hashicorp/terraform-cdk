// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`granular-imports blocks should be arrays typescript snapshot 1`] = `
"/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import { GoogleProvider } from "./.gen/providers/google/lib/provider";
import { LocalProvider } from "./.gen/providers/local/lib/provider";
import { TerraformVariable, TerraformStack } from "cdktf";
import { ComputeAutoscaler } from "./.gen/providers/google/lib/computeAutoscaler";
import { DataLocalFile } from "./.gen/providers/local/lib/dataLocalFile";
import { Construct } from "constructs";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    new GoogleProvider(this, "google", {
      project: "my-project",
      region: "us-central1",
    });
    new LocalProvider(this, "local", {});
    const imageId = new TerraformVariable(this, "image_id", {
      type: cdktf.VariableType.STRING,
    });
    new ComputeAutoscaler(this, "example", {
      autoscalingPolicy: {
        cooldownPeriod: 60,
        cpuUtilization: {
          target: 0.5,
        },
        maxReplicas: 8,
        minReplicas: 2,
      },
      name: "example-autoscaler",
      target: "target-for-example-autoscaler",
      zone: "us-east1-b",
    });
    new DataLocalFile(this, "foo", {
      filename: "./\${" + imageId.value + "}.img",
    });
  }
}
"
`;
