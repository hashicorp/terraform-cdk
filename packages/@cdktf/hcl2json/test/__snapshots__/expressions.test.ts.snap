// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getExpressionAst fails on malformed expressions 1`] = `[Error: getExpressionAst errors on input string '"\${module.foo.output"': main.tf:0,1-3: Unclosed template interpolation sequence; There is no closing brace for this interpolation sequence before the end of the quoted template. This might be caused by incorrect nesting inside the given expression. ]`;

exports[`getExpressionAst list expressions 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "meta": {
            "fullAccessor": "var.tags.app",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 8,
                    "column": 8,
                    "line": 0,
                  },
                  "start": {
                    "byte": 5,
                    "column": 5,
                    "line": 0,
                  },
                },
                "segment": "var",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 13,
                    "column": 13,
                    "line": 0,
                  },
                  "start": {
                    "byte": 8,
                    "column": 8,
                    "line": 0,
                  },
                },
                "segment": "tags",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 17,
                    "column": 17,
                    "line": 0,
                  },
                  "start": {
                    "byte": 13,
                    "column": 13,
                    "line": 0,
                  },
                },
                "segment": "app",
                "type": "nameTraversal",
              },
            ],
            "value": "var.tags.app",
          },
          "range": {
            "end": {
              "byte": 17,
              "column": 17,
              "line": 0,
            },
            "start": {
              "byte": 5,
              "column": 5,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
        {
          "children": [],
          "meta": {
            "fullAccessor": "var.tags.env",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 22,
                    "column": 22,
                    "line": 0,
                  },
                  "start": {
                    "byte": 19,
                    "column": 19,
                    "line": 0,
                  },
                },
                "segment": "var",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 27,
                    "column": 27,
                    "line": 0,
                  },
                  "start": {
                    "byte": 22,
                    "column": 22,
                    "line": 0,
                  },
                },
                "segment": "tags",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 31,
                    "column": 31,
                    "line": 0,
                  },
                  "start": {
                    "byte": 27,
                    "column": 27,
                    "line": 0,
                  },
                },
                "segment": "env",
                "type": "nameTraversal",
              },
            ],
            "value": "var.tags.env",
          },
          "range": {
            "end": {
              "byte": 31,
              "column": 31,
              "line": 0,
            },
            "start": {
              "byte": 19,
              "column": 19,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
      ],
      "meta": {
        "value": "[var.tags.app, var.tags.env]",
      },
      "range": {
        "end": {
          "byte": 5,
          "column": 5,
          "line": 0,
        },
        "start": {
          "byte": 4,
          "column": 4,
          "line": 0,
        },
      },
      "type": "tuple",
    },
  ],
  "meta": {
    "value": ""\${ [var.tags.app, var.tags.env] }"",
  },
  "range": {
    "end": {
      "byte": 35,
      "column": 35,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst mixed property access 1`] = `
{
  "children": [
    {
      "children": [],
      "meta": {
        "fullAccessor": "var.setting["bucket_name"].arn",
        "traversal": [
          {
            "range": {
              "end": {
                "byte": 7,
                "column": 7,
                "line": 0,
              },
              "start": {
                "byte": 4,
                "column": 4,
                "line": 0,
              },
            },
            "segment": "var",
            "type": "nameTraversal",
          },
          {
            "range": {
              "end": {
                "byte": 15,
                "column": 15,
                "line": 0,
              },
              "start": {
                "byte": 7,
                "column": 7,
                "line": 0,
              },
            },
            "segment": "setting",
            "type": "nameTraversal",
          },
          {
            "range": {
              "end": {
                "byte": 30,
                "column": 30,
                "line": 0,
              },
              "start": {
                "byte": 15,
                "column": 15,
                "line": 0,
              },
            },
            "segment": ""bucket_name"",
            "type": "indexTraversal",
          },
          {
            "range": {
              "end": {
                "byte": 34,
                "column": 34,
                "line": 0,
              },
              "start": {
                "byte": 30,
                "column": 30,
                "line": 0,
              },
            },
            "segment": "arn",
            "type": "nameTraversal",
          },
        ],
        "value": "var.setting["bucket_name"].arn",
      },
      "range": {
        "end": {
          "byte": 34,
          "column": 34,
          "line": 0,
        },
        "start": {
          "byte": 4,
          "column": 4,
          "line": 0,
        },
      },
      "type": "scopeTraversal",
    },
  ],
  "meta": {
    "value": ""\${ var.setting["bucket_name"].arn }"",
  },
  "range": {
    "end": {
      "byte": 37,
      "column": 37,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst parses a reference string 1`] = `
{
  "children": [
    {
      "children": [],
      "meta": {
        "fullAccessor": "var.foo",
        "traversal": [
          {
            "range": {
              "end": {
                "byte": 6,
                "column": 6,
                "line": 0,
              },
              "start": {
                "byte": 3,
                "column": 3,
                "line": 0,
              },
            },
            "segment": "var",
            "type": "nameTraversal",
          },
          {
            "range": {
              "end": {
                "byte": 10,
                "column": 10,
                "line": 0,
              },
              "start": {
                "byte": 6,
                "column": 6,
                "line": 0,
              },
            },
            "segment": "foo",
            "type": "nameTraversal",
          },
        ],
        "value": "var.foo",
      },
      "range": {
        "end": {
          "byte": 10,
          "column": 10,
          "line": 0,
        },
        "start": {
          "byte": 3,
          "column": 3,
          "line": 0,
        },
      },
      "type": "scopeTraversal",
    },
  ],
  "meta": {
    "value": ""\${var.foo}"",
  },
  "range": {
    "end": {
      "byte": 12,
      "column": 12,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst parses a simple string 1`] = `
{
  "children": [],
  "meta": {
    "fullAccessor": "foo",
    "traversal": [
      {
        "range": {
          "end": {
            "byte": 3,
            "column": 3,
            "line": 0,
          },
          "start": {
            "byte": 0,
            "column": 0,
            "line": 0,
          },
        },
        "segment": "foo",
        "type": "nameTraversal",
      },
    ],
    "value": "foo",
  },
  "range": {
    "end": {
      "byte": 3,
      "column": 3,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "scopeTraversal",
}
`;

exports[`getExpressionAst parses a terraform function 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "meta": {
            "fullAccessor": "module.foo.output",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 17,
                    "column": 17,
                    "line": 0,
                  },
                  "start": {
                    "byte": 11,
                    "column": 11,
                    "line": 0,
                  },
                },
                "segment": "module",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 21,
                    "column": 21,
                    "line": 0,
                  },
                  "start": {
                    "byte": 17,
                    "column": 17,
                    "line": 0,
                  },
                },
                "segment": "foo",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 28,
                    "column": 28,
                    "line": 0,
                  },
                  "start": {
                    "byte": 21,
                    "column": 21,
                    "line": 0,
                  },
                },
                "segment": "output",
                "type": "nameTraversal",
              },
            ],
            "value": "module.foo.output",
          },
          "range": {
            "end": {
              "byte": 28,
              "column": 28,
              "line": 0,
            },
            "start": {
              "byte": 11,
              "column": 11,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
        {
          "children": [
            {
              "children": [],
              "meta": {
                "type": "string",
                "value": "-",
              },
              "range": {
                "end": {
                  "byte": 32,
                  "column": 32,
                  "line": 0,
                },
                "start": {
                  "byte": 31,
                  "column": 31,
                  "line": 0,
                },
              },
              "type": "literalValue",
            },
          ],
          "meta": {
            "value": ""-"",
          },
          "range": {
            "end": {
              "byte": 32,
              "column": 32,
              "line": 0,
            },
            "start": {
              "byte": 31,
              "column": 31,
              "line": 0,
            },
          },
          "type": "template",
        },
        {
          "children": [],
          "meta": {
            "fullAccessor": "var.bar",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 38,
                    "column": 38,
                    "line": 0,
                  },
                  "start": {
                    "byte": 35,
                    "column": 35,
                    "line": 0,
                  },
                },
                "segment": "var",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 42,
                    "column": 42,
                    "line": 0,
                  },
                  "start": {
                    "byte": 38,
                    "column": 38,
                    "line": 0,
                  },
                },
                "segment": "bar",
                "type": "nameTraversal",
              },
            ],
            "value": "var.bar",
          },
          "range": {
            "end": {
              "byte": 42,
              "column": 42,
              "line": 0,
            },
            "start": {
              "byte": 35,
              "column": 35,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
      ],
      "meta": {
        "argsRanges": [
          {
            "end": {
              "byte": 28,
              "column": 28,
              "line": 0,
            },
            "start": {
              "byte": 11,
              "column": 11,
              "line": 0,
            },
          },
          {
            "end": {
              "byte": 33,
              "column": 33,
              "line": 0,
            },
            "start": {
              "byte": 30,
              "column": 30,
              "line": 0,
            },
          },
          {
            "end": {
              "byte": 42,
              "column": 42,
              "line": 0,
            },
            "start": {
              "byte": 35,
              "column": 35,
              "line": 0,
            },
          },
        ],
        "closeParenRange": {
          "end": {
            "byte": 43,
            "column": 43,
            "line": 0,
          },
          "start": {
            "byte": 42,
            "column": 42,
            "line": 0,
          },
        },
        "expandedFinalArgument": false,
        "name": "replace",
        "nameRange": {
          "end": {
            "byte": 10,
            "column": 10,
            "line": 0,
          },
          "start": {
            "byte": 3,
            "column": 3,
            "line": 0,
          },
        },
        "openParenRange": {
          "end": {
            "byte": 11,
            "column": 11,
            "line": 0,
          },
          "start": {
            "byte": 10,
            "column": 10,
            "line": 0,
          },
        },
        "value": "replace(module.foo.output, "-", var.bar)",
      },
      "range": {
        "end": {
          "byte": 11,
          "column": 11,
          "line": 0,
        },
        "start": {
          "byte": 3,
          "column": 3,
          "line": 0,
        },
      },
      "type": "function",
    },
  ],
  "meta": {
    "value": ""\${replace(module.foo.output, "-", var.bar)}"",
  },
  "range": {
    "end": {
      "byte": 45,
      "column": 45,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst parses embedded vars 1`] = `
{
  "children": [
    {
      "children": [],
      "meta": {
        "type": "string",
        "value": "Hey, did you hear about ",
      },
      "range": {
        "end": {
          "byte": 25,
          "column": 25,
          "line": 0,
        },
        "start": {
          "byte": 1,
          "column": 1,
          "line": 0,
        },
      },
      "type": "literalValue",
    },
    {
      "children": [],
      "meta": {
        "fullAccessor": "module.foo.output",
        "traversal": [
          {
            "range": {
              "end": {
                "byte": 33,
                "column": 33,
                "line": 0,
              },
              "start": {
                "byte": 27,
                "column": 27,
                "line": 0,
              },
            },
            "segment": "module",
            "type": "nameTraversal",
          },
          {
            "range": {
              "end": {
                "byte": 37,
                "column": 37,
                "line": 0,
              },
              "start": {
                "byte": 33,
                "column": 33,
                "line": 0,
              },
            },
            "segment": "foo",
            "type": "nameTraversal",
          },
          {
            "range": {
              "end": {
                "byte": 44,
                "column": 44,
                "line": 0,
              },
              "start": {
                "byte": 37,
                "column": 37,
                "line": 0,
              },
            },
            "segment": "output",
            "type": "nameTraversal",
          },
        ],
        "value": "module.foo.output",
      },
      "range": {
        "end": {
          "byte": 44,
          "column": 44,
          "line": 0,
        },
        "start": {
          "byte": 27,
          "column": 27,
          "line": 0,
        },
      },
      "type": "scopeTraversal",
    },
    {
      "children": [],
      "meta": {
        "type": "string",
        "value": "s new album?",
      },
      "range": {
        "end": {
          "byte": 57,
          "column": 57,
          "line": 0,
        },
        "start": {
          "byte": 45,
          "column": 45,
          "line": 0,
        },
      },
      "type": "literalValue",
    },
  ],
  "meta": {
    "value": ""Hey, did you hear about \${module.foo.output}s new album?"",
  },
  "range": {
    "end": {
      "byte": 25,
      "column": 25,
      "line": 0,
    },
    "start": {
      "byte": 1,
      "column": 1,
      "line": 0,
    },
  },
  "type": "template",
}
`;

exports[`getExpressionAst parses for in loops 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "meta": {
            "fullAccessor": "var.users",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 26,
                    "column": 26,
                    "line": 0,
                  },
                  "start": {
                    "byte": 23,
                    "column": 23,
                    "line": 0,
                  },
                },
                "segment": "var",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 32,
                    "column": 32,
                    "line": 0,
                  },
                  "start": {
                    "byte": 26,
                    "column": 26,
                    "line": 0,
                  },
                },
                "segment": "users",
                "type": "nameTraversal",
              },
            ],
            "value": "var.users",
          },
          "range": {
            "end": {
              "byte": 32,
              "column": 32,
              "line": 0,
            },
            "start": {
              "byte": 23,
              "column": 23,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
        {
          "children": [],
          "meta": {
            "fullAccessor": "user.role",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 39,
                    "column": 39,
                    "line": 0,
                  },
                  "start": {
                    "byte": 35,
                    "column": 35,
                    "line": 0,
                  },
                },
                "segment": "user",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 44,
                    "column": 44,
                    "line": 0,
                  },
                  "start": {
                    "byte": 39,
                    "column": 39,
                    "line": 0,
                  },
                },
                "segment": "role",
                "type": "nameTraversal",
              },
            ],
            "value": "user.role",
          },
          "range": {
            "end": {
              "byte": 44,
              "column": 44,
              "line": 0,
            },
            "start": {
              "byte": 35,
              "column": 35,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
        {
          "children": [],
          "meta": {
            "fullAccessor": "name",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 52,
                    "column": 52,
                    "line": 0,
                  },
                  "start": {
                    "byte": 48,
                    "column": 48,
                    "line": 0,
                  },
                },
                "segment": "name",
                "type": "nameTraversal",
              },
            ],
            "value": "name",
          },
          "range": {
            "end": {
              "byte": 52,
              "column": 52,
              "line": 0,
            },
            "start": {
              "byte": 48,
              "column": 48,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
      ],
      "meta": {
        "closeRange": {
          "end": {
            "byte": 57,
            "column": 57,
            "line": 0,
          },
          "start": {
            "byte": 56,
            "column": 56,
            "line": 0,
          },
        },
        "closeRangeValue": "}",
        "collectionExpression": "var.users",
        "groupedValue": true,
        "keyExpression": "user.role",
        "keyVar": "name",
        "openRange": {
          "end": {
            "byte": 4,
            "column": 4,
            "line": 0,
          },
          "start": {
            "byte": 3,
            "column": 3,
            "line": 0,
          },
        },
        "openRangeValue": "{",
        "valVar": "user",
        "value": "{ for name, user in var.users : user.role => name... }",
        "valueExpression": "name",
      },
      "range": {
        "end": {
          "byte": 4,
          "column": 4,
          "line": 0,
        },
        "start": {
          "byte": 3,
          "column": 3,
          "line": 0,
        },
      },
      "type": "for",
    },
  ],
  "meta": {
    "value": ""\${{ for name, user in var.users : user.role => name... }}"",
  },
  "range": {
    "end": {
      "byte": 59,
      "column": 59,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst parses four part references 1`] = `
{
  "children": [
    {
      "children": [],
      "meta": {
        "fullAccessor": "data.type.name.attr",
        "traversal": [
          {
            "range": {
              "end": {
                "byte": 7,
                "column": 7,
                "line": 0,
              },
              "start": {
                "byte": 3,
                "column": 3,
                "line": 0,
              },
            },
            "segment": "data",
            "type": "nameTraversal",
          },
          {
            "range": {
              "end": {
                "byte": 12,
                "column": 12,
                "line": 0,
              },
              "start": {
                "byte": 7,
                "column": 7,
                "line": 0,
              },
            },
            "segment": "type",
            "type": "nameTraversal",
          },
          {
            "range": {
              "end": {
                "byte": 17,
                "column": 17,
                "line": 0,
              },
              "start": {
                "byte": 12,
                "column": 12,
                "line": 0,
              },
            },
            "segment": "name",
            "type": "nameTraversal",
          },
          {
            "range": {
              "end": {
                "byte": 22,
                "column": 22,
                "line": 0,
              },
              "start": {
                "byte": 17,
                "column": 17,
                "line": 0,
              },
            },
            "segment": "attr",
            "type": "nameTraversal",
          },
        ],
        "value": "data.type.name.attr",
      },
      "range": {
        "end": {
          "byte": 22,
          "column": 22,
          "line": 0,
        },
        "start": {
          "byte": 3,
          "column": 3,
          "line": 0,
        },
      },
      "type": "scopeTraversal",
    },
  ],
  "meta": {
    "value": ""\${data.type.name.attr}"",
  },
  "range": {
    "end": {
      "byte": 24,
      "column": 24,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst parses lists 1`] = `
{
  "children": [
    {
      "children": [],
      "meta": {
        "type": "number",
        "value": "5",
      },
      "range": {
        "end": {
          "byte": 2,
          "column": 2,
          "line": 0,
        },
        "start": {
          "byte": 1,
          "column": 1,
          "line": 0,
        },
      },
      "type": "literalValue",
    },
    {
      "children": [
        {
          "children": [],
          "meta": {
            "fullAccessor": "module.foo.output",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 13,
                    "column": 13,
                    "line": 0,
                  },
                  "start": {
                    "byte": 7,
                    "column": 7,
                    "line": 0,
                  },
                },
                "segment": "module",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 17,
                    "column": 17,
                    "line": 0,
                  },
                  "start": {
                    "byte": 13,
                    "column": 13,
                    "line": 0,
                  },
                },
                "segment": "foo",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 24,
                    "column": 24,
                    "line": 0,
                  },
                  "start": {
                    "byte": 17,
                    "column": 17,
                    "line": 0,
                  },
                },
                "segment": "output",
                "type": "nameTraversal",
              },
            ],
            "value": "module.foo.output",
          },
          "range": {
            "end": {
              "byte": 24,
              "column": 24,
              "line": 0,
            },
            "start": {
              "byte": 7,
              "column": 7,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
      ],
      "meta": {
        "value": ""\${module.foo.output}"",
      },
      "range": {
        "end": {
          "byte": 26,
          "column": 26,
          "line": 0,
        },
        "start": {
          "byte": 4,
          "column": 4,
          "line": 0,
        },
      },
      "type": "templateWrap",
    },
    {
      "children": [
        {
          "children": [],
          "meta": {
            "type": "string",
            "value": "val",
          },
          "range": {
            "end": {
              "byte": 32,
              "column": 32,
              "line": 0,
            },
            "start": {
              "byte": 29,
              "column": 29,
              "line": 0,
            },
          },
          "type": "literalValue",
        },
      ],
      "meta": {
        "value": ""val"",
      },
      "range": {
        "end": {
          "byte": 32,
          "column": 32,
          "line": 0,
        },
        "start": {
          "byte": 29,
          "column": 29,
          "line": 0,
        },
      },
      "type": "template",
    },
    {
      "children": [],
      "meta": {
        "type": "bool",
        "value": "true",
      },
      "range": {
        "end": {
          "byte": 39,
          "column": 39,
          "line": 0,
        },
        "start": {
          "byte": 35,
          "column": 35,
          "line": 0,
        },
      },
      "type": "literalValue",
    },
  ],
  "meta": {
    "value": "[5, "\${module.foo.output}", "val", true]",
  },
  "range": {
    "end": {
      "byte": 1,
      "column": 1,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "tuple",
}
`;

exports[`getExpressionAst parses maps 1`] = `
{
  "children": [
    {
      "children": [],
      "range": {
        "end": {
          "byte": 3,
          "column": 3,
          "line": 0,
        },
        "start": {
          "byte": 2,
          "column": 2,
          "line": 0,
        },
      },
      "type": "",
    },
    {
      "children": [
        {
          "children": [],
          "meta": {
            "fullAccessor": "module.foo.output",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 15,
                    "column": 15,
                    "line": 0,
                  },
                  "start": {
                    "byte": 9,
                    "column": 9,
                    "line": 0,
                  },
                },
                "segment": "module",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 19,
                    "column": 19,
                    "line": 0,
                  },
                  "start": {
                    "byte": 15,
                    "column": 15,
                    "line": 0,
                  },
                },
                "segment": "foo",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 26,
                    "column": 26,
                    "line": 0,
                  },
                  "start": {
                    "byte": 19,
                    "column": 19,
                    "line": 0,
                  },
                },
                "segment": "output",
                "type": "nameTraversal",
              },
            ],
            "value": "module.foo.output",
          },
          "range": {
            "end": {
              "byte": 26,
              "column": 26,
              "line": 0,
            },
            "start": {
              "byte": 9,
              "column": 9,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
      ],
      "meta": {
        "value": ""\${module.foo.output}"",
      },
      "range": {
        "end": {
          "byte": 28,
          "column": 28,
          "line": 0,
        },
        "start": {
          "byte": 6,
          "column": 6,
          "line": 0,
        },
      },
      "type": "templateWrap",
    },
    {
      "children": [],
      "range": {
        "end": {
          "byte": 31,
          "column": 31,
          "line": 0,
        },
        "start": {
          "byte": 30,
          "column": 30,
          "line": 0,
        },
      },
      "type": "",
    },
    {
      "children": [
        {
          "children": [],
          "meta": {
            "type": "string",
            "value": "val",
          },
          "range": {
            "end": {
              "byte": 38,
              "column": 38,
              "line": 0,
            },
            "start": {
              "byte": 35,
              "column": 35,
              "line": 0,
            },
          },
          "type": "literalValue",
        },
      ],
      "meta": {
        "value": ""val"",
      },
      "range": {
        "end": {
          "byte": 38,
          "column": 38,
          "line": 0,
        },
        "start": {
          "byte": 35,
          "column": 35,
          "line": 0,
        },
      },
      "type": "template",
    },
    {
      "children": [],
      "range": {
        "end": {
          "byte": 42,
          "column": 42,
          "line": 0,
        },
        "start": {
          "byte": 41,
          "column": 41,
          "line": 0,
        },
      },
      "type": "",
    },
    {
      "children": [],
      "meta": {
        "type": "bool",
        "value": "true",
      },
      "range": {
        "end": {
          "byte": 49,
          "column": 49,
          "line": 0,
        },
        "start": {
          "byte": 45,
          "column": 45,
          "line": 0,
        },
      },
      "type": "literalValue",
    },
    {
      "children": [],
      "range": {
        "end": {
          "byte": 52,
          "column": 52,
          "line": 0,
        },
        "start": {
          "byte": 51,
          "column": 51,
          "line": 0,
        },
      },
      "type": "",
    },
    {
      "children": [
        {
          "children": [
            {
              "children": [],
              "meta": {
                "fullAccessor": "module.foo.output",
                "traversal": [
                  {
                    "range": {
                      "end": {
                        "byte": 72,
                        "column": 72,
                        "line": 0,
                      },
                      "start": {
                        "byte": 66,
                        "column": 66,
                        "line": 0,
                      },
                    },
                    "segment": "module",
                    "type": "nameTraversal",
                  },
                  {
                    "range": {
                      "end": {
                        "byte": 76,
                        "column": 76,
                        "line": 0,
                      },
                      "start": {
                        "byte": 72,
                        "column": 72,
                        "line": 0,
                      },
                    },
                    "segment": "foo",
                    "type": "nameTraversal",
                  },
                  {
                    "range": {
                      "end": {
                        "byte": 83,
                        "column": 83,
                        "line": 0,
                      },
                      "start": {
                        "byte": 76,
                        "column": 76,
                        "line": 0,
                      },
                    },
                    "segment": "output",
                    "type": "nameTraversal",
                  },
                ],
                "value": "module.foo.output",
              },
              "range": {
                "end": {
                  "byte": 83,
                  "column": 83,
                  "line": 0,
                },
                "start": {
                  "byte": 66,
                  "column": 66,
                  "line": 0,
                },
              },
              "type": "scopeTraversal",
            },
            {
              "children": [
                {
                  "children": [],
                  "meta": {
                    "type": "string",
                    "value": "-",
                  },
                  "range": {
                    "end": {
                      "byte": 87,
                      "column": 87,
                      "line": 0,
                    },
                    "start": {
                      "byte": 86,
                      "column": 86,
                      "line": 0,
                    },
                  },
                  "type": "literalValue",
                },
              ],
              "meta": {
                "value": ""-"",
              },
              "range": {
                "end": {
                  "byte": 87,
                  "column": 87,
                  "line": 0,
                },
                "start": {
                  "byte": 86,
                  "column": 86,
                  "line": 0,
                },
              },
              "type": "template",
            },
            {
              "children": [],
              "meta": {
                "fullAccessor": "var.bar",
                "traversal": [
                  {
                    "range": {
                      "end": {
                        "byte": 93,
                        "column": 93,
                        "line": 0,
                      },
                      "start": {
                        "byte": 90,
                        "column": 90,
                        "line": 0,
                      },
                    },
                    "segment": "var",
                    "type": "nameTraversal",
                  },
                  {
                    "range": {
                      "end": {
                        "byte": 97,
                        "column": 97,
                        "line": 0,
                      },
                      "start": {
                        "byte": 93,
                        "column": 93,
                        "line": 0,
                      },
                    },
                    "segment": "bar",
                    "type": "nameTraversal",
                  },
                ],
                "value": "var.bar",
              },
              "range": {
                "end": {
                  "byte": 97,
                  "column": 97,
                  "line": 0,
                },
                "start": {
                  "byte": 90,
                  "column": 90,
                  "line": 0,
                },
              },
              "type": "scopeTraversal",
            },
          ],
          "meta": {
            "argsRanges": [
              {
                "end": {
                  "byte": 83,
                  "column": 83,
                  "line": 0,
                },
                "start": {
                  "byte": 66,
                  "column": 66,
                  "line": 0,
                },
              },
              {
                "end": {
                  "byte": 88,
                  "column": 88,
                  "line": 0,
                },
                "start": {
                  "byte": 85,
                  "column": 85,
                  "line": 0,
                },
              },
              {
                "end": {
                  "byte": 97,
                  "column": 97,
                  "line": 0,
                },
                "start": {
                  "byte": 90,
                  "column": 90,
                  "line": 0,
                },
              },
            ],
            "closeParenRange": {
              "end": {
                "byte": 98,
                "column": 98,
                "line": 0,
              },
              "start": {
                "byte": 97,
                "column": 97,
                "line": 0,
              },
            },
            "expandedFinalArgument": false,
            "name": "replace",
            "nameRange": {
              "end": {
                "byte": 65,
                "column": 65,
                "line": 0,
              },
              "start": {
                "byte": 58,
                "column": 58,
                "line": 0,
              },
            },
            "openParenRange": {
              "end": {
                "byte": 66,
                "column": 66,
                "line": 0,
              },
              "start": {
                "byte": 65,
                "column": 65,
                "line": 0,
              },
            },
            "value": "replace(module.foo.output, "-", var.bar)",
          },
          "range": {
            "end": {
              "byte": 66,
              "column": 66,
              "line": 0,
            },
            "start": {
              "byte": 58,
              "column": 58,
              "line": 0,
            },
          },
          "type": "function",
        },
      ],
      "meta": {
        "value": ""\${replace(module.foo.output, "-", var.bar)}"",
      },
      "range": {
        "end": {
          "byte": 100,
          "column": 100,
          "line": 0,
        },
        "start": {
          "byte": 55,
          "column": 55,
          "line": 0,
        },
      },
      "type": "templateWrap",
    },
  ],
  "meta": {
    "items": {
      "a": ""\${replace(module.foo.output, "-", var.bar)}"",
      "x": ""\${module.foo.output}"",
      "y": ""val"",
      "z": "true",
    },
    "value": "{ x = "\${module.foo.output}", y = "val", z = true, a = "\${replace(module.foo.output, "-", var.bar)}" }",
  },
  "range": {
    "end": {
      "byte": 1,
      "column": 1,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "object",
}
`;

exports[`getExpressionAst parses multi-line for loops 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "meta": {
            "fullAccessor": "var.users",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 38,
                    "column": 34,
                    "line": 1,
                  },
                  "start": {
                    "byte": 35,
                    "column": 31,
                    "line": 1,
                  },
                },
                "segment": "var",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 44,
                    "column": 40,
                    "line": 1,
                  },
                  "start": {
                    "byte": 38,
                    "column": 34,
                    "line": 1,
                  },
                },
                "segment": "users",
                "type": "nameTraversal",
              },
            ],
            "value": "var.users",
          },
          "range": {
            "end": {
              "byte": 44,
              "column": 40,
              "line": 1,
            },
            "start": {
              "byte": 35,
              "column": 31,
              "line": 1,
            },
          },
          "type": "scopeTraversal",
        },
        {
          "children": [],
          "meta": {
            "fullAccessor": "name",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 51,
                    "column": 47,
                    "line": 1,
                  },
                  "start": {
                    "byte": 47,
                    "column": 43,
                    "line": 1,
                  },
                },
                "segment": "name",
                "type": "nameTraversal",
              },
            ],
            "value": "name",
          },
          "range": {
            "end": {
              "byte": 51,
              "column": 47,
              "line": 1,
            },
            "start": {
              "byte": 47,
              "column": 43,
              "line": 1,
            },
          },
          "type": "scopeTraversal",
        },
        {
          "children": [],
          "meta": {
            "fullAccessor": "user",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 59,
                    "column": 55,
                    "line": 1,
                  },
                  "start": {
                    "byte": 55,
                    "column": 51,
                    "line": 1,
                  },
                },
                "segment": "user",
                "type": "nameTraversal",
              },
            ],
            "value": "user",
          },
          "range": {
            "end": {
              "byte": 59,
              "column": 55,
              "line": 1,
            },
            "start": {
              "byte": 55,
              "column": 51,
              "line": 1,
            },
          },
          "type": "scopeTraversal",
        },
        {
          "children": [
            {
              "children": [],
              "meta": {
                "fullAccessor": "user.is_admin",
                "traversal": [
                  {
                    "range": {
                      "end": {
                        "byte": 80,
                        "column": 21,
                        "line": 2,
                      },
                      "start": {
                        "byte": 76,
                        "column": 17,
                        "line": 2,
                      },
                    },
                    "segment": "user",
                    "type": "nameTraversal",
                  },
                  {
                    "range": {
                      "end": {
                        "byte": 89,
                        "column": 30,
                        "line": 2,
                      },
                      "start": {
                        "byte": 80,
                        "column": 21,
                        "line": 2,
                      },
                    },
                    "segment": "is_admin",
                    "type": "nameTraversal",
                  },
                ],
                "value": "user.is_admin",
              },
              "range": {
                "end": {
                  "byte": 89,
                  "column": 30,
                  "line": 2,
                },
                "start": {
                  "byte": 76,
                  "column": 17,
                  "line": 2,
                },
              },
              "type": "scopeTraversal",
            },
          ],
          "meta": {
            "operator": "logicalNot",
            "returnType": "bool",
            "symbolRange": {
              "end": {
                "byte": 76,
                "column": 17,
                "line": 2,
              },
              "start": {
                "byte": 75,
                "column": 16,
                "line": 2,
              },
            },
            "value": "!user.is_admin",
            "valueExpression": "user.is_admin",
          },
          "range": {
            "end": {
              "byte": 76,
              "column": 17,
              "line": 2,
            },
            "start": {
              "byte": 75,
              "column": 16,
              "line": 2,
            },
          },
          "type": "unaryOp",
        },
      ],
      "meta": {
        "closeRange": {
          "end": {
            "byte": 101,
            "column": 12,
            "line": 3,
          },
          "start": {
            "byte": 100,
            "column": 11,
            "line": 3,
          },
        },
        "closeRangeValue": "}",
        "collectionExpression": "var.users",
        "conditionalExpression": "!user.is_admin",
        "groupedValue": false,
        "keyExpression": "name",
        "keyVar": "name",
        "openRange": {
          "end": {
            "byte": 4,
            "column": 4,
            "line": 0,
          },
          "start": {
            "byte": 3,
            "column": 3,
            "line": 0,
          },
        },
        "openRangeValue": "{",
        "valVar": "user",
        "value": "{
            for name, user in var.users : name => user
            if !user.is_admin
          }",
        "valueExpression": "user",
      },
      "range": {
        "end": {
          "byte": 4,
          "column": 4,
          "line": 0,
        },
        "start": {
          "byte": 3,
          "column": 3,
          "line": 0,
        },
      },
      "type": "for",
    },
  ],
  "meta": {
    "value": ""\${{
            for name, user in var.users : name => user
            if !user.is_admin
          }}"",
  },
  "range": {
    "end": {
      "byte": 103,
      "column": 14,
      "line": 3,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst parses nested terraform functions 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "meta": {
            "fullAccessor": "var.separator",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 12,
                    "column": 12,
                    "line": 0,
                  },
                  "start": {
                    "byte": 9,
                    "column": 9,
                    "line": 0,
                  },
                },
                "segment": "var",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 22,
                    "column": 22,
                    "line": 0,
                  },
                  "start": {
                    "byte": 12,
                    "column": 12,
                    "line": 0,
                  },
                },
                "segment": "separator",
                "type": "nameTraversal",
              },
            ],
            "value": "var.separator",
          },
          "range": {
            "end": {
              "byte": 22,
              "column": 22,
              "line": 0,
            },
            "start": {
              "byte": 9,
              "column": 9,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "meta": {
                    "fullAccessor": "module.foo.output",
                    "traversal": [
                      {
                        "range": {
                          "end": {
                            "byte": 44,
                            "column": 44,
                            "line": 0,
                          },
                          "start": {
                            "byte": 38,
                            "column": 38,
                            "line": 0,
                          },
                        },
                        "segment": "module",
                        "type": "nameTraversal",
                      },
                      {
                        "range": {
                          "end": {
                            "byte": 48,
                            "column": 48,
                            "line": 0,
                          },
                          "start": {
                            "byte": 44,
                            "column": 44,
                            "line": 0,
                          },
                        },
                        "segment": "foo",
                        "type": "nameTraversal",
                      },
                      {
                        "range": {
                          "end": {
                            "byte": 55,
                            "column": 55,
                            "line": 0,
                          },
                          "start": {
                            "byte": 48,
                            "column": 48,
                            "line": 0,
                          },
                        },
                        "segment": "output",
                        "type": "nameTraversal",
                      },
                    ],
                    "value": "module.foo.output",
                  },
                  "range": {
                    "end": {
                      "byte": 55,
                      "column": 55,
                      "line": 0,
                    },
                    "start": {
                      "byte": 38,
                      "column": 38,
                      "line": 0,
                    },
                  },
                  "type": "scopeTraversal",
                },
                {
                  "children": [
                    {
                      "children": [],
                      "meta": {
                        "type": "string",
                        "value": "-",
                      },
                      "range": {
                        "end": {
                          "byte": 59,
                          "column": 59,
                          "line": 0,
                        },
                        "start": {
                          "byte": 58,
                          "column": 58,
                          "line": 0,
                        },
                      },
                      "type": "literalValue",
                    },
                  ],
                  "meta": {
                    "value": ""-"",
                  },
                  "range": {
                    "end": {
                      "byte": 59,
                      "column": 59,
                      "line": 0,
                    },
                    "start": {
                      "byte": 58,
                      "column": 58,
                      "line": 0,
                    },
                  },
                  "type": "template",
                },
                {
                  "children": [],
                  "meta": {
                    "fullAccessor": "var.bar",
                    "traversal": [
                      {
                        "range": {
                          "end": {
                            "byte": 65,
                            "column": 65,
                            "line": 0,
                          },
                          "start": {
                            "byte": 62,
                            "column": 62,
                            "line": 0,
                          },
                        },
                        "segment": "var",
                        "type": "nameTraversal",
                      },
                      {
                        "range": {
                          "end": {
                            "byte": 69,
                            "column": 69,
                            "line": 0,
                          },
                          "start": {
                            "byte": 65,
                            "column": 65,
                            "line": 0,
                          },
                        },
                        "segment": "bar",
                        "type": "nameTraversal",
                      },
                    ],
                    "value": "var.bar",
                  },
                  "range": {
                    "end": {
                      "byte": 69,
                      "column": 69,
                      "line": 0,
                    },
                    "start": {
                      "byte": 62,
                      "column": 62,
                      "line": 0,
                    },
                  },
                  "type": "scopeTraversal",
                },
              ],
              "meta": {
                "argsRanges": [
                  {
                    "end": {
                      "byte": 55,
                      "column": 55,
                      "line": 0,
                    },
                    "start": {
                      "byte": 38,
                      "column": 38,
                      "line": 0,
                    },
                  },
                  {
                    "end": {
                      "byte": 60,
                      "column": 60,
                      "line": 0,
                    },
                    "start": {
                      "byte": 57,
                      "column": 57,
                      "line": 0,
                    },
                  },
                  {
                    "end": {
                      "byte": 69,
                      "column": 69,
                      "line": 0,
                    },
                    "start": {
                      "byte": 62,
                      "column": 62,
                      "line": 0,
                    },
                  },
                ],
                "closeParenRange": {
                  "end": {
                    "byte": 70,
                    "column": 70,
                    "line": 0,
                  },
                  "start": {
                    "byte": 69,
                    "column": 69,
                    "line": 0,
                  },
                },
                "expandedFinalArgument": false,
                "name": "replace",
                "nameRange": {
                  "end": {
                    "byte": 37,
                    "column": 37,
                    "line": 0,
                  },
                  "start": {
                    "byte": 30,
                    "column": 30,
                    "line": 0,
                  },
                },
                "openParenRange": {
                  "end": {
                    "byte": 38,
                    "column": 38,
                    "line": 0,
                  },
                  "start": {
                    "byte": 37,
                    "column": 37,
                    "line": 0,
                  },
                },
                "value": "replace(module.foo.output, "-", var.bar)",
              },
              "range": {
                "end": {
                  "byte": 38,
                  "column": 38,
                  "line": 0,
                },
                "start": {
                  "byte": 30,
                  "column": 30,
                  "line": 0,
                },
              },
              "type": "function",
            },
          ],
          "meta": {
            "argsRanges": [
              {
                "end": {
                  "byte": 70,
                  "column": 70,
                  "line": 0,
                },
                "start": {
                  "byte": 30,
                  "column": 30,
                  "line": 0,
                },
              },
            ],
            "closeParenRange": {
              "end": {
                "byte": 71,
                "column": 71,
                "line": 0,
              },
              "start": {
                "byte": 70,
                "column": 70,
                "line": 0,
              },
            },
            "expandedFinalArgument": false,
            "name": "lower",
            "nameRange": {
              "end": {
                "byte": 29,
                "column": 29,
                "line": 0,
              },
              "start": {
                "byte": 24,
                "column": 24,
                "line": 0,
              },
            },
            "openParenRange": {
              "end": {
                "byte": 30,
                "column": 30,
                "line": 0,
              },
              "start": {
                "byte": 29,
                "column": 29,
                "line": 0,
              },
            },
            "value": "lower(replace(module.foo.output, "-", var.bar))",
          },
          "range": {
            "end": {
              "byte": 30,
              "column": 30,
              "line": 0,
            },
            "start": {
              "byte": 24,
              "column": 24,
              "line": 0,
            },
          },
          "type": "function",
        },
      ],
      "meta": {
        "argsRanges": [
          {
            "end": {
              "byte": 22,
              "column": 22,
              "line": 0,
            },
            "start": {
              "byte": 9,
              "column": 9,
              "line": 0,
            },
          },
          {
            "end": {
              "byte": 71,
              "column": 71,
              "line": 0,
            },
            "start": {
              "byte": 24,
              "column": 24,
              "line": 0,
            },
          },
        ],
        "closeParenRange": {
          "end": {
            "byte": 72,
            "column": 72,
            "line": 0,
          },
          "start": {
            "byte": 71,
            "column": 71,
            "line": 0,
          },
        },
        "expandedFinalArgument": false,
        "name": "split",
        "nameRange": {
          "end": {
            "byte": 8,
            "column": 8,
            "line": 0,
          },
          "start": {
            "byte": 3,
            "column": 3,
            "line": 0,
          },
        },
        "openParenRange": {
          "end": {
            "byte": 9,
            "column": 9,
            "line": 0,
          },
          "start": {
            "byte": 8,
            "column": 8,
            "line": 0,
          },
        },
        "value": "split(var.separator, lower(replace(module.foo.output, "-", var.bar)))",
      },
      "range": {
        "end": {
          "byte": 9,
          "column": 9,
          "line": 0,
        },
        "start": {
          "byte": 3,
          "column": 3,
          "line": 0,
        },
      },
      "type": "function",
    },
  ],
  "meta": {
    "value": ""\${split(var.separator, lower(replace(module.foo.output, "-", var.bar)))}"",
  },
  "range": {
    "end": {
      "byte": 74,
      "column": 74,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst parses splat expressions 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [
            {
              "children": [],
              "meta": {
                "fullAccessor": "aws_s3_bucket.examplebucket",
                "traversal": [
                  {
                    "range": {
                      "end": {
                        "byte": 23,
                        "column": 23,
                        "line": 0,
                      },
                      "start": {
                        "byte": 10,
                        "column": 10,
                        "line": 0,
                      },
                    },
                    "segment": "aws_s3_bucket",
                    "type": "nameTraversal",
                  },
                  {
                    "range": {
                      "end": {
                        "byte": 37,
                        "column": 37,
                        "line": 0,
                      },
                      "start": {
                        "byte": 23,
                        "column": 23,
                        "line": 0,
                      },
                    },
                    "segment": "examplebucket",
                    "type": "nameTraversal",
                  },
                ],
                "value": "aws_s3_bucket.examplebucket",
              },
              "range": {
                "end": {
                  "byte": 37,
                  "column": 37,
                  "line": 0,
                },
                "start": {
                  "byte": 10,
                  "column": 10,
                  "line": 0,
                },
              },
              "type": "scopeTraversal",
            },
            {
              "children": [],
              "range": {
                "end": {
                  "byte": 39,
                  "column": 39,
                  "line": 0,
                },
                "start": {
                  "byte": 37,
                  "column": 37,
                  "line": 0,
                },
              },
              "type": "",
            },
          ],
          "meta": {
            "anonSymbolExpression": ".*",
            "eachExpression": ".*",
            "markerRange": {
              "end": {
                "byte": 39,
                "column": 39,
                "line": 0,
              },
              "start": {
                "byte": 37,
                "column": 37,
                "line": 0,
              },
            },
            "sourceExpression": "aws_s3_bucket.examplebucket",
            "value": "aws_s3_bucket.examplebucket.*",
          },
          "range": {
            "end": {
              "byte": 39,
              "column": 39,
              "line": 0,
            },
            "start": {
              "byte": 37,
              "column": 37,
              "line": 0,
            },
          },
          "type": "splat",
        },
      ],
      "meta": {
        "argsRanges": [
          {
            "end": {
              "byte": 39,
              "column": 39,
              "line": 0,
            },
            "start": {
              "byte": 10,
              "column": 10,
              "line": 0,
            },
          },
        ],
        "closeParenRange": {
          "end": {
            "byte": 40,
            "column": 40,
            "line": 0,
          },
          "start": {
            "byte": 39,
            "column": 39,
            "line": 0,
          },
        },
        "expandedFinalArgument": false,
        "name": "toset",
        "nameRange": {
          "end": {
            "byte": 9,
            "column": 9,
            "line": 0,
          },
          "start": {
            "byte": 4,
            "column": 4,
            "line": 0,
          },
        },
        "openParenRange": {
          "end": {
            "byte": 10,
            "column": 10,
            "line": 0,
          },
          "start": {
            "byte": 9,
            "column": 9,
            "line": 0,
          },
        },
        "value": "toset(aws_s3_bucket.examplebucket.*)",
      },
      "range": {
        "end": {
          "byte": 10,
          "column": 10,
          "line": 0,
        },
        "start": {
          "byte": 4,
          "column": 4,
          "line": 0,
        },
      },
      "type": "function",
    },
  ],
  "meta": {
    "value": ""\${ toset(aws_s3_bucket.examplebucket.*) }"",
  },
  "range": {
    "end": {
      "byte": 43,
      "column": 43,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst parses ternary expressions 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [
            {
              "children": [],
              "meta": {
                "fullAccessor": "aws_kms_key.examplekms.deletion_window_in_days",
                "traversal": [
                  {
                    "range": {
                      "end": {
                        "byte": 14,
                        "column": 14,
                        "line": 0,
                      },
                      "start": {
                        "byte": 3,
                        "column": 3,
                        "line": 0,
                      },
                    },
                    "segment": "aws_kms_key",
                    "type": "nameTraversal",
                  },
                  {
                    "range": {
                      "end": {
                        "byte": 25,
                        "column": 25,
                        "line": 0,
                      },
                      "start": {
                        "byte": 14,
                        "column": 14,
                        "line": 0,
                      },
                    },
                    "segment": "examplekms",
                    "type": "nameTraversal",
                  },
                  {
                    "range": {
                      "end": {
                        "byte": 49,
                        "column": 49,
                        "line": 0,
                      },
                      "start": {
                        "byte": 25,
                        "column": 25,
                        "line": 0,
                      },
                    },
                    "segment": "deletion_window_in_days",
                    "type": "nameTraversal",
                  },
                ],
                "value": "aws_kms_key.examplekms.deletion_window_in_days",
              },
              "range": {
                "end": {
                  "byte": 49,
                  "column": 49,
                  "line": 0,
                },
                "start": {
                  "byte": 3,
                  "column": 3,
                  "line": 0,
                },
              },
              "type": "scopeTraversal",
            },
            {
              "children": [],
              "meta": {
                "type": "number",
                "value": "3",
              },
              "range": {
                "end": {
                  "byte": 53,
                  "column": 53,
                  "line": 0,
                },
                "start": {
                  "byte": 52,
                  "column": 52,
                  "line": 0,
                },
              },
              "type": "literalValue",
            },
          ],
          "meta": {
            "lhsExpression": "aws_kms_key.examplekms.deletion_window_in_days",
            "operator": "greaterThan",
            "returnType": "bool",
            "rhsExpression": "3",
            "value": "aws_kms_key.examplekms.deletion_window_in_days > 3",
          },
          "range": {
            "end": {
              "byte": 49,
              "column": 49,
              "line": 0,
            },
            "start": {
              "byte": 3,
              "column": 3,
              "line": 0,
            },
          },
          "type": "binaryOp",
        },
        {
          "children": [],
          "meta": {
            "fullAccessor": "aws_s3_bucket.examplebucket.id",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 69,
                    "column": 69,
                    "line": 0,
                  },
                  "start": {
                    "byte": 56,
                    "column": 56,
                    "line": 0,
                  },
                },
                "segment": "aws_s3_bucket",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 83,
                    "column": 83,
                    "line": 0,
                  },
                  "start": {
                    "byte": 69,
                    "column": 69,
                    "line": 0,
                  },
                },
                "segment": "examplebucket",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 86,
                    "column": 86,
                    "line": 0,
                  },
                  "start": {
                    "byte": 83,
                    "column": 83,
                    "line": 0,
                  },
                },
                "segment": "id",
                "type": "nameTraversal",
              },
            ],
            "value": "aws_s3_bucket.examplebucket.id",
          },
          "range": {
            "end": {
              "byte": 86,
              "column": 86,
              "line": 0,
            },
            "start": {
              "byte": 56,
              "column": 56,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
        {
          "children": [],
          "meta": {
            "value": "[]",
          },
          "range": {
            "end": {
              "byte": 90,
              "column": 90,
              "line": 0,
            },
            "start": {
              "byte": 89,
              "column": 89,
              "line": 0,
            },
          },
          "type": "tuple",
        },
      ],
      "meta": {
        "conditionExpression": "aws_kms_key.examplekms.deletion_window_in_days > 3",
        "falseExpression": "[]",
        "trueExpression": "aws_s3_bucket.examplebucket.id",
        "value": "aws_kms_key.examplekms.deletion_window_in_days > 3 ? aws_s3_bucket.examplebucket.id : []",
      },
      "range": {
        "end": {
          "byte": 49,
          "column": 49,
          "line": 0,
        },
        "start": {
          "byte": 3,
          "column": 3,
          "line": 0,
        },
      },
      "type": "conditional",
    },
  ],
  "meta": {
    "value": ""\${aws_kms_key.examplekms.deletion_window_in_days > 3 ? aws_s3_bucket.examplebucket.id : []}"",
  },
  "range": {
    "end": {
      "byte": 93,
      "column": 93,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst parses terraform functions with file access 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [
            {
              "children": [],
              "meta": {
                "fullAccessor": "aws_s3_bucket.examplebucket_two",
                "traversal": [
                  {
                    "range": {
                      "end": {
                        "byte": 25,
                        "column": 25,
                        "line": 0,
                      },
                      "start": {
                        "byte": 12,
                        "column": 12,
                        "line": 0,
                      },
                    },
                    "segment": "aws_s3_bucket",
                    "type": "nameTraversal",
                  },
                  {
                    "range": {
                      "end": {
                        "byte": 43,
                        "column": 43,
                        "line": 0,
                      },
                      "start": {
                        "byte": 25,
                        "column": 25,
                        "line": 0,
                      },
                    },
                    "segment": "examplebucket_two",
                    "type": "nameTraversal",
                  },
                ],
                "value": "aws_s3_bucket.examplebucket_two",
              },
              "range": {
                "end": {
                  "byte": 43,
                  "column": 43,
                  "line": 0,
                },
                "start": {
                  "byte": 12,
                  "column": 12,
                  "line": 0,
                },
              },
              "type": "scopeTraversal",
            },
            {
              "children": [],
              "meta": {
                "type": "number",
                "value": "0",
              },
              "range": {
                "end": {
                  "byte": 46,
                  "column": 46,
                  "line": 0,
                },
                "start": {
                  "byte": 45,
                  "column": 45,
                  "line": 0,
                },
              },
              "type": "literalValue",
            },
          ],
          "meta": {
            "argsRanges": [
              {
                "end": {
                  "byte": 43,
                  "column": 43,
                  "line": 0,
                },
                "start": {
                  "byte": 12,
                  "column": 12,
                  "line": 0,
                },
              },
              {
                "end": {
                  "byte": 46,
                  "column": 46,
                  "line": 0,
                },
                "start": {
                  "byte": 45,
                  "column": 45,
                  "line": 0,
                },
              },
            ],
            "closeParenRange": {
              "end": {
                "byte": 47,
                "column": 47,
                "line": 0,
              },
              "start": {
                "byte": 46,
                "column": 46,
                "line": 0,
              },
            },
            "expandedFinalArgument": false,
            "name": "element",
            "nameRange": {
              "end": {
                "byte": 11,
                "column": 11,
                "line": 0,
              },
              "start": {
                "byte": 4,
                "column": 4,
                "line": 0,
              },
            },
            "openParenRange": {
              "end": {
                "byte": 12,
                "column": 12,
                "line": 0,
              },
              "start": {
                "byte": 11,
                "column": 11,
                "line": 0,
              },
            },
            "value": "element(aws_s3_bucket.examplebucket_two, 0)",
          },
          "range": {
            "end": {
              "byte": 12,
              "column": 12,
              "line": 0,
            },
            "start": {
              "byte": 4,
              "column": 4,
              "line": 0,
            },
          },
          "type": "function",
        },
      ],
      "meta": {
        "fullAccessor": "id",
        "sourceExpression": "element(aws_s3_bucket.examplebucket_two, 0)",
        "traversal": [
          {
            "range": {
              "end": {
                "byte": 50,
                "column": 50,
                "line": 0,
              },
              "start": {
                "byte": 47,
                "column": 47,
                "line": 0,
              },
            },
            "segment": "id",
            "type": "nameTraversal",
          },
        ],
        "value": "element(aws_s3_bucket.examplebucket_two, 0).id",
      },
      "range": {
        "end": {
          "byte": 50,
          "column": 50,
          "line": 0,
        },
        "start": {
          "byte": 4,
          "column": 4,
          "line": 0,
        },
      },
      "type": "relativeTraversal",
    },
  ],
  "meta": {
    "value": ""\${ element(aws_s3_bucket.examplebucket_two, 0).id }"",
  },
  "range": {
    "end": {
      "byte": 53,
      "column": 53,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst parses three part references 1`] = `
{
  "children": [
    {
      "children": [],
      "meta": {
        "fullAccessor": "module.foo.output",
        "traversal": [
          {
            "range": {
              "end": {
                "byte": 9,
                "column": 9,
                "line": 0,
              },
              "start": {
                "byte": 3,
                "column": 3,
                "line": 0,
              },
            },
            "segment": "module",
            "type": "nameTraversal",
          },
          {
            "range": {
              "end": {
                "byte": 13,
                "column": 13,
                "line": 0,
              },
              "start": {
                "byte": 9,
                "column": 9,
                "line": 0,
              },
            },
            "segment": "foo",
            "type": "nameTraversal",
          },
          {
            "range": {
              "end": {
                "byte": 20,
                "column": 20,
                "line": 0,
              },
              "start": {
                "byte": 13,
                "column": 13,
                "line": 0,
              },
            },
            "segment": "output",
            "type": "nameTraversal",
          },
        ],
        "value": "module.foo.output",
      },
      "range": {
        "end": {
          "byte": 20,
          "column": 20,
          "line": 0,
        },
        "start": {
          "byte": 3,
          "column": 3,
          "line": 0,
        },
      },
      "type": "scopeTraversal",
    },
  ],
  "meta": {
    "value": ""\${module.foo.output}"",
  },
  "range": {
    "end": {
      "byte": 22,
      "column": 22,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst parses variable arithmetics 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "meta": {
            "fullAccessor": "var.members",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 6,
                    "column": 6,
                    "line": 0,
                  },
                  "start": {
                    "byte": 3,
                    "column": 3,
                    "line": 0,
                  },
                },
                "segment": "var",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 14,
                    "column": 14,
                    "line": 0,
                  },
                  "start": {
                    "byte": 6,
                    "column": 6,
                    "line": 0,
                  },
                },
                "segment": "members",
                "type": "nameTraversal",
              },
            ],
            "value": "var.members",
          },
          "range": {
            "end": {
              "byte": 14,
              "column": 14,
              "line": 0,
            },
            "start": {
              "byte": 3,
              "column": 3,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
        {
          "children": [],
          "meta": {
            "fullAccessor": "var.admins",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 20,
                    "column": 20,
                    "line": 0,
                  },
                  "start": {
                    "byte": 17,
                    "column": 17,
                    "line": 0,
                  },
                },
                "segment": "var",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 27,
                    "column": 27,
                    "line": 0,
                  },
                  "start": {
                    "byte": 20,
                    "column": 20,
                    "line": 0,
                  },
                },
                "segment": "admins",
                "type": "nameTraversal",
              },
            ],
            "value": "var.admins",
          },
          "range": {
            "end": {
              "byte": 27,
              "column": 27,
              "line": 0,
            },
            "start": {
              "byte": 17,
              "column": 17,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
      ],
      "meta": {
        "lhsExpression": "var.members",
        "operator": "add",
        "returnType": "number",
        "rhsExpression": "var.admins",
        "value": "var.members + var.admins",
      },
      "range": {
        "end": {
          "byte": 14,
          "column": 14,
          "line": 0,
        },
        "start": {
          "byte": 3,
          "column": 3,
          "line": 0,
        },
      },
      "type": "binaryOp",
    },
  ],
  "meta": {
    "value": ""\${var.members + var.admins}"",
  },
  "range": {
    "end": {
      "byte": 29,
      "column": 29,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst partial variable property access 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "meta": {
            "fullAccessor": "var.settings",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 7,
                    "column": 7,
                    "line": 0,
                  },
                  "start": {
                    "byte": 4,
                    "column": 4,
                    "line": 0,
                  },
                },
                "segment": "var",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 16,
                    "column": 16,
                    "line": 0,
                  },
                  "start": {
                    "byte": 7,
                    "column": 7,
                    "line": 0,
                  },
                },
                "segment": "settings",
                "type": "nameTraversal",
              },
            ],
            "value": "var.settings",
          },
          "range": {
            "end": {
              "byte": 16,
              "column": 16,
              "line": 0,
            },
            "start": {
              "byte": 4,
              "column": 4,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
        {
          "children": [
            {
              "children": [],
              "meta": {
                "fullAccessor": "var.prefix",
                "traversal": [
                  {
                    "range": {
                      "end": {
                        "byte": 23,
                        "column": 23,
                        "line": 0,
                      },
                      "start": {
                        "byte": 20,
                        "column": 20,
                        "line": 0,
                      },
                    },
                    "segment": "var",
                    "type": "nameTraversal",
                  },
                  {
                    "range": {
                      "end": {
                        "byte": 30,
                        "column": 30,
                        "line": 0,
                      },
                      "start": {
                        "byte": 23,
                        "column": 23,
                        "line": 0,
                      },
                    },
                    "segment": "prefix",
                    "type": "nameTraversal",
                  },
                ],
                "value": "var.prefix",
              },
              "range": {
                "end": {
                  "byte": 30,
                  "column": 30,
                  "line": 0,
                },
                "start": {
                  "byte": 20,
                  "column": 20,
                  "line": 0,
                },
              },
              "type": "scopeTraversal",
            },
            {
              "children": [],
              "meta": {
                "type": "string",
                "value": "-my-bucket",
              },
              "range": {
                "end": {
                  "byte": 41,
                  "column": 41,
                  "line": 0,
                },
                "start": {
                  "byte": 31,
                  "column": 31,
                  "line": 0,
                },
              },
              "type": "literalValue",
            },
          ],
          "meta": {
            "value": ""\${var.prefix}-my-bucket"",
          },
          "range": {
            "end": {
              "byte": 30,
              "column": 30,
              "line": 0,
            },
            "start": {
              "byte": 20,
              "column": 20,
              "line": 0,
            },
          },
          "type": "template",
        },
      ],
      "meta": {
        "collectionExpression": "var.settings",
        "keyExpression": ""\${var.prefix}-my-bucket"",
        "value": "var.settings["\${var.prefix}-my-bucket"]",
      },
      "range": {
        "end": {
          "byte": 17,
          "column": 17,
          "line": 0,
        },
        "start": {
          "byte": 16,
          "column": 16,
          "line": 0,
        },
      },
      "type": "index",
    },
  ],
  "meta": {
    "value": ""\${ var.settings["\${var.prefix}-my-bucket"] }"",
  },
  "range": {
    "end": {
      "byte": 46,
      "column": 46,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst property access 1`] = `
{
  "children": [
    {
      "children": [],
      "meta": {
        "fullAccessor": "var.setting["bucket_name"]",
        "traversal": [
          {
            "range": {
              "end": {
                "byte": 7,
                "column": 7,
                "line": 0,
              },
              "start": {
                "byte": 4,
                "column": 4,
                "line": 0,
              },
            },
            "segment": "var",
            "type": "nameTraversal",
          },
          {
            "range": {
              "end": {
                "byte": 15,
                "column": 15,
                "line": 0,
              },
              "start": {
                "byte": 7,
                "column": 7,
                "line": 0,
              },
            },
            "segment": "setting",
            "type": "nameTraversal",
          },
          {
            "range": {
              "end": {
                "byte": 30,
                "column": 30,
                "line": 0,
              },
              "start": {
                "byte": 15,
                "column": 15,
                "line": 0,
              },
            },
            "segment": ""bucket_name"",
            "type": "indexTraversal",
          },
        ],
        "value": "var.setting["bucket_name"]",
      },
      "range": {
        "end": {
          "byte": 30,
          "column": 30,
          "line": 0,
        },
        "start": {
          "byte": 4,
          "column": 4,
          "line": 0,
        },
      },
      "type": "scopeTraversal",
    },
  ],
  "meta": {
    "value": ""\${ var.setting["bucket_name"] }"",
  },
  "range": {
    "end": {
      "byte": 33,
      "column": 33,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getExpressionAst variable property access 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "meta": {
            "fullAccessor": "var.settings",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 7,
                    "column": 7,
                    "line": 0,
                  },
                  "start": {
                    "byte": 4,
                    "column": 4,
                    "line": 0,
                  },
                },
                "segment": "var",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 16,
                    "column": 16,
                    "line": 0,
                  },
                  "start": {
                    "byte": 7,
                    "column": 7,
                    "line": 0,
                  },
                },
                "segment": "settings",
                "type": "nameTraversal",
              },
            ],
            "value": "var.settings",
          },
          "range": {
            "end": {
              "byte": 16,
              "column": 16,
              "line": 0,
            },
            "start": {
              "byte": 4,
              "column": 4,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
        {
          "children": [],
          "meta": {
            "fullAccessor": "var.bucket_name_key",
            "traversal": [
              {
                "range": {
                  "end": {
                    "byte": 20,
                    "column": 20,
                    "line": 0,
                  },
                  "start": {
                    "byte": 17,
                    "column": 17,
                    "line": 0,
                  },
                },
                "segment": "var",
                "type": "nameTraversal",
              },
              {
                "range": {
                  "end": {
                    "byte": 36,
                    "column": 36,
                    "line": 0,
                  },
                  "start": {
                    "byte": 20,
                    "column": 20,
                    "line": 0,
                  },
                },
                "segment": "bucket_name_key",
                "type": "nameTraversal",
              },
            ],
            "value": "var.bucket_name_key",
          },
          "range": {
            "end": {
              "byte": 36,
              "column": 36,
              "line": 0,
            },
            "start": {
              "byte": 17,
              "column": 17,
              "line": 0,
            },
          },
          "type": "scopeTraversal",
        },
      ],
      "meta": {
        "collectionExpression": "var.settings",
        "keyExpression": "var.bucket_name_key",
        "value": "var.settings[var.bucket_name_key]",
      },
      "range": {
        "end": {
          "byte": 17,
          "column": 17,
          "line": 0,
        },
        "start": {
          "byte": 16,
          "column": 16,
          "line": 0,
        },
      },
      "type": "index",
    },
  ],
  "meta": {
    "value": ""\${ var.settings[var.bucket_name_key] }"",
  },
  "range": {
    "end": {
      "byte": 40,
      "column": 40,
      "line": 0,
    },
    "start": {
      "byte": 0,
      "column": 0,
      "line": 0,
    },
  },
  "type": "templateWrap",
}
`;

exports[`getReferencesInExpression fails on malformed expressions 1`] = `[Error: getExpressionAst errors on input string '"\${module.foo.output"': main.tf:0,1-3: Unclosed template interpolation sequence; There is no closing brace for this interpolation sequence before the end of the quoted template. This might be caused by incorrect nesting inside the given expression. ]`;

exports[`getReferencesInExpression list expressions 1`] = `
[
  {
    "endPosition": 17,
    "startPosition": 5,
    "value": "var.tags.app",
  },
  {
    "endPosition": 31,
    "startPosition": 19,
    "value": "var.tags.env",
  },
]
`;

exports[`getReferencesInExpression mixed property access 1`] = `
[
  {
    "endPosition": 34,
    "startPosition": 4,
    "value": "var.setting."bucket_name".arn",
  },
]
`;

exports[`getReferencesInExpression parses a reference string 1`] = `
[
  {
    "endPosition": 10,
    "startPosition": 3,
    "value": "var.foo",
  },
]
`;

exports[`getReferencesInExpression parses a simple string 1`] = `[]`;

exports[`getReferencesInExpression parses a terraform function 1`] = `
[
  {
    "endPosition": 28,
    "startPosition": 11,
    "value": "module.foo.output",
  },
  {
    "endPosition": 42,
    "startPosition": 35,
    "value": "var.bar",
  },
]
`;

exports[`getReferencesInExpression parses embedded vars 1`] = `
[
  {
    "endPosition": 44,
    "startPosition": 27,
    "value": "module.foo.output",
  },
]
`;

exports[`getReferencesInExpression parses for in loops 1`] = `
[
  {
    "endPosition": 32,
    "startPosition": 23,
    "value": "var.users",
  },
]
`;

exports[`getReferencesInExpression parses four part references 1`] = `
[
  {
    "endPosition": 22,
    "startPosition": 3,
    "value": "data.type.name.attr",
  },
]
`;

exports[`getReferencesInExpression parses lists 1`] = `
[
  {
    "endPosition": 27,
    "startPosition": 10,
    "value": "module.foo.output",
  },
]
`;

exports[`getReferencesInExpression parses maps 1`] = `
[
  {
    "endPosition": 29,
    "startPosition": 12,
    "value": "module.foo.output",
  },
  {
    "endPosition": 86,
    "startPosition": 69,
    "value": "module.foo.output",
  },
  {
    "endPosition": 100,
    "startPosition": 93,
    "value": "var.bar",
  },
]
`;

exports[`getReferencesInExpression parses multi-line for loops 1`] = `
[
  {
    "endPosition": 44,
    "startPosition": 35,
    "value": "var.users",
  },
]
`;

exports[`getReferencesInExpression parses nested terraform functions 1`] = `
[
  {
    "endPosition": 22,
    "startPosition": 9,
    "value": "var.separator",
  },
  {
    "endPosition": 55,
    "startPosition": 38,
    "value": "module.foo.output",
  },
  {
    "endPosition": 69,
    "startPosition": 62,
    "value": "var.bar",
  },
]
`;

exports[`getReferencesInExpression parses splat expressions 1`] = `
[
  {
    "endPosition": 37,
    "startPosition": 10,
    "value": "aws_s3_bucket.examplebucket",
  },
]
`;

exports[`getReferencesInExpression parses ternary expressions 1`] = `
[
  {
    "endPosition": 49,
    "startPosition": 3,
    "value": "aws_kms_key.examplekms.deletion_window_in_days",
  },
  {
    "endPosition": 86,
    "startPosition": 56,
    "value": "aws_s3_bucket.examplebucket.id",
  },
]
`;

exports[`getReferencesInExpression parses terraform functions with file access 1`] = `
[
  {
    "endPosition": 43,
    "startPosition": 12,
    "value": "aws_s3_bucket.examplebucket_two",
  },
]
`;

exports[`getReferencesInExpression parses three part references 1`] = `
[
  {
    "endPosition": 20,
    "startPosition": 3,
    "value": "module.foo.output",
  },
]
`;

exports[`getReferencesInExpression parses variable arithmetics 1`] = `
[
  {
    "endPosition": 14,
    "startPosition": 3,
    "value": "var.members",
  },
  {
    "endPosition": 27,
    "startPosition": 17,
    "value": "var.admins",
  },
]
`;

exports[`getReferencesInExpression partial variable property access 1`] = `
[
  {
    "endPosition": 16,
    "startPosition": 4,
    "value": "var.settings",
  },
  {
    "endPosition": 30,
    "startPosition": 20,
    "value": "var.prefix",
  },
]
`;

exports[`getReferencesInExpression property access 1`] = `
[
  {
    "endPosition": 30,
    "startPosition": 4,
    "value": "var.setting."bucket_name"",
  },
]
`;

exports[`getReferencesInExpression variable property access 1`] = `
[
  {
    "endPosition": 16,
    "startPosition": 4,
    "value": "var.settings",
  },
  {
    "endPosition": 36,
    "startPosition": 17,
    "value": "var.bucket_name_key",
  },
]
`;
