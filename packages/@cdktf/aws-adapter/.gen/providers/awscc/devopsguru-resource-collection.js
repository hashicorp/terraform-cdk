"use strict";
// https://www.terraform.io/docs/providers/awscc/r/devopsguru_resource_collection.html
// generated from terraform resource schema
Object.defineProperty(exports, "__esModule", { value: true });
exports.DevopsguruResourceCollection = exports.devopsguruResourceCollectionResourceCollectionFilterToTerraform = exports.devopsguruResourceCollectionResourceCollectionFilterCloudformationToTerraform = void 0;
const cdktf = require("cdktf");
function devopsguruResourceCollectionResourceCollectionFilterCloudformationToTerraform(struct) {
    if (!cdktf.canInspect(struct)) {
        return struct;
    }
    return {
        stack_names: cdktf.listMapper(cdktf.stringToTerraform)(struct.stackNames),
    };
}
exports.devopsguruResourceCollectionResourceCollectionFilterCloudformationToTerraform = devopsguruResourceCollectionResourceCollectionFilterCloudformationToTerraform;
function devopsguruResourceCollectionResourceCollectionFilterToTerraform(struct) {
    if (!cdktf.canInspect(struct)) {
        return struct;
    }
    return {
        cloudformation: devopsguruResourceCollectionResourceCollectionFilterCloudformationToTerraform(struct.cloudformation),
    };
}
exports.devopsguruResourceCollectionResourceCollectionFilterToTerraform = devopsguruResourceCollectionResourceCollectionFilterToTerraform;
/**
* Represents a {@link https://www.terraform.io/docs/providers/awscc/r/devopsguru_resource_collection.html awscc_devopsguru_resource_collection}
*/
class DevopsguruResourceCollection extends cdktf.TerraformResource {
    // ===========
    // INITIALIZER
    // ===========
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/awscc/r/devopsguru_resource_collection.html awscc_devopsguru_resource_collection} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DevopsguruResourceCollectionConfig
    */
    constructor(scope, id, config) {
        super(scope, id, {
            terraformResourceType: 'awscc_devopsguru_resource_collection',
            terraformGeneratorMetadata: {
                providerName: 'awscc'
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._resourceCollectionFilter = config.resourceCollectionFilter;
    }
    // ==========
    // ATTRIBUTES
    // ==========
    // id - computed: true, optional: false, required: false
    get id() {
        return this.getStringAttribute('id');
    }
    get resourceCollectionFilter() {
        return this.interpolationForAttribute('resource_collection_filter');
    }
    set resourceCollectionFilter(value) {
        this._resourceCollectionFilter = value;
    }
    // Temporarily expose input value. Use with caution.
    get resourceCollectionFilterInput() {
        return this._resourceCollectionFilter;
    }
    // resource_collection_type - computed: true, optional: false, required: false
    get resourceCollectionType() {
        return this.getStringAttribute('resource_collection_type');
    }
    // =========
    // SYNTHESIS
    // =========
    synthesizeAttributes() {
        return {
            resource_collection_filter: devopsguruResourceCollectionResourceCollectionFilterToTerraform(this._resourceCollectionFilter),
        };
    }
}
exports.DevopsguruResourceCollection = DevopsguruResourceCollection;
// =================
// STATIC PROPERTIES
// =================
DevopsguruResourceCollection.tfResourceType = "awscc_devopsguru_resource_collection";
//# sourceMappingURL=data:application/json;base64,