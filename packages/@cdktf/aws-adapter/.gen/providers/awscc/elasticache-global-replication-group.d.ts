import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface ElasticacheGlobalReplicationGroupConfig extends cdktf.TerraformMetaArguments {
    /**
    * AutomaticFailoverEnabled
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#automatic_failover_enabled ElasticacheGlobalReplicationGroup#automatic_failover_enabled}
    */
    readonly automaticFailoverEnabled?: boolean | cdktf.IResolvable;
    /**
    * The cache node type of the Global Datastore
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#cache_node_type ElasticacheGlobalReplicationGroup#cache_node_type}
    */
    readonly cacheNodeType?: string;
    /**
    * Cache parameter group name to use for the new engine version. This parameter cannot be modified independently.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#cache_parameter_group_name ElasticacheGlobalReplicationGroup#cache_parameter_group_name}
    */
    readonly cacheParameterGroupName?: string;
    /**
    * The engine version of the Global Datastore.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#engine_version ElasticacheGlobalReplicationGroup#engine_version}
    */
    readonly engineVersion?: string;
    /**
    * Indicates the number of node groups in the Global Datastore.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#global_node_group_count ElasticacheGlobalReplicationGroup#global_node_group_count}
    */
    readonly globalNodeGroupCount?: number;
    /**
    * The optional description of the Global Datastore
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#global_replication_group_description ElasticacheGlobalReplicationGroup#global_replication_group_description}
    */
    readonly globalReplicationGroupDescription?: string;
    /**
    * The suffix name of a Global Datastore. Amazon ElastiCache automatically applies a prefix to the Global Datastore ID when it is created. Each AWS Region has its own prefix.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#global_replication_group_id_suffix ElasticacheGlobalReplicationGroup#global_replication_group_id_suffix}
    */
    readonly globalReplicationGroupIdSuffix?: string;
    /**
    * The replication groups that comprise the Global Datastore.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#members ElasticacheGlobalReplicationGroup#members}
    */
    readonly members: ElasticacheGlobalReplicationGroupMembers[];
    /**
    * Describes the replication group IDs, the AWS regions where they are stored and the shard configuration for each that comprise the Global Datastore
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#regional_configurations ElasticacheGlobalReplicationGroup#regional_configurations}
    */
    readonly regionalConfigurations?: ElasticacheGlobalReplicationGroupRegionalConfigurations[];
}
export interface ElasticacheGlobalReplicationGroupMembers {
    /**
    * Regionally unique identifier for the member i.e. ReplicationGroupId.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#replication_group_id ElasticacheGlobalReplicationGroup#replication_group_id}
    */
    readonly replicationGroupId?: string;
    /**
    * The AWS region of the Global Datastore member.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#replication_group_region ElasticacheGlobalReplicationGroup#replication_group_region}
    */
    readonly replicationGroupRegion?: string;
    /**
    * Indicates the role of the member, primary or secondary.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#role ElasticacheGlobalReplicationGroup#role}
    */
    readonly role?: string;
}
export declare function elasticacheGlobalReplicationGroupMembersToTerraform(struct?: ElasticacheGlobalReplicationGroupMembers): any;
export interface ElasticacheGlobalReplicationGroupRegionalConfigurationsReshardingConfigurations {
    /**
    * Unique identifier for the Node Group. This is either auto-generated by ElastiCache (4-digit id) or a user supplied id.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#node_group_id ElasticacheGlobalReplicationGroup#node_group_id}
    */
    readonly nodeGroupId?: string;
    /**
    * A list of preferred availability zones for the nodes of new node groups.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#preferred_availability_zones ElasticacheGlobalReplicationGroup#preferred_availability_zones}
    */
    readonly preferredAvailabilityZones?: string[];
}
export declare function elasticacheGlobalReplicationGroupRegionalConfigurationsReshardingConfigurationsToTerraform(struct?: ElasticacheGlobalReplicationGroupRegionalConfigurationsReshardingConfigurations): any;
export interface ElasticacheGlobalReplicationGroupRegionalConfigurations {
    /**
    * The replication group id of the Global Datastore member.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#replication_group_id ElasticacheGlobalReplicationGroup#replication_group_id}
    */
    readonly replicationGroupId?: string;
    /**
    * The AWS region of the Global Datastore member.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#replication_group_region ElasticacheGlobalReplicationGroup#replication_group_region}
    */
    readonly replicationGroupRegion?: string;
    /**
    * A list of PreferredAvailabilityZones objects that specifies the configuration of a node group in the resharded cluster.
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html#resharding_configurations ElasticacheGlobalReplicationGroup#resharding_configurations}
    */
    readonly reshardingConfigurations?: ElasticacheGlobalReplicationGroupRegionalConfigurationsReshardingConfigurations[];
}
export declare function elasticacheGlobalReplicationGroupRegionalConfigurationsToTerraform(struct?: ElasticacheGlobalReplicationGroupRegionalConfigurations): any;
/**
* Represents a {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html awscc_elasticache_global_replication_group}
*/
export declare class ElasticacheGlobalReplicationGroup extends cdktf.TerraformResource {
    static readonly tfResourceType: string;
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/awscc/r/elasticache_global_replication_group.html awscc_elasticache_global_replication_group} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options ElasticacheGlobalReplicationGroupConfig
    */
    constructor(scope: Construct, id: string, config: ElasticacheGlobalReplicationGroupConfig);
    private _automaticFailoverEnabled?;
    get automaticFailoverEnabled(): boolean | cdktf.IResolvable;
    set automaticFailoverEnabled(value: boolean | cdktf.IResolvable);
    resetAutomaticFailoverEnabled(): void;
    get automaticFailoverEnabledInput(): boolean | cdktf.IResolvable | undefined;
    private _cacheNodeType?;
    get cacheNodeType(): string;
    set cacheNodeType(value: string);
    resetCacheNodeType(): void;
    get cacheNodeTypeInput(): string | undefined;
    private _cacheParameterGroupName?;
    get cacheParameterGroupName(): string;
    set cacheParameterGroupName(value: string);
    resetCacheParameterGroupName(): void;
    get cacheParameterGroupNameInput(): string | undefined;
    private _engineVersion?;
    get engineVersion(): string;
    set engineVersion(value: string);
    resetEngineVersion(): void;
    get engineVersionInput(): string | undefined;
    private _globalNodeGroupCount?;
    get globalNodeGroupCount(): number;
    set globalNodeGroupCount(value: number);
    resetGlobalNodeGroupCount(): void;
    get globalNodeGroupCountInput(): number | undefined;
    private _globalReplicationGroupDescription?;
    get globalReplicationGroupDescription(): string;
    set globalReplicationGroupDescription(value: string);
    resetGlobalReplicationGroupDescription(): void;
    get globalReplicationGroupDescriptionInput(): string | undefined;
    get globalReplicationGroupId(): string;
    private _globalReplicationGroupIdSuffix?;
    get globalReplicationGroupIdSuffix(): string;
    set globalReplicationGroupIdSuffix(value: string);
    resetGlobalReplicationGroupIdSuffix(): void;
    get globalReplicationGroupIdSuffixInput(): string | undefined;
    get id(): string;
    private _members;
    get members(): ElasticacheGlobalReplicationGroupMembers[];
    set members(value: ElasticacheGlobalReplicationGroupMembers[]);
    get membersInput(): ElasticacheGlobalReplicationGroupMembers[];
    private _regionalConfigurations?;
    get regionalConfigurations(): ElasticacheGlobalReplicationGroupRegionalConfigurations[];
    set regionalConfigurations(value: ElasticacheGlobalReplicationGroupRegionalConfigurations[]);
    resetRegionalConfigurations(): void;
    get regionalConfigurationsInput(): ElasticacheGlobalReplicationGroupRegionalConfigurations[] | undefined;
    get status(): string;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
