"use strict";
// https://www.terraform.io/docs/providers/awscc/d/codeguruprofiler_profiling_group.html
// generated from terraform resource schema
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataAwsccCodeguruprofilerProfilingGroup = exports.dataAwsccCodeguruprofilerProfilingGroupTagsToTerraform = exports.DataAwsccCodeguruprofilerProfilingGroupTags = exports.dataAwsccCodeguruprofilerProfilingGroupAnomalyDetectionNotificationConfigurationToTerraform = exports.DataAwsccCodeguruprofilerProfilingGroupAnomalyDetectionNotificationConfiguration = exports.dataAwsccCodeguruprofilerProfilingGroupAgentPermissionsToTerraform = exports.DataAwsccCodeguruprofilerProfilingGroupAgentPermissions = void 0;
const cdktf = require("cdktf");
class DataAwsccCodeguruprofilerProfilingGroupAgentPermissions extends cdktf.ComplexComputedList {
    // principals - computed: true, optional: false, required: false
    get principals() {
        return this.getListAttribute('principals');
    }
}
exports.DataAwsccCodeguruprofilerProfilingGroupAgentPermissions = DataAwsccCodeguruprofilerProfilingGroupAgentPermissions;
function dataAwsccCodeguruprofilerProfilingGroupAgentPermissionsToTerraform(struct) {
    if (!cdktf.canInspect(struct)) {
        return struct;
    }
    return {
        principals: cdktf.listMapper(cdktf.stringToTerraform)(struct.principals),
    };
}
exports.dataAwsccCodeguruprofilerProfilingGroupAgentPermissionsToTerraform = dataAwsccCodeguruprofilerProfilingGroupAgentPermissionsToTerraform;
class DataAwsccCodeguruprofilerProfilingGroupAnomalyDetectionNotificationConfiguration extends cdktf.ComplexComputedList {
    // channel_id - computed: true, optional: false, required: false
    get channelId() {
        return this.getStringAttribute('channel_id');
    }
    // channel_uri - computed: true, optional: false, required: false
    get channelUri() {
        return this.getStringAttribute('channel_uri');
    }
}
exports.DataAwsccCodeguruprofilerProfilingGroupAnomalyDetectionNotificationConfiguration = DataAwsccCodeguruprofilerProfilingGroupAnomalyDetectionNotificationConfiguration;
function dataAwsccCodeguruprofilerProfilingGroupAnomalyDetectionNotificationConfigurationToTerraform(struct) {
    if (!cdktf.canInspect(struct)) {
        return struct;
    }
    return {
        channel_id: cdktf.stringToTerraform(struct.channelId),
        channel_uri: cdktf.stringToTerraform(struct.channelUri),
    };
}
exports.dataAwsccCodeguruprofilerProfilingGroupAnomalyDetectionNotificationConfigurationToTerraform = dataAwsccCodeguruprofilerProfilingGroupAnomalyDetectionNotificationConfigurationToTerraform;
class DataAwsccCodeguruprofilerProfilingGroupTags extends cdktf.ComplexComputedList {
    // key - computed: true, optional: false, required: false
    get key() {
        return this.getStringAttribute('key');
    }
    // value - computed: true, optional: false, required: false
    get value() {
        return this.getStringAttribute('value');
    }
}
exports.DataAwsccCodeguruprofilerProfilingGroupTags = DataAwsccCodeguruprofilerProfilingGroupTags;
function dataAwsccCodeguruprofilerProfilingGroupTagsToTerraform(struct) {
    if (!cdktf.canInspect(struct)) {
        return struct;
    }
    return {
        key: cdktf.stringToTerraform(struct.key),
        value: cdktf.stringToTerraform(struct.value),
    };
}
exports.dataAwsccCodeguruprofilerProfilingGroupTagsToTerraform = dataAwsccCodeguruprofilerProfilingGroupTagsToTerraform;
/**
* Represents a {@link https://www.terraform.io/docs/providers/awscc/d/codeguruprofiler_profiling_group.html awscc_codeguruprofiler_profiling_group}
*/
class DataAwsccCodeguruprofilerProfilingGroup extends cdktf.TerraformDataSource {
    // ===========
    // INITIALIZER
    // ===========
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/awscc/d/codeguruprofiler_profiling_group.html awscc_codeguruprofiler_profiling_group} Data Source
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DataAwsccCodeguruprofilerProfilingGroupConfig
    */
    constructor(scope, id, config) {
        super(scope, id, {
            terraformResourceType: 'awscc_codeguruprofiler_profiling_group',
            terraformGeneratorMetadata: {
                providerName: 'awscc'
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = config.id;
    }
    // ==========
    // ATTRIBUTES
    // ==========
    // agent_permissions - computed: true, optional: false, required: false
    get agentPermissions() {
        return this.interpolationForAttribute('agent_permissions');
    }
    // anomaly_detection_notification_configuration - computed: true, optional: false, required: false
    get anomalyDetectionNotificationConfiguration() {
        return this.interpolationForAttribute('anomaly_detection_notification_configuration');
    }
    // arn - computed: true, optional: false, required: false
    get arn() {
        return this.getStringAttribute('arn');
    }
    // compute_platform - computed: true, optional: false, required: false
    get computePlatform() {
        return this.getStringAttribute('compute_platform');
    }
    get id() {
        return this.getStringAttribute('id');
    }
    set id(value) {
        this._id = value;
    }
    // Temporarily expose input value. Use with caution.
    get idInput() {
        return this._id;
    }
    // profiling_group_name - computed: true, optional: false, required: false
    get profilingGroupName() {
        return this.getStringAttribute('profiling_group_name');
    }
    // tags - computed: true, optional: false, required: false
    get tags() {
        return this.interpolationForAttribute('tags');
    }
    // =========
    // SYNTHESIS
    // =========
    synthesizeAttributes() {
        return {
            id: cdktf.stringToTerraform(this._id),
        };
    }
}
exports.DataAwsccCodeguruprofilerProfilingGroup = DataAwsccCodeguruprofilerProfilingGroup;
// =================
// STATIC PROPERTIES
// =================
DataAwsccCodeguruprofilerProfilingGroup.tfResourceType = "awscc_codeguruprofiler_profiling_group";
//# sourceMappingURL=data:application/json;base64,