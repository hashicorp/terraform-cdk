// this file is generated by schemas.js
export const awsccNameMap = {
  awscc_accessanalyzer_analyzer: "AWS::AccessAnalyzer::Analyzer",
  awscc_acmpca_certificate: "AWS::ACMPCA::Certificate",
  awscc_acmpca_certificate_authority: "AWS::ACMPCA::CertificateAuthority",
  awscc_acmpca_certificate_authority_activation:
    "AWS::ACMPCA::CertificateAuthorityActivation",
  awscc_acmpca_permission: "AWS::ACMPCA::Permission",
  awscc_amplify_app: "AWS::Amplify::App",
  awscc_amplify_branch: "AWS::Amplify::Branch",
  awscc_amplify_domain: "AWS::Amplify::Domain",
  awscc_apigateway_account: "AWS::ApiGateway::Account",
  awscc_apigateway_api_key: "AWS::ApiGateway::ApiKey",
  awscc_apigateway_client_certificate: "AWS::ApiGateway::ClientCertificate",
  awscc_apigateway_documentation_version:
    "AWS::ApiGateway::DocumentationVersion",
  awscc_apigateway_domain_name: "AWS::ApiGateway::DomainName",
  awscc_apigateway_model: "AWS::ApiGateway::Model",
  awscc_apigateway_request_validator: "AWS::ApiGateway::RequestValidator",
  awscc_apigateway_resource: "AWS::ApiGateway::Resource",
  awscc_apigateway_usage_plan: "AWS::ApiGateway::UsagePlan",
  awscc_apigateway_usage_plan_key: "AWS::ApiGateway::UsagePlanKey",
  awscc_appflow_connector_profile: "AWS::AppFlow::ConnectorProfile",
  awscc_appflow_flow: "AWS::AppFlow::Flow",
  awscc_appintegrations_event_integration:
    "AWS::AppIntegrations::EventIntegration",
  awscc_applicationinsights_application:
    "AWS::ApplicationInsights::Application",
  awscc_apprunner_service: "AWS::AppRunner::Service",
  awscc_aps_workspace: "AWS::APS::Workspace",
  awscc_athena_data_catalog: "AWS::Athena::DataCatalog",
  awscc_athena_named_query: "AWS::Athena::NamedQuery",
  awscc_athena_prepared_statement: "AWS::Athena::PreparedStatement",
  awscc_athena_work_group: "AWS::Athena::WorkGroup",
  awscc_auditmanager_assessment: "AWS::AuditManager::Assessment",
  awscc_autoscaling_warm_pool: "AWS::AutoScaling::WarmPool",
  awscc_backup_backup_plan: "AWS::Backup::BackupPlan",
  awscc_backup_backup_selection: "AWS::Backup::BackupSelection",
  awscc_backup_backup_vault: "AWS::Backup::BackupVault",
  awscc_budgets_budgets_action: "AWS::Budgets::BudgetsAction",
  awscc_cassandra_keyspace: "AWS::Cassandra::Keyspace",
  awscc_cassandra_table: "AWS::Cassandra::Table",
  awscc_ce_cost_category: "AWS::CE::CostCategory",
  awscc_certificatemanager_account: "AWS::CertificateManager::Account",
  awscc_chatbot_slack_channel_configuration:
    "AWS::Chatbot::SlackChannelConfiguration",
  awscc_cloudformation_module_default_version:
    "AWS::CloudFormation::ModuleDefaultVersion",
  awscc_cloudformation_module_version: "AWS::CloudFormation::ModuleVersion",
  awscc_cloudformation_public_type_version:
    "AWS::CloudFormation::PublicTypeVersion",
  awscc_cloudformation_publisher: "AWS::CloudFormation::Publisher",
  awscc_cloudformation_resource_default_version:
    "AWS::CloudFormation::ResourceDefaultVersion",
  awscc_cloudformation_resource_version: "AWS::CloudFormation::ResourceVersion",
  awscc_cloudformation_stack_set: "AWS::CloudFormation::StackSet",
  awscc_cloudformation_type_activation: "AWS::CloudFormation::TypeActivation",
  awscc_cloudfront_cache_policy: "AWS::CloudFront::CachePolicy",
  awscc_cloudfront_cloudfront_origin_access_identity:
    "AWS::CloudFront::CloudFrontOriginAccessIdentity",
  awscc_cloudfront_distribution: "AWS::CloudFront::Distribution",
  awscc_cloudfront_function: "AWS::CloudFront::Function",
  awscc_cloudfront_key_group: "AWS::CloudFront::KeyGroup",
  awscc_cloudfront_origin_request_policy:
    "AWS::CloudFront::OriginRequestPolicy",
  awscc_cloudfront_public_key: "AWS::CloudFront::PublicKey",
  awscc_cloudfront_realtime_log_config: "AWS::CloudFront::RealtimeLogConfig",
  awscc_cloudtrail_trail: "AWS::CloudTrail::Trail",
  awscc_cloudwatch_composite_alarm: "AWS::CloudWatch::CompositeAlarm",
  awscc_cloudwatch_metric_stream: "AWS::CloudWatch::MetricStream",
  awscc_codeartifact_domain: "AWS::CodeArtifact::Domain",
  awscc_codeartifact_repository: "AWS::CodeArtifact::Repository",
  awscc_codeguruprofiler_profiling_group:
    "AWS::CodeGuruProfiler::ProfilingGroup",
  awscc_codegurureviewer_repository_association:
    "AWS::CodeGuruReviewer::RepositoryAssociation",
  awscc_codestarconnections_connection: "AWS::CodeStarConnections::Connection",
  awscc_codestarnotifications_notification_rule:
    "AWS::CodeStarNotifications::NotificationRule",
  awscc_config_aggregation_authorization:
    "AWS::Config::AggregationAuthorization",
  awscc_config_configuration_aggregator: "AWS::Config::ConfigurationAggregator",
  awscc_config_conformance_pack: "AWS::Config::ConformancePack",
  awscc_config_organization_conformance_pack:
    "AWS::Config::OrganizationConformancePack",
  awscc_config_stored_query: "AWS::Config::StoredQuery",
  awscc_connect_quick_connect: "AWS::Connect::QuickConnect",
  awscc_customerprofiles_domain: "AWS::CustomerProfiles::Domain",
  awscc_customerprofiles_integration: "AWS::CustomerProfiles::Integration",
  awscc_customerprofiles_object_type: "AWS::CustomerProfiles::ObjectType",
  awscc_databrew_dataset: "AWS::DataBrew::Dataset",
  awscc_databrew_job: "AWS::DataBrew::Job",
  awscc_databrew_project: "AWS::DataBrew::Project",
  awscc_databrew_recipe: "AWS::DataBrew::Recipe",
  awscc_databrew_schedule: "AWS::DataBrew::Schedule",
  awscc_datasync_agent: "AWS::DataSync::Agent",
  awscc_datasync_location_efs: "AWS::DataSync::LocationEFS",
  awscc_datasync_location_fsx_windows: "AWS::DataSync::LocationFSxWindows",
  awscc_datasync_location_nfs: "AWS::DataSync::LocationNFS",
  awscc_datasync_location_object_storage:
    "AWS::DataSync::LocationObjectStorage",
  awscc_datasync_location_s3: "AWS::DataSync::LocationS3",
  awscc_datasync_location_smb: "AWS::DataSync::LocationSMB",
  awscc_datasync_task: "AWS::DataSync::Task",
  awscc_detective_graph: "AWS::Detective::Graph",
  awscc_detective_member_invitation: "AWS::Detective::MemberInvitation",
  awscc_devopsguru_notification_channel: "AWS::DevOpsGuru::NotificationChannel",
  awscc_devopsguru_resource_collection: "AWS::DevOpsGuru::ResourceCollection",
  awscc_dynamodb_global_table: "AWS::DynamoDB::GlobalTable",
  awscc_ec2_carrier_gateway: "AWS::EC2::CarrierGateway",
  awscc_ec2_dhcp_options: "AWS::EC2::DHCPOptions",
  awscc_ec2_ec2_fleet: "AWS::EC2::EC2Fleet",
  awscc_ec2_egress_only_internet_gateway: "AWS::EC2::EgressOnlyInternetGateway",
  awscc_ec2_enclave_certificate_iam_role_association:
    "AWS::EC2::EnclaveCertificateIamRoleAssociation",
  awscc_ec2_flow_log: "AWS::EC2::FlowLog",
  awscc_ec2_gateway_route_table_association:
    "AWS::EC2::GatewayRouteTableAssociation",
  awscc_ec2_local_gateway_route: "AWS::EC2::LocalGatewayRoute",
  awscc_ec2_local_gateway_route_table_vpc_association:
    "AWS::EC2::LocalGatewayRouteTableVPCAssociation",
  awscc_ec2_network_insights_analysis: "AWS::EC2::NetworkInsightsAnalysis",
  awscc_ec2_network_insights_path: "AWS::EC2::NetworkInsightsPath",
  awscc_ec2_prefix_list: "AWS::EC2::PrefixList",
  awscc_ec2_spot_fleet: "AWS::EC2::SpotFleet",
  awscc_ec2_transit_gateway: "AWS::EC2::TransitGateway",
  awscc_ec2_transit_gateway_connect: "AWS::EC2::TransitGatewayConnect",
  awscc_ec2_transit_gateway_multicast_domain:
    "AWS::EC2::TransitGatewayMulticastDomain",
  awscc_ec2_transit_gateway_multicast_domain_association:
    "AWS::EC2::TransitGatewayMulticastDomainAssociation",
  awscc_ec2_transit_gateway_multicast_group_member:
    "AWS::EC2::TransitGatewayMulticastGroupMember",
  awscc_ec2_transit_gateway_multicast_group_source:
    "AWS::EC2::TransitGatewayMulticastGroupSource",
  awscc_ec2_transit_gateway_peering_attachment:
    "AWS::EC2::TransitGatewayPeeringAttachment",
  awscc_ec2_transit_gateway_vpc_attachment:
    "AWS::EC2::TransitGatewayVpcAttachment",
  awscc_ecr_registry_policy: "AWS::ECR::RegistryPolicy",
  awscc_ecr_replication_configuration: "AWS::ECR::ReplicationConfiguration",
  awscc_ecr_repository: "AWS::ECR::Repository",
  awscc_ecs_capacity_provider: "AWS::ECS::CapacityProvider",
  awscc_ecs_cluster: "AWS::ECS::Cluster",
  awscc_ecs_cluster_capacity_provider_associations:
    "AWS::ECS::ClusterCapacityProviderAssociations",
  awscc_ecs_primary_task_set: "AWS::ECS::PrimaryTaskSet",
  awscc_ecs_service: "AWS::ECS::Service",
  awscc_ecs_task_definition: "AWS::ECS::TaskDefinition",
  awscc_ecs_task_set: "AWS::ECS::TaskSet",
  awscc_efs_access_point: "AWS::EFS::AccessPoint",
  awscc_efs_file_system: "AWS::EFS::FileSystem",
  awscc_efs_mount_target: "AWS::EFS::MountTarget",
  awscc_eks_addon: "AWS::EKS::Addon",
  awscc_eks_fargate_profile: "AWS::EKS::FargateProfile",
  awscc_elasticache_global_replication_group:
    "AWS::ElastiCache::GlobalReplicationGroup",
  awscc_elasticache_user: "AWS::ElastiCache::User",
  awscc_elasticache_user_group: "AWS::ElastiCache::UserGroup",
  awscc_elasticloadbalancingv2_listener:
    "AWS::ElasticLoadBalancingV2::Listener",
  awscc_elasticloadbalancingv2_listener_rule:
    "AWS::ElasticLoadBalancingV2::ListenerRule",
  awscc_emr_studio: "AWS::EMR::Studio",
  awscc_emr_studio_session_mapping: "AWS::EMR::StudioSessionMapping",
  awscc_emrcontainers_virtual_cluster: "AWS::EMRContainers::VirtualCluster",
  awscc_events_api_destination: "AWS::Events::ApiDestination",
  awscc_events_archive: "AWS::Events::Archive",
  awscc_events_connection: "AWS::Events::Connection",
  awscc_eventschemas_registry_policy: "AWS::EventSchemas::RegistryPolicy",
  awscc_finspace_environment: "AWS::FinSpace::Environment",
  awscc_fis_experiment_template: "AWS::FIS::ExperimentTemplate",
  awscc_fms_notification_channel: "AWS::FMS::NotificationChannel",
  awscc_fms_policy: "AWS::FMS::Policy",
  awscc_frauddetector_detector: "AWS::FraudDetector::Detector",
  awscc_frauddetector_entity_type: "AWS::FraudDetector::EntityType",
  awscc_frauddetector_event_type: "AWS::FraudDetector::EventType",
  awscc_frauddetector_label: "AWS::FraudDetector::Label",
  awscc_frauddetector_outcome: "AWS::FraudDetector::Outcome",
  awscc_frauddetector_variable: "AWS::FraudDetector::Variable",
  awscc_gamelift_alias: "AWS::GameLift::Alias",
  awscc_gamelift_fleet: "AWS::GameLift::Fleet",
  awscc_gamelift_game_server_group: "AWS::GameLift::GameServerGroup",
  awscc_globalaccelerator_accelerator: "AWS::GlobalAccelerator::Accelerator",
  awscc_globalaccelerator_endpoint_group:
    "AWS::GlobalAccelerator::EndpointGroup",
  awscc_globalaccelerator_listener: "AWS::GlobalAccelerator::Listener",
  awscc_glue_registry: "AWS::Glue::Registry",
  awscc_glue_schema: "AWS::Glue::Schema",
  awscc_glue_schema_version: "AWS::Glue::SchemaVersion",
  awscc_glue_schema_version_metadata: "AWS::Glue::SchemaVersionMetadata",
  awscc_greengrassv2_component_version: "AWS::GreengrassV2::ComponentVersion",
  awscc_groundstation_config: "AWS::GroundStation::Config",
  awscc_groundstation_dataflow_endpoint_group:
    "AWS::GroundStation::DataflowEndpointGroup",
  awscc_groundstation_mission_profile: "AWS::GroundStation::MissionProfile",
  awscc_healthlake_fhir_datastore: "AWS::HealthLake::FHIRDatastore",
  awscc_iam_oidc_provider: "AWS::IAM::OIDCProvider",
  awscc_iam_saml_provider: "AWS::IAM::SAMLProvider",
  awscc_iam_server_certificate: "AWS::IAM::ServerCertificate",
  awscc_iam_virtual_mfa_device: "AWS::IAM::VirtualMFADevice",
  awscc_imagebuilder_component: "AWS::ImageBuilder::Component",
  awscc_imagebuilder_container_recipe: "AWS::ImageBuilder::ContainerRecipe",
  awscc_imagebuilder_distribution_configuration:
    "AWS::ImageBuilder::DistributionConfiguration",
  awscc_imagebuilder_image: "AWS::ImageBuilder::Image",
  awscc_imagebuilder_image_pipeline: "AWS::ImageBuilder::ImagePipeline",
  awscc_imagebuilder_image_recipe: "AWS::ImageBuilder::ImageRecipe",
  awscc_imagebuilder_infrastructure_configuration:
    "AWS::ImageBuilder::InfrastructureConfiguration",
  awscc_iot_account_audit_configuration: "AWS::IoT::AccountAuditConfiguration",
  awscc_iot_authorizer: "AWS::IoT::Authorizer",
  awscc_iot_certificate: "AWS::IoT::Certificate",
  awscc_iot_custom_metric: "AWS::IoT::CustomMetric",
  awscc_iot_dimension: "AWS::IoT::Dimension",
  awscc_iot_domain_configuration: "AWS::IoT::DomainConfiguration",
  awscc_iot_fleet_metric: "AWS::IoT::FleetMetric",
  awscc_iot_mitigation_action: "AWS::IoT::MitigationAction",
  awscc_iot_provisioning_template: "AWS::IoT::ProvisioningTemplate",
  awscc_iot_scheduled_audit: "AWS::IoT::ScheduledAudit",
  awscc_iot_security_profile: "AWS::IoT::SecurityProfile",
  awscc_iot_topic_rule: "AWS::IoT::TopicRule",
  awscc_iot_topic_rule_destination: "AWS::IoT::TopicRuleDestination",
  awscc_iotcoredeviceadvisor_suite_definition:
    "AWS::IoTCoreDeviceAdvisor::SuiteDefinition",
  awscc_iotevents_detector_model: "AWS::IoTEvents::DetectorModel",
  awscc_iotevents_input: "AWS::IoTEvents::Input",
  awscc_iotfleethub_application: "AWS::IoTFleetHub::Application",
  awscc_iotsitewise_access_policy: "AWS::IoTSiteWise::AccessPolicy",
  awscc_iotsitewise_asset: "AWS::IoTSiteWise::Asset",
  awscc_iotsitewise_asset_model: "AWS::IoTSiteWise::AssetModel",
  awscc_iotsitewise_dashboard: "AWS::IoTSiteWise::Dashboard",
  awscc_iotsitewise_gateway: "AWS::IoTSiteWise::Gateway",
  awscc_iotsitewise_portal: "AWS::IoTSiteWise::Portal",
  awscc_iotsitewise_project: "AWS::IoTSiteWise::Project",
  awscc_iotwireless_destination: "AWS::IoTWireless::Destination",
  awscc_iotwireless_device_profile: "AWS::IoTWireless::DeviceProfile",
  awscc_iotwireless_service_profile: "AWS::IoTWireless::ServiceProfile",
  awscc_iotwireless_task_definition: "AWS::IoTWireless::TaskDefinition",
  awscc_iotwireless_wireless_device: "AWS::IoTWireless::WirelessDevice",
  awscc_iotwireless_wireless_gateway: "AWS::IoTWireless::WirelessGateway",
  awscc_ivs_channel: "AWS::IVS::Channel",
  awscc_ivs_playback_key_pair: "AWS::IVS::PlaybackKeyPair",
  awscc_ivs_recording_configuration: "AWS::IVS::RecordingConfiguration",
  awscc_ivs_stream_key: "AWS::IVS::StreamKey",
  awscc_kendra_data_source: "AWS::Kendra::DataSource",
  awscc_kendra_faq: "AWS::Kendra::Faq",
  awscc_kendra_index: "AWS::Kendra::Index",
  awscc_kinesis_stream: "AWS::Kinesis::Stream",
  awscc_kinesisfirehose_delivery_stream: "AWS::KinesisFirehose::DeliveryStream",
  awscc_kms_alias: "AWS::KMS::Alias",
  awscc_kms_key: "AWS::KMS::Key",
  awscc_kms_replica_key: "AWS::KMS::ReplicaKey",
  awscc_lambda_code_signing_config: "AWS::Lambda::CodeSigningConfig",
  awscc_lambda_event_source_mapping: "AWS::Lambda::EventSourceMapping",
  awscc_lambda_function: "AWS::Lambda::Function",
  awscc_licensemanager_grant: "AWS::LicenseManager::Grant",
  awscc_licensemanager_license: "AWS::LicenseManager::License",
  awscc_location_geofence_collection: "AWS::Location::GeofenceCollection",
  awscc_location_map: "AWS::Location::Map",
  awscc_location_place_index: "AWS::Location::PlaceIndex",
  awscc_location_route_calculator: "AWS::Location::RouteCalculator",
  awscc_location_tracker: "AWS::Location::Tracker",
  awscc_location_tracker_consumer: "AWS::Location::TrackerConsumer",
  awscc_logs_log_group: "AWS::Logs::LogGroup",
  awscc_logs_query_definition: "AWS::Logs::QueryDefinition",
  awscc_logs_resource_policy: "AWS::Logs::ResourcePolicy",
  awscc_lookoutmetrics_alert: "AWS::LookoutMetrics::Alert",
  awscc_lookoutmetrics_anomaly_detector: "AWS::LookoutMetrics::AnomalyDetector",
  awscc_lookoutvision_project: "AWS::LookoutVision::Project",
  awscc_macie_custom_data_identifier: "AWS::Macie::CustomDataIdentifier",
  awscc_macie_findings_filter: "AWS::Macie::FindingsFilter",
  awscc_macie_session: "AWS::Macie::Session",
  awscc_mediaconnect_flow: "AWS::MediaConnect::Flow",
  awscc_mediaconnect_flow_entitlement: "AWS::MediaConnect::FlowEntitlement",
  awscc_mediaconnect_flow_output: "AWS::MediaConnect::FlowOutput",
  awscc_mediaconnect_flow_source: "AWS::MediaConnect::FlowSource",
  awscc_mediaconnect_flow_vpc_interface: "AWS::MediaConnect::FlowVpcInterface",
  awscc_mediapackage_asset: "AWS::MediaPackage::Asset",
  awscc_mediapackage_channel: "AWS::MediaPackage::Channel",
  awscc_mediapackage_origin_endpoint: "AWS::MediaPackage::OriginEndpoint",
  awscc_mediapackage_packaging_configuration:
    "AWS::MediaPackage::PackagingConfiguration",
  awscc_mediapackage_packaging_group: "AWS::MediaPackage::PackagingGroup",
  awscc_mwaa_environment: "AWS::MWAA::Environment",
  awscc_networkfirewall_firewall: "AWS::NetworkFirewall::Firewall",
  awscc_networkfirewall_firewall_policy: "AWS::NetworkFirewall::FirewallPolicy",
  awscc_networkfirewall_logging_configuration:
    "AWS::NetworkFirewall::LoggingConfiguration",
  awscc_networkfirewall_rule_group: "AWS::NetworkFirewall::RuleGroup",
  awscc_networkmanager_customer_gateway_association:
    "AWS::NetworkManager::CustomerGatewayAssociation",
  awscc_networkmanager_device: "AWS::NetworkManager::Device",
  awscc_networkmanager_global_network: "AWS::NetworkManager::GlobalNetwork",
  awscc_networkmanager_link: "AWS::NetworkManager::Link",
  awscc_networkmanager_link_association: "AWS::NetworkManager::LinkAssociation",
  awscc_networkmanager_site: "AWS::NetworkManager::Site",
  awscc_networkmanager_transit_gateway_registration:
    "AWS::NetworkManager::TransitGatewayRegistration",
  awscc_nimblestudio_launch_profile: "AWS::NimbleStudio::LaunchProfile",
  awscc_nimblestudio_streaming_image: "AWS::NimbleStudio::StreamingImage",
  awscc_nimblestudio_studio: "AWS::NimbleStudio::Studio",
  awscc_nimblestudio_studio_component: "AWS::NimbleStudio::StudioComponent",
  awscc_opensearchservice_domain: "AWS::OpenSearchService::Domain",
  awscc_opsworkscm_server: "AWS::OpsWorksCM::Server",
  awscc_qldb_stream: "AWS::QLDB::Stream",
  awscc_quicksight_analysis: "AWS::QuickSight::Analysis",
  awscc_quicksight_dashboard: "AWS::QuickSight::Dashboard",
  awscc_quicksight_data_set: "AWS::QuickSight::DataSet",
  awscc_quicksight_data_source: "AWS::QuickSight::DataSource",
  awscc_quicksight_template: "AWS::QuickSight::Template",
  awscc_quicksight_theme: "AWS::QuickSight::Theme",
  awscc_rds_db_proxy: "AWS::RDS::DBProxy",
  awscc_rds_db_proxy_endpoint: "AWS::RDS::DBProxyEndpoint",
  awscc_rds_db_proxy_target_group: "AWS::RDS::DBProxyTargetGroup",
  awscc_rds_global_cluster: "AWS::RDS::GlobalCluster",
  awscc_redshift_cluster: "AWS::Redshift::Cluster",
  awscc_resourcegroups_group: "AWS::ResourceGroups::Group",
  awscc_robomaker_fleet: "AWS::RoboMaker::Fleet",
  awscc_robomaker_robot: "AWS::RoboMaker::Robot",
  awscc_robomaker_robot_application_version:
    "AWS::RoboMaker::RobotApplicationVersion",
  awscc_robomaker_simulation_application:
    "AWS::RoboMaker::SimulationApplication",
  awscc_robomaker_simulation_application_version:
    "AWS::RoboMaker::SimulationApplicationVersion",
  awscc_route53_dnssec: "AWS::Route53::DNSSEC",
  awscc_route53_health_check: "AWS::Route53::HealthCheck",
  awscc_route53_hosted_zone: "AWS::Route53::HostedZone",
  awscc_route53_key_signing_key: "AWS::Route53::KeySigningKey",
  awscc_route53recoverycontrol_cluster: "AWS::Route53RecoveryControl::Cluster",
  awscc_route53recoverycontrol_control_panel:
    "AWS::Route53RecoveryControl::ControlPanel",
  awscc_route53recoverycontrol_routing_control:
    "AWS::Route53RecoveryControl::RoutingControl",
  awscc_route53recoverycontrol_safety_rule:
    "AWS::Route53RecoveryControl::SafetyRule",
  awscc_route53recoveryreadiness_cell: "AWS::Route53RecoveryReadiness::Cell",
  awscc_route53recoveryreadiness_readiness_check:
    "AWS::Route53RecoveryReadiness::ReadinessCheck",
  awscc_route53recoveryreadiness_recovery_group:
    "AWS::Route53RecoveryReadiness::RecoveryGroup",
  awscc_route53recoveryreadiness_resource_set:
    "AWS::Route53RecoveryReadiness::ResourceSet",
  awscc_route53resolver_firewall_domain_list:
    "AWS::Route53Resolver::FirewallDomainList",
  awscc_route53resolver_firewall_rule_group:
    "AWS::Route53Resolver::FirewallRuleGroup",
  awscc_route53resolver_firewall_rule_group_association:
    "AWS::Route53Resolver::FirewallRuleGroupAssociation",
  awscc_route53resolver_resolver_dnssec_config:
    "AWS::Route53Resolver::ResolverDNSSECConfig",
  awscc_route53resolver_resolver_query_logging_config:
    "AWS::Route53Resolver::ResolverQueryLoggingConfig",
  awscc_route53resolver_resolver_query_logging_config_association:
    "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
  awscc_s3_access_point: "AWS::S3::AccessPoint",
  awscc_s3_multi_region_access_point: "AWS::S3::MultiRegionAccessPoint",
  awscc_s3_multi_region_access_point_policy:
    "AWS::S3::MultiRegionAccessPointPolicy",
  awscc_s3_storage_lens: "AWS::S3::StorageLens",
  awscc_s3objectlambda_access_point: "AWS::S3ObjectLambda::AccessPoint",
  awscc_s3objectlambda_access_point_policy:
    "AWS::S3ObjectLambda::AccessPointPolicy",
  awscc_s3outposts_access_point: "AWS::S3Outposts::AccessPoint",
  awscc_s3outposts_bucket: "AWS::S3Outposts::Bucket",
  awscc_s3outposts_bucket_policy: "AWS::S3Outposts::BucketPolicy",
  awscc_s3outposts_endpoint: "AWS::S3Outposts::Endpoint",
  awscc_sagemaker_app: "AWS::SageMaker::App",
  awscc_sagemaker_app_image_config: "AWS::SageMaker::AppImageConfig",
  awscc_sagemaker_data_quality_job_definition:
    "AWS::SageMaker::DataQualityJobDefinition",
  awscc_sagemaker_device: "AWS::SageMaker::Device",
  awscc_sagemaker_device_fleet: "AWS::SageMaker::DeviceFleet",
  awscc_sagemaker_domain: "AWS::SageMaker::Domain",
  awscc_sagemaker_feature_group: "AWS::SageMaker::FeatureGroup",
  awscc_sagemaker_image: "AWS::SageMaker::Image",
  awscc_sagemaker_image_version: "AWS::SageMaker::ImageVersion",
  awscc_sagemaker_model_bias_job_definition:
    "AWS::SageMaker::ModelBiasJobDefinition",
  awscc_sagemaker_model_explainability_job_definition:
    "AWS::SageMaker::ModelExplainabilityJobDefinition",
  awscc_sagemaker_model_package_group: "AWS::SageMaker::ModelPackageGroup",
  awscc_sagemaker_model_quality_job_definition:
    "AWS::SageMaker::ModelQualityJobDefinition",
  awscc_sagemaker_monitoring_schedule: "AWS::SageMaker::MonitoringSchedule",
  awscc_sagemaker_pipeline: "AWS::SageMaker::Pipeline",
  awscc_sagemaker_project: "AWS::SageMaker::Project",
  awscc_sagemaker_user_profile: "AWS::SageMaker::UserProfile",
  awscc_servicecatalog_cloudformation_provisioned_product:
    "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
  awscc_servicecatalog_service_action: "AWS::ServiceCatalog::ServiceAction",
  awscc_servicecatalog_service_action_association:
    "AWS::ServiceCatalog::ServiceActionAssociation",
  awscc_servicecatalogappregistry_application:
    "AWS::ServiceCatalogAppRegistry::Application",
  awscc_servicecatalogappregistry_attribute_group:
    "AWS::ServiceCatalogAppRegistry::AttributeGroup",
  awscc_servicecatalogappregistry_attribute_group_association:
    "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation",
  awscc_servicecatalogappregistry_resource_association:
    "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
  awscc_ses_configuration_set: "AWS::SES::ConfigurationSet",
  awscc_ses_contact_list: "AWS::SES::ContactList",
  awscc_signer_profile_permission: "AWS::Signer::ProfilePermission",
  awscc_signer_signing_profile: "AWS::Signer::SigningProfile",
  awscc_ssm_association: "AWS::SSM::Association",
  awscc_ssm_document: "AWS::SSM::Document",
  awscc_ssm_resource_data_sync: "AWS::SSM::ResourceDataSync",
  awscc_ssmcontacts_contact: "AWS::SSMContacts::Contact",
  awscc_ssmcontacts_contact_channel: "AWS::SSMContacts::ContactChannel",
  awscc_ssmincidents_replication_set: "AWS::SSMIncidents::ReplicationSet",
  awscc_ssmincidents_response_plan: "AWS::SSMIncidents::ResponsePlan",
  awscc_sso_assignment: "AWS::SSO::Assignment",
  awscc_sso_instance_access_control_attribute_configuration:
    "AWS::SSO::InstanceAccessControlAttributeConfiguration",
  awscc_sso_permission_set: "AWS::SSO::PermissionSet",
  awscc_stepfunctions_state_machine: "AWS::StepFunctions::StateMachine",
  awscc_synthetics_canary: "AWS::Synthetics::Canary",
  awscc_timestream_database: "AWS::Timestream::Database",
  awscc_timestream_table: "AWS::Timestream::Table",
  awscc_wafv2_ip_set: "AWS::WAFv2::IPSet",
  awscc_wafv2_logging_configuration: "AWS::WAFv2::LoggingConfiguration",
  awscc_wafv2_regex_pattern_set: "AWS::WAFv2::RegexPatternSet",
  awscc_wafv2_rule_group: "AWS::WAFv2::RuleGroup",
  awscc_wafv2_web_acl: "AWS::WAFv2::WebACL",
  awscc_wafv2_web_acl_association: "AWS::WAFv2::WebACLAssociation",
  awscc_workspaces_connection_alias: "AWS::WorkSpaces::ConnectionAlias",
  awscc_xray_group: "AWS::XRay::Group",
  awscc_xray_sampling_rule: "AWS::XRay::SamplingRule",
};
