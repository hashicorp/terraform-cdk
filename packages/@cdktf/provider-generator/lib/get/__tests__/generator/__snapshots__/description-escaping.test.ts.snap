// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`broken attribute description comments 1`] = `
"// https://www.terraform.io/docs/providers/google/r/description_escaping.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface DescriptionEscapingConfig extends cdktf.TerraformMetaArguments {
  /**
  * The resource name of the Cloud KMS CryptoKey to be used to protect access 
 to messages published on this topic. Your project's PubSub service account 
 ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com') must have 
 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature. 
 The expected format is 'projects/*\\\\/locations/*\\\\/keyRings/*\\\\/cryptoKeys/*'
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/google/r/description_escaping.html#broken_comments DescriptionEscaping#broken_comments}
  */
  readonly brokenComments: boolean | cdktf.IResolvable;
}

/**
* Represents a {@link https://www.terraform.io/docs/providers/google/r/description_escaping.html description_escaping}
*/
export class DescriptionEscaping extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType: string = \\"description_escaping\\";

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://www.terraform.io/docs/providers/google/r/description_escaping.html description_escaping} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options DescriptionEscapingConfig
  */
  public constructor(scope: Construct, id: string, config: DescriptionEscapingConfig) {
    super(scope, id, {
      terraformResourceType: 'description_escaping',
      terraformGeneratorMetadata: {
        providerName: 'google'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._brokenComments = config.brokenComments;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // broken_comments - computed: false, optional: false, required: true
  private _brokenComments?: boolean | cdktf.IResolvable; 
  public get brokenComments() {
    return this.getBooleanAttribute('broken_comments') as any;
  }
  public set brokenComments(value: boolean | cdktf.IResolvable) {
    this._brokenComments = value;
  }
  // Temporarily expose input value. Use with caution.
  public get brokenCommentsInput() {
    return this._brokenComments;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      broken_comments: cdktf.booleanToTerraform(this._brokenComments),
    };
  }
}
"
`;

exports[`malformed code blocks which break in python rst 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/code_blocks.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface CodeBlocksConfig extends cdktf.TerraformMetaArguments {
  /**
  * Here comes a code block \`\`\`foo.bar\`\`\` and here is more text.
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/code_blocks.html#with_code_block CodeBlocks#with_code_block}
  */
  readonly withCodeBlock: boolean | cdktf.IResolvable;
}

/**
* Represents a {@link https://www.terraform.io/docs/providers/aws/r/code_blocks.html code_blocks}
*/
export class CodeBlocks extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType: string = \\"code_blocks\\";

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://www.terraform.io/docs/providers/aws/r/code_blocks.html code_blocks} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options CodeBlocksConfig
  */
  public constructor(scope: Construct, id: string, config: CodeBlocksConfig) {
    super(scope, id, {
      terraformResourceType: 'code_blocks',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._withCodeBlock = config.withCodeBlock;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // with_code_block - computed: false, optional: false, required: true
  private _withCodeBlock?: boolean | cdktf.IResolvable; 
  public get withCodeBlock() {
    return this.getBooleanAttribute('with_code_block') as any;
  }
  public set withCodeBlock(value: boolean | cdktf.IResolvable) {
    this._withCodeBlock = value;
  }
  // Temporarily expose input value. Use with caution.
  public get withCodeBlockInput() {
    return this._withCodeBlock;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      with_code_block: cdktf.booleanToTerraform(this._withCodeBlock),
    };
  }
}
"
`;
