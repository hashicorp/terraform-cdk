// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`any type 1`] = `
"{
  "variable": {
    "test-variable": {
      "type": "any"
    }
  }
}"
`;

exports[`bool type 1`] = `
"{
  "variable": {
    "test-variable": {
      "type": "bool"
    }
  }
}"
`;

exports[`collection type 1`] = `
"{
  "variable": {
    "test-variable": {
      "type": "list(string)"
    }
  }
}"
`;

exports[`default value 1`] = `
"{
  "variable": {
    "test-variable": {
      "default": "my-val"
    }
  }
}"
`;

exports[`description 1`] = `
"{
  "variable": {
    "test-variable": {
      "description": "A Test Variable"
    }
  }
}"
`;

exports[`map collection type 1`] = `
"{
  "variable": {
    "test-variable": {
      "type": "map(bool)"
    }
  }
}"
`;

exports[`nullable variable 1`] = `
"{
  "variable": {
    "test-variable": {
      "nullable": true,
      "type": "string"
    }
  }
}"
`;

exports[`number type 1`] = `
"{
  "variable": {
    "test-variable": {
      "type": "number"
    }
  }
}"
`;

exports[`object type 1`] = `
"{
  "variable": {
    "test-variable": {
      "default": {
        "internal": 8300,
        "protocol": "tcp"
      },
      "type": "object({internal=number, protocol=string})"
    }
  }
}"
`;

exports[`reference 1`] = `
"{
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "test-resource": {
        "name": "\${var.test-variable}"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  },
  "variable": {
    "test-variable": {
      "type": "string"
    }
  }
}"
`;

exports[`sensitive variable 1`] = `
"{
  "variable": {
    "test-variable": {
      "sensitive": true,
      "type": "string"
    }
  }
}"
`;

exports[`set collection type 1`] = `
"{
  "variable": {
    "test-variable": {
      "type": "set(number)"
    }
  }
}"
`;

exports[`string type 1`] = `
"{
  "variable": {
    "test-variable": {
      "type": "string"
    }
  }
}"
`;

exports[`tuple type 1`] = `
"{
  "variable": {
    "test-variable": {
      "type": "tuple(bool, list(number))"
    }
  }
}"
`;

exports[`validation block variable 1`] = `
"{
  "variable": {
    "test-variable": {
      "type": "string",
      "validation": [
        {
          "condition": "\${can(regex(\\"^ami-\\", \\"ami-test\\"))}",
          "error_message": "Validation failed.."
        }
      ]
    }
  }
}"
`;

exports[`validation block variable self reference 1`] = `
"{
  "variable": {
    "test-variable": {
      "type": "string",
      "validation": [
        {
          "condition": "\${length(var.test-variable)} > 4 && \${substr(var.test-variable, 0, 4)} == \\"ami-\\"",
          "error_message": "The image_id value must be a valid AMI id, starting with \\"ami-\\"."
        }
      ]
    }
  }
}"
`;

exports[`variable used in template string 1`] = `
"{
  "output": {
    "test-output": {
      "value": "The value is \${var.test-variable}"
    }
  },
  "variable": {
    "test-variable": {
      "type": "string"
    }
  }
}"
`;

exports[`variable with variable default 1`] = `
"{
  "variable": {
    "other-variable": {
      "default": "\${var.test-variable}",
      "type": "string"
    },
    "test-variable": {
      "type": "string"
    }
  }
}"
`;
