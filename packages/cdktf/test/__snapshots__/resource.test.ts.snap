// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`dependent resource 1`] = `
"{
  "data": {
    "test_data_source": {
      "data_source": {
        "name": "foo"
      }
    }
  },
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "resource": {
        "depends_on": [
          "data.test_data_source.data_source"
        ],
        "name": "foo"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`do not change capitalization of arbritary nested types 1`] = `
"{
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "test": {
        "name": "bar",
        "nested_type": {
          "Tag": "isDowncased"
        }
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`do not change capitalization of tags 1`] = `
"{
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "test": {
        "name": "bar",
        "tags": {
          "Tag": "isWorking"
        }
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`includes import block when import is present 1`] = `
"{
  "import": [
    {
      "id": "testId",
      "to": "test_resource.test"
    }
  ],
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "test": {
        "name": "foo"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`includes import block when import is present, provider given 1`] = `
"{
  "import": [
    {
      "id": "testId",
      "provider": "test.foo",
      "to": "test_resource.test"
    }
  ],
  "provider": {
    "test": [
      {
        "alias": "foo"
      }
    ]
  },
  "resource": {
    "test_resource": {
      "test": {
        "name": "foo"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`maintains the same order of provisioner 1`] = `
"{
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "simple": {
        "name": "foo",
        "provisioner": [
          {
            "local-exec": {
              "command": "echo 'hello' > world.txt"
            }
          },
          {
            "local-exec": {
              "command": "echo 'hello' > world1.txt"
            }
          },
          {
            "local-exec": {
              "command": "echo 'hello' > world2.txt"
            }
          }
        ]
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`minimal configuration 1`] = `
"{
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "test": {
        "name": "foo"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`moves resource to a lesser nesting from contained construct 1`] = `
"{
  "moved": {
    "from": "test_resource.construct_nested-construct_simple_2C3755B0",
    "to": "test_resource.simple"
  },
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "simple": {
        "name": "foo",
        "provisioner": [
          {
            "local-exec": {
              "command": "echo 'hello' > world.txt"
            }
          },
          {
            "local-exec": {
              "command": "echo 'hello' > world1.txt"
            }
          },
          {
            "local-exec": {
              "command": "echo 'hello' > world2.txt"
            }
          }
        ]
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`moves resource to be in composition with foreach using complex iterator 1`] = `
"{
  "moved": {
    "from": "test_resource.simple",
    "to": "test_resource.simple-foreach[\\"simple-foreach-one\\"]"
  },
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "simple-foreach": {
        "for_each": {
          "simple-foreach-one": {
            "name": "foo-one",
            "tags": {
              "tag1": "tag1"
            }
          },
          "simple-foreach-two": {
            "name": "foo-two",
            "tags": {
              "tag2": "tag2"
            }
          }
        },
        "name": "\${each.value.name}",
        "tags": "\${each.value.tags}"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`moves resource to be in composition with foreach using list iterator 1`] = `
"{
  "moved": {
    "from": "test_resource.simple",
    "to": "test_resource.simple-foreach[\\"foo-one\\"]"
  },
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "simple-foreach": {
        "for_each": "\${toset([\\"foo-one\\", \\"foo-two\\"])}",
        "name": "\${each.value}",
        "provisioner": [
          {
            "local-exec": {
              "command": "echo 'hello' > world.txt"
            }
          },
          {
            "local-exec": {
              "command": "echo 'hello' > world1.txt"
            }
          },
          {
            "local-exec": {
              "command": "echo 'hello' > world2.txt"
            }
          }
        ]
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`moves resource to greater nesting in contained construct 1`] = `
"{
  "moved": {
    "from": "test_resource.simple",
    "to": "test_resource.construct_nested-construct_simple_2C3755B0"
  },
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "construct_nested-construct_simple_2C3755B0": {
        "name": "foo",
        "provisioner": [
          {
            "local-exec": {
              "command": "echo 'hello' > world.txt"
            }
          },
          {
            "local-exec": {
              "command": "echo 'hello' > world1.txt"
            }
          },
          {
            "local-exec": {
              "command": "echo 'hello' > world2.txt"
            }
          }
        ]
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`moves resource to resource with rename 1`] = `
"{
  "moved": {
    "from": "test_resource.simple",
    "to": "test_resource.simple-rename"
  },
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "simple-rename": {
        "name": "foo",
        "provisioner": [
          {
            "local-exec": {
              "command": "echo 'hello' > world.txt"
            }
          },
          {
            "local-exec": {
              "command": "echo 'hello' > world1.txt"
            }
          },
          {
            "local-exec": {
              "command": "echo 'hello' > world2.txt"
            }
          }
        ]
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`number[] attributes 1`] = `
"{
  "output": {
    "number-list": {
      "value": "\${test_resource.resource.number_list_value}"
    }
  },
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "resource": {
        "name": "foo"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`numeric attributes 1`] = `
"{
  "output": {
    "combined-string-number": {
      "value": "\${test_resource.resource.string_value} / 23.324 / \${test_resource.resource.numeric_value} / 42"
    }
  },
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "resource": {
        "name": "foo"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`provider setter 1`] = `
"{
  "provider": {
    "test": [
      {
        "access_key": "1"
      }
    ]
  },
  "resource": {
    "test_resource": {
      "test": {
        "name": "bar",
        "provider": "test"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`serialize list interpolation 1`] = `
"{
  "provider": {
    "other": [
      {
      }
    ],
    "test": [
      {
      }
    ]
  },
  "resource": {
    "other_test_resource": {
      "othertest": {
      }
    },
    "test_resource": {
      "test": {
        "name": "bar",
        "names": "\${other_test_resource.othertest.names}"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "other": {
        "version": "~> 2.0"
      },
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`supports file provisioner 1`] = `
"{
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "content": {
        "name": "foo",
        "provisioner": [
          {
            "file": {
              "content": "my-content",
              "destination": "hello.txt"
            }
          }
        ]
      },
      "source": {
        "name": "bar",
        "provisioner": [
          {
            "file": {
              "destination": "world.txt",
              "source": "my.txt"
            }
          }
        ]
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`supports local-exec provisioner 1`] = `
"{
  "provider": {
    "test": [
      {
      }
    ]
  },
  "resource": {
    "test_resource": {
      "advanced": {
        "name": "foo",
        "provisioner": [
          {
            "local-exec": {
              "command": "echo \\"hello $person\\" > greeting.txt",
              "environment": {
                "person": "daniel"
              },
              "interpreter": [
                "/bin/bash",
                "-c"
              ],
              "working_dir": "/tmp"
            }
          }
        ]
      },
      "simple": {
        "name": "foo",
        "provisioner": [
          {
            "local-exec": {
              "command": "echo 'hello' > world.txt"
            }
          }
        ]
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`with complex computed list 1`] = `
"{
  "provider": {
    "other": [
      {
      }
    ],
    "test": [
      {
      }
    ]
  },
  "resource": {
    "other_test_resource": {
      "othertest": {
      }
    },
    "test_resource": {
      "test": {
        "name": "\${other_test_resource.othertest.complex_computed_list[0].id}"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "other": {
        "version": "~> 2.0"
      },
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;

exports[`with provider alias 1`] = `
"{
  "provider": {
    "test": [
      {
        "access_key": "1"
      },
      {
        "access_key": "123",
        "alias": "foo"
      }
    ]
  },
  "resource": {
    "test_resource": {
      "test": {
        "name": "bar",
        "provider": "test.foo"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "test": {
        "version": "~> 2.0"
      }
    }
  }
}"
`;
