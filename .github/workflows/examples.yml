name: Examples Integration
on:
  pull_request:
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "website/**"
      - "cdk.tf/**"
      - "tools/update-github-project-board/**"

concurrency:
  group: examples-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build-example-matrix:
    runs-on: ubuntu-latest
    outputs:
      examples: ${{ steps.set-examples.outputs.examples }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: set-examples
        run: |
          tfDefault=$(cat .terraform.versions.json | jq -r '.default')
          examples=$(npx lerna list --scope "@examples/*" | jq  -R -s -c --arg tfDefault "${tfDefault}" 'split("\n") | map(select(length > 0)) | { target: values, terraform: [$tfDefault]}')
          echo $examples
          echo "examples=$examples" >> $GITHUB_OUTPUT

  examples:
    needs: build-example-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.build-example-matrix.outputs.examples)}}
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: installing dependencies
        run: |
          yarn install
      - name: compile
        run: |
          yarn lint:examples
          yarn build
        env:
          TERRAFORM_BINARY_NAME: "terraform${{ matrix.terraform }}"
      - name: create bundle
        run: yarn package
      - name: examples integration tests
        run: test/run-against-dist node tools/build-example.js ${TEST_TARGET}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          TEST_TARGET: "${{ matrix.target }}"
          TERRAFORM_BINARY_NAME: "terraform${{ matrix.terraform }}"
          MAVEN_OPTS: "-Xmx3G"
          TF_PLUGIN_CACHE_DIR: ${{ steps.yarn-cache-dir-path.outputs.dir }}/terraform-plugins
