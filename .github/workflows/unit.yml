name: Unit Tests
on:
  pull_request:
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "website/**"
      - "cdk.tf/**"
      - "tools/update-github-project-board/**"
  workflow_call:
    inputs:
      concurrency_group_prefix:
        default: pr
        required: false
        type: string

concurrency:
  group: ${{ inputs.concurrency_group_prefix }}-unit-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build-test-matrix:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.build-test-matrix.outputs.tests }}
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    steps:
      - uses: actions/checkout@v2
      - id: build-test-matrix
        run: |
          ./tools/build-unit-test-matrix.sh

  unit-tests:
    needs: build-test-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.build-test-matrix.outputs.tests)}}
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: installing dependencies
        run: |
          yarn install
      - name: compile
        run: |
          tools/align-version.sh
          yarn build
          yarn package
      - name: test
        run: |
          npx lerna run --scope '${{ matrix.target }}' test:ci
        env:
          TERRAFORM_BINARY_NAME: "terraform${{ matrix.terraform }}"
