name: Unit Tests
on:
  pull_request:
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "website/**"
      - "tools/update-github-project-board/**"

jobs:
  build-tf-matrix:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.build-tf-versions.outputs.versions }}
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    steps:
      - uses: actions/checkout@v2
      - id: build-tf-versions
        run: |
          versions=$(cat .terraform.versions.json | jq -c '.tested | { terraform: . }')
          echo "::set-output name=versions::$versions"

  unit-tests:
    needs: build-tf-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.build-tf-matrix.outputs.versions)}}
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"

    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: installing dependencies
        run: |
          yarn install
      - name: compile
        run: |
          tools/align-version.sh
          yarn build
          yarn package
        env:
          TERRAFORM_BINARY_NAME: "terraform${{ matrix.terraform }}"
      - name: test
        run: |
          yarn test:ci
        env:
          TERRAFORM_BINARY_NAME: "terraform${{ matrix.terraform }}"
