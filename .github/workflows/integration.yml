name: Integration Tests
on:
  workflow_call:
    inputs:
      skip_setup:
        description: Skip the version and build step and use parent
        default: false
        required: false
        type: boolean
      concurrency_group_prefix:
        default: pr
        required: false
        type: string

concurrency:
  group: ${{ inputs.concurrency_group_prefix }}-integration-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  prepare-integration-tests:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.build-test-matrix.outputs.tests }}
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - name: "Add Git safe.directory" # Go 1.18+ started embedding repo info in the build and e.g. building @cdktf/hcl2json fails without this
        run: git config --global --add safe.directory /__w/terraform-cdk/terraform-cdk
      - name: ensure correct user
        run: chown -R root /__w/terraform-cdk
      - name: Get yarn cache directory path
        id: global-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        id: global-cache # use this to check for `cache-hit` (`steps.global-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.global-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-integration-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: install dependencies
        run: yarn install --frozen-lockfile --prefer-offline
      - name: set version
        if: ${{ !inputs.skip_setup }}
        run: tools/align-version.sh "-dev.$GITHUB_RUN_ID"
      - name: build and package
        if: ${{ !inputs.skip_setup }}
        run: |
          yarn build
          yarn package
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          TF_PLUGIN_CACHE_DIR: ${{ steps.global-cache-dir-path.outputs.dir }}/terraform-plugins
          GOCACHE: ${{ steps.global-cache-dir-path.outputs.dir }}/go-cache
      - name: Upload dist
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        if: ${{ !inputs.skip_setup }}
        with:
          name: dist
          path: dist
      - name: Upload edge-provider bindings
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        if: ${{ !inputs.skip_setup }}
        with:
          name: edge-provider-bindings
          path: packages/@cdktf/provider-generator/edge-provider-bindings
      - name: installing test dependencies
        run: |
          cd test && yarn install --frozen-lockfile --prefer-offline
      - id: build-test-matrix
        run: |
          ./tools/build-test-matrix.sh

  linux_integration:
    needs: prepare-integration-tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.prepare-integration-tests.outputs.tests)}}
      max-parallel: 30 # too many in parallel will give HTTP 429 errors from GH when checking out the source for example
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"
      TERRAFORM_VERSION: ${{ matrix.terraform }}
      GITHUB_API_TOKEN_CDKTF: ${{ secrets.GITHUB_TOKEN }}
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - name: Get yarn cache directory path
        id: global-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: ensure correct user
        run: chown -R root /__w/terraform-cdk
      - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        id: global-cache # use this to check for `cache-hit` (`steps.global-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.global-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-integration-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Download dist
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
        with:
          name: dist
          path: dist
      - name: Download edge-provider bindings
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
        with:
          name: edge-provider-bindings
          path: test/edge-provider-bindings
      - name: install test dependencies
        run: cd test && yarn
      - name: integration tests
        run: cd test && ./run-against-dist npx jest ${TEST_TARGET}
        env:
          TEST_TARGET: ${{ matrix.target }}
          TERRAFORM_CLOUD_TOKEN: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
          TERRAFORM_BINARY_NAME: "terraform${{ matrix.terraform }}"
          NODE_OPTIONS: "--max-old-space-size=7168"
          TF_PLUGIN_CACHE_DIR: ${{ steps.global-cache-dir-path.outputs.dir }}/terraform-plugins
          GOCACHE: ${{ steps.global-cache-dir-path.outputs.dir }}/go-cache

  windows_integration:
    needs: prepare-integration-tests
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.prepare-integration-tests.outputs.tests)}}
      max-parallel: 30 # too many in parallel will give HTTP 429 errors from GH when checking out the source for example
    env:
      CHECKPOINT_DISABLE: "1"
      TERRAFORM_VERSION: ${{ matrix.terraform }}
      GITHUB_API_TOKEN_CDKTF: ${{ secrets.GITHUB_TOKEN }}
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - name: Get yarn cache directory path
        id: global-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
        shell: bash
      - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        id: global-cache # use this to check for `cache-hit` (`steps.global-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.global-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-integration-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1
        with:
          terraform_wrapper: false
          terraform_version: ${{ matrix.terraform }}
      - name: Install pipenv
        run: pip install pipenv
      - name: Install Go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753
        with:
          go-version: 1.18.x
          cache: false # This is disabled because we don't have a go.sum file and setup-go expects it to use caching. Thus, caching is always broken anyways
      - name: Download dist
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
        with:
          name: dist
          path: dist
      - name: Download edge-provider bindings
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
        with:
          name: edge-provider-bindings
          path: test/edge-provider-bindings
      # tmp fix for https://github.com/npm/cli/issues/4980
      - name: update npm
        run: npm install -g npm@8.12.1
      - name: install test dependencies
        run: cd test && yarn
      - name: integration tests
        run: cd test && ./run-against-dist.bat "npx jest --ci ${env:TEST_TARGET}"
        env:
          TEST_TARGET: ${{ matrix.target }}
          TERRAFORM_CLOUD_TOKEN: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
          NODE_OPTIONS: "--max-old-space-size=7168"
          TF_PLUGIN_CACHE_DIR: ${{ steps.global-cache-dir-path.outputs.dir }}/terraform-plugins
          GOCACHE: ${{ steps.global-cache-dir-path.outputs.dir }}/go-cache
