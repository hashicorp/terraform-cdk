name: Integration Tests
on:
  workflow_call:
    inputs:
      skip_setup:
        description: Skip the version and build step and use parent
        default: false
        required: false
        type: boolean
      concurrency_group_prefix:
        default: pr
        required: false
        type: string

concurrency:
  group: ${{ inputs.concurrency_group_prefix }}-integration-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  prepare-integration-tests:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.build-test-matrix.outputs.tests }}
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: "Add Git safe.directory" # Go 1.18+ started embedding repo info in the build and e.g. building @cdktf/hcl2json fails without this
        run: git config --global --add safe.directory /__w/terraform-cdk/terraform-cdk
      - name: ensure correct user
        run: chown -R root /__w/terraform-cdk
      # Setup caches for yarn, and go
      - name: Get cache directory paths
        id: global-cache-dir-path
        run: |
          echo "yarn=$(yarn cache dir)" >> $GITHUB_OUTPUT
          mkdir -p /usr/local/share/.cache/go
          echo "go=/usr/local/share/.cache/go" >> $GITHUB_OUTPUT
      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.yarn }}
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-integration
          restore-keys: |
            yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-
            yarn-${{ runner.os }}-
      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.go }}
          key: go-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-integration
          restore-keys: |
            go-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-
            go-${{ runner.os }}-
      - name: install dependencies
        run: yarn install --frozen-lockfile --prefer-offline
      - name: set version
        if: ${{ !inputs.skip_setup }}
        run: tools/align-version.sh "-dev.$GITHUB_RUN_ID"
      - name: build and package
        if: ${{ !inputs.skip_setup }}
        run: |
          yarn build
          yarn package
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          GOCACHE: ${{ steps.global-cache-dir-path.outputs.go }}
      - name: Upload dist
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        if: ${{ !inputs.skip_setup }}
        with:
          name: dist
          path: dist
      - name: Upload edge-provider bindings
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        if: ${{ !inputs.skip_setup }}
        with:
          name: edge-provider-bindings
          path: packages/@cdktf/provider-generator/edge-provider-bindings
      - name: installing test dependencies
        run: |
          cd test && yarn install --frozen-lockfile --prefer-offline
      - id: build-test-matrix
        run: |
          ./tools/build-test-matrix.sh

  linux_integration:
    needs: prepare-integration-tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.prepare-integration-tests.outputs.tests)}}
      max-parallel: 30 # too many in parallel will give HTTP 429 errors from GH when checking out the source for example
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"
      TERRAFORM_VERSION: ${{ matrix.terraform }}
      GITHUB_API_TOKEN_CDKTF: ${{ secrets.GITHUB_TOKEN }}
      SYNTH_HCL_OUTPUT: ${{ matrix.hclOutput }}
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: ensure correct user
        run: chown -R root /__w/terraform-cdk
      # Setup caches for yarn, terraform, and go
      - name: Get cache directory paths
        id: global-cache-dir-path
        run: |
          echo "yarn=$(yarn cache dir)" >> $GITHUB_OUTPUT
          mkdir -p /usr/local/share/.cache/terraform
          echo "terraform=/usr/local/share/.cache/terraform" >> $GITHUB_OUTPUT
          mkdir -p /usr/local/share/.cache/go
          echo "go=/usr/local/share/.cache/go" >> $GITHUB_OUTPUT
      # only restore as an individual cache as per matrix explodes our cache usage
      - uses: actions/cache/restore@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.yarn }}
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-integration
          restore-keys: |
            yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-
            yarn-${{ runner.os }}-
      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.terraform }}
          # put matrix before integration to not restore caches from other sibling matrix jobs
          key: terraform-${{ runner.os }}-${{ matrix.terraform }}-matrix-integration-${{ matrix.target }}
          restore-keys: |
            terraform-${{ runner.os }}-${{ matrix.terraform }}-
      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.go }}
          # put matrix before integration to not restore caches from other sibling matrix jobs
          key: go-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-matrix-integration-${{ matrix.target }}
          restore-keys: |
            go-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-integration
            go-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
            go-${{ runner.os }}-
      - name: Download dist
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: dist
          path: dist
      - name: Download edge-provider bindings
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: edge-provider-bindings
          path: test/edge-provider-bindings
      - name: install test dependencies
        run: cd test && yarn
      - name: integration tests
        run: cd test && ./run-against-dist npx jest ${TEST_TARGET}
        env:
          TEST_TARGET: ${{ matrix.target }}
          TERRAFORM_CLOUD_TOKEN: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
          TERRAFORM_BINARY_NAME: "terraform${{ matrix.terraform }}"
          NODE_OPTIONS: "--max-old-space-size=7168"
          TF_PLUGIN_CACHE_DIR: ${{ steps.global-cache-dir-path.outputs.terraform }}
          GOCACHE: ${{ steps.global-cache-dir-path.outputs.go }}

  windows_integration:
    needs: prepare-integration-tests
    runs-on: windows-2022
    if: false # Ignore windows integration tests for release atm
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.prepare-integration-tests.outputs.tests)}}
      max-parallel: 30 # too many in parallel will give HTTP 429 errors from GH when checking out the source for example
    env:
      CHECKPOINT_DISABLE: "1"
      TERRAFORM_VERSION: ${{ matrix.terraform }}
      GITHUB_API_TOKEN_CDKTF: ${{ secrets.GITHUB_TOKEN }}
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      # Setup caches for yarn, terraform, and go
      - name: Get cache directory paths
        id: global-cache-dir-path
        shell: bash
        run: |
          echo "yarn=$(yarn cache dir)" >> $GITHUB_OUTPUT
          mkdir -p /usr/local/share/.cache/terraform
          echo "terraform=/usr/local/share/.cache/terraform" >> $GITHUB_OUTPUT
          mkdir -p /usr/local/share/.cache/go
          echo "go=/usr/local/share/.cache/go" >> $GITHUB_OUTPUT
      # only restore as an individual cache as per matrix explodes our cache usage
      - uses: actions/cache/restore@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.yarn }}
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-integration
          restore-keys: |
            yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-
            yarn-${{ runner.os }}-
      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.terraform }}
          # put matrix before integration to not restore caches from other sibling matrix jobs
          key: terraform-${{ runner.os }}-${{ matrix.terraform }}-matrix-integration-${{ matrix.target }}
          restore-keys: |
            terraform-${{ runner.os }}-${{ matrix.terraform }}-
      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.go }}
          # put matrix before integration to not restore caches from other sibling matrix jobs
          key: go-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-matrix-integration-${{ matrix.target }}
          restore-keys: |
            go-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-integration
            go-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-
            go-${{ runner.os }}-
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1
        with:
          terraform_wrapper: false
          terraform_version: ${{ matrix.terraform }}
      - name: Install pipenv
        run: pip install pipenv
      - name: Install Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: 1.18.x
          cache: false # This is disabled because we don't have a go.sum file and setup-go expects it to use caching. Thus, caching is always broken anyways
      - name: Download dist
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: dist
          path: dist
      - name: Download edge-provider bindings
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: edge-provider-bindings
          path: test/edge-provider-bindings
      # tmp fix for https://github.com/npm/cli/issues/4980
      - name: update npm
        run: npm install -g npm@8.12.1
      - name: install test dependencies
        run: cd test && yarn
      - name: integration tests
        run: cd test && ./run-against-dist.bat "npx jest --ci ${env:TEST_TARGET}"
        env:
          TEST_TARGET: ${{ matrix.target }}
          TERRAFORM_CLOUD_TOKEN: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
          NODE_OPTIONS: "--max-old-space-size=7168"
          TF_PLUGIN_CACHE_DIR: ${{ steps.global-cache-dir-path.outputs.terraform }}
          GOCACHE: ${{ steps.global-cache-dir-path.outputs.go }}
