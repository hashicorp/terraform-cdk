on:
  workflow_call:
    inputs:
      repository:
        description: "Repository to convert, e.g. 'terraform-providers/terraform-provider-aws'"
        required: false
        default: "${{ github.repository }}"
        type: string
      branch:
        description: "Branch to convert, e.g. 'main'"
        required: false
        default: "main"
        type: string
      providerFqn:
        description: "Provider FQN to convert, e.g. hashicorp/aws"
        required: true
        type: string
      additionalProviderFqns:
        description: "Additional provider FQNs that are required to convert because they are used in examples, e.g. 'hashicorp/azurerm,hashicorp/google'"
        required: false
        type: string
        default: ""
      maxRunners:
        description: "Maximum number of parallel runners to use"
        required: false
        default: 10
        type: number
      gitUser:
        description: "Git user to commit as"
        required: false
        default: "team-tf-cdk"
        type: string
      gitEmail:
        description: "Git email to commit as"
        required: false
        default: "github-team-tf-cdk@hashicorp.com"
        type: string
      parallelFileConversions:
        description: "Number of files to convert in parallel"
        required: false
        default: 1
        type: number
      parallelConversionsPerDocument:
        description: "Number of conversions to run in parallel per document"
        required: false
        default: 3
        type: number
      languages:
        description: "Languages to convert to as comma-separated list, e.g. 'typescript,python'"
        required: false
        default: "typescript,python"
        type: string
      files:
        description: "Files to convert as comma-separated glob list, e.g. '*/ec2_*.html.markdown,*/s3_*.html.markdown'"
        required: false
        default: "**/*"
        type: string
      cdktfRegistryDocsVersion:
        description: "Version of cdktf-registry-docs to use"
        required: false
        default: "1.16.1"
        type: string
    secrets:
      GH_PR_TOKEN:
        description: "GitHub token to create PRs with"
        required: true
    outputs:
      prUrl:
        description: "URL of the created PR"
        value: ${{ jobs.cdktfDocsCreatePR.outputs.prUrl }}

name: CDKTF Provider Documentation
jobs:
  cdktfDocsSetupBranch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.branch }}
          token: ${{ secrets.GH_PR_TOKEN }}

      - run: |
          git config --global user.email "${{ inputs.gitEmail }}"
          git config --global user.name "${{ inputs.gitUser }}"
          git checkout -b d-cdktf-docs-${{ github.run_id }}-${{ github.run_number }}
          git push origin d-cdktf-docs-${{ github.run_id }}-${{ github.run_number }}

  cdktfDocsMatrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.branch }}
          token: ${{ secrets.GH_PR_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
        with:
          node-version: "18.x"

      - name: Install cdktf-registry-docs
        run: npm install -g cdktf-registry-docs@${{ inputs.cdktfRegistryDocsVersion }}

      - name: Create plugin cache
        run: |
          mkdir -p ${{ steps.global-cache-dir-path.outputs.dir }}/terraform-plugins

      - id: set-matrix
        run: |
          matrix=$(cdktf-registry-docs ci-matrix --max-runners=${{ inputs.maxRunners }} --files='${{ inputs.files }}' .)
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
        env:
          TF_PLUGIN_CACHE_DIR: ${{ steps.global-cache-dir-path.outputs.dir }}/terraform-plugins

  cdktfDocsConvert:
    needs:
      - cdktfDocsSetupBranch
      - cdktfDocsMatrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        files: ${{fromJSON(needs.cdktfDocsMatrix.outputs.matrix)}}
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.branch }}
          token: ${{ secrets.GH_PR_TOKEN }}

      - run: |
          git config --global user.email "${{ inputs.gitEmail }}"
          git config --global user.name "${{ inputs.gitUser }}"
          git config --global --add safe.directory $(pwd)

      - name: Setup Node.js
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
        with:
          node-version: "18.x"

      - name: Install cdktf-registry-docs
        run: npm install -g cdktf-registry-docs@${{ inputs.cdktfRegistryDocsVersion }}

      - name: Run conversion without additional providers
        if: inputs.additionalProviderFqns == ''
        run: |
          cdktf-registry-docs convert \
            --files='${{ matrix.files }}' \
            --languages='${{inputs.languages}}' \
            --parallel-file-conversions=${{ inputs.parallelFileConversions }} \
            --parallel-conversions-per-document=${{ inputs.parallelConversionsPerDocument }}\
            --provider-from-registry="${{ inputs.providerFqn }}" \
            .
        env:
          TF_PLUGIN_CACHE_DIR: ${{ steps.global-cache-dir-path.outputs.dir }}/terraform-plugins

      - name: Run conversion with additional providers
        if: inputs.additionalProviderFqns != ''
        run: |
          cdktf-registry-docs convert \
            --files='${{ matrix.files }}' \
            --languages='${{inputs.languages}}' \
            --parallel-file-conversions=${{ inputs.parallelFileConversions }} \
            --parallel-conversions-per-document=${{ inputs.parallelConversionsPerDocument }}\
            --provider-from-registry="${{ inputs.providerFqn }}" \
            --additional-provider-requirements="${{ inputs.additionalProviderFqns }}" \
            .
        env:
          TF_PLUGIN_CACHE_DIR: ${{ steps.global-cache-dir-path.outputs.dir }}/terraform-plugins

      - name: Find changes
        id: changes
        run: |-
          git add .
          git diff --staged --patch --exit-code > /dev/null || echo "changes_happened=true" >> $GITHUB_OUTPUT

      - name: Commit changes
        if: steps.changes.outputs.changes_happened
        run: |
          git checkout -b d-cdktf-docs-${{ github.run_id }}-${{ github.run_number }}
          git add .
          git commit -m "cdktf: update ${{ matrix.files }}"
          for i in $(seq 1 10); do  git pull origin d-cdktf-docs-${{ github.run_id }}-${{ github.run_number }} --rebase && git push origin d-cdktf-docs-${{ github.run_id }}-${{ github.run_number }} && break || sleep 15; done

  cdktfDocsCreatePR:
    needs:
      - cdktfDocsConvert
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          repository: ${{ inputs.repository }}
          fetch-depth: 0 # complete checkout

      - name: Create Pull Request
        run: |
          set -ex

          git config --global user.email "${{ inputs.gitEmail }}"
          git config --global user.name "${{ inputs.gitUser }}"
          git fetch
          git checkout d-cdktf-docs-${{ github.run_id }}-${{ github.run_number }}
          git pull origin d-cdktf-docs-${{ github.run_id }}-${{ github.run_number }} --rebase

          HAS_COMMITS=$(git log --oneline origin/main..HEAD | wc -l)
          if [ $HAS_COMMITS -eq 0 ]; then
            echo "No changes to commit"
            exit 0
          fi

          TITLE="cdktf: update documentation"
          # Close existing PRs with the same title
          for i in $(gh pr list --state open --search "$TITLE" --json number | jq -r '.[].number'); do
            gh pr close $i -d -c='Superseded by newer PR.'
          done

          gh pr create \
            --title="$TITLE" \
            --body "This PR was automatically created by the [cdktf-docs-conversion workflow](https://github.com/hashicorp/terraform-cdk/blob/main/.github/workflows/cdktf-provider-docs-rollout.yml)." \
            --base main \
            --repo ${{ inputs.repository }} \
            -f
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PR_TOKEN }}
