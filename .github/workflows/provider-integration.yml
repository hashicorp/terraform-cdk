name: Provider Integration Tests
on:
  workflow_call:
    inputs:
      skip_setup:
        description: Skip the version and build step and use parent
        default: false
        required: false
        type: boolean
      concurrency_group_prefix:
        default: pr
        required: false
        type: string
      terraform_version:
        description: Version of Terraform to use
        default: 1.6.5
        type: string
        required: false

concurrency:
  group: ${{ inputs.concurrency_group_prefix }}-provider-integration-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  prepare-provider-tests:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.build-provider-test-matrix.outputs.tests }}
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: "Add Git safe.directory" # Go 1.18+ started embedding repo info in the build and e.g. building @cdktf/hcl2json fails without this
        run: git config --global --add safe.directory /__w/terraform-cdk/terraform-cdk
      - name: ensure correct user
        run: chown -R root /__w/terraform-cdk
      # Setup caches for yarn, and go
      - name: Get cache directory paths
        id: global-cache-dir-path
        run: |
          echo "yarn=$(yarn cache dir)" >> $GITHUB_OUTPUT
          mkdir -p /usr/local/share/.cache/go
          echo "go=/usr/local/share/.cache/go" >> $GITHUB_OUTPUT
      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.yarn }}
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-provider-integration
          restore-keys: |
            yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-
            yarn-${{ runner.os }}-
      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.go }}
          key: go-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-provider-integration
          restore-keys: |
            go-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-
            go-${{ runner.os }}-
      - name: installing dependencies and build
        if: ${{ !inputs.skip_setup }}
        run: |
          yarn install --frozen-lockfile --prefer-offline
          tools/align-version.sh "-dev.$GITHUB_RUN_ID"
          yarn build
          yarn package
        env:
          GOCACHE: ${{ steps.global-cache-dir-path.outputs.go }}
      - name: install test dependencies to warm up cache for matrix jobs to use
        run: |
          cd test && yarn
      - name: Upload dist
        if: ${{ !inputs.skip_setup }}
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: dist
          path: dist
      - id: build-provider-test-matrix
        run: |
          ./tools/build-provider-test-matrix.sh

  linux_provider:
    needs: prepare-provider-tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.prepare-provider-tests.outputs.tests)}}
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"
      TERRAFORM_VERSION: ${{ inputs.terraform_version }}
      TERRAFORM_BINARY_NAME: "terraform${{ inputs.terraform_version }}"
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Download dist
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: dist
          path: dist
      - name: ensure correct user
        run: chown -R root /__w/terraform-cdk
      - name: Get cache directory paths
        id: global-cache-dir-path
        run: |
          echo "yarn=$(yarn cache dir)" >> $GITHUB_OUTPUT
          mkdir -p /usr/local/share/.cache/terraform
          echo "terraform=/usr/local/share/.cache/terraform" >> $GITHUB_OUTPUT
      # Only restoring yarn caches as the dependencies are not indiviual to each matrix job
      - uses: actions/cache/restore@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.yarn }}
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-provider-integration
          restore-keys: |
            yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-
            yarn-${{ runner.os }}-
      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.terraform }}
          # put matrix before provider-integration to not restore caches from other sibling matrix jobs
          key: terraform-${{ runner.os }}-${{ inputs.terraform_version }}-matrix-provider-integration-${{ matrix.target }}
          restore-keys: |
            terraform-${{ runner.os }}-${{ inputs.terraform_version }}-
      - name: install test dependencies
        run: cd test && yarn
      - name: integration tests
        run: cd test && npm run test:provider -- ${TEST_TARGET}
        env:
          TEST_TARGET: ${{ matrix.target }}
          NODE_OPTIONS: "--max-old-space-size=7168"
          TF_PLUGIN_CACHE_DIR: ${{ steps.global-cache-dir-path.outputs.terraform }}

  windows_provider:
    needs: prepare-provider-tests
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.prepare-provider-tests.outputs.tests)}}
    env:
      CHECKPOINT_DISABLE: "1"
      TERRAFORM_VERSION: ${{ inputs.terraform_version }}
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1
        with:
          terraform_wrapper: false
          terraform_version: ${{ inputs.terraform_version }}
      - name: Install pipenv
        run: pip install pipenv
      - name: Install Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: 1.16.x
      - name: Download dist
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: dist
          path: dist
      - name: Get cache directory paths
        id: global-cache-dir-path
        shell: bash
        run: |
          echo "yarn=$(yarn cache dir)" >> $GITHUB_OUTPUT
          mkdir -p /usr/local/share/.cache/terraform
          echo "terraform=/usr/local/share/.cache/terraform" >> $GITHUB_OUTPUT
      # Only restoring yarn caches to save available cache storage size
      - uses: actions/cache/restore@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.yarn }}
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-provider-integration
          restore-keys: |
            yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-
            yarn-${{ runner.os }}-
      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ${{ steps.global-cache-dir-path.outputs.terraform }}
          # put matrix before provider-integration to not restore caches from other sibling matrix jobs
          key: terraform-${{ runner.os }}-${{ matrix.terraform }}-matrix-provider-integration-${{ matrix.target }}
          restore-keys: |
            terraform-${{ runner.os }}-${{ matrix.terraform }}-
      # tmp fix for https://github.com/npm/cli/issues/4980
      - name: update npm
        run: npm install -g npm@8.12.1
      - name: install test dependencies
        run: cd test && yarn
      - name: integration tests
        run: cd test && ./provider-tests/test-provider.bat ${env:TEST_TARGET}
        env:
          TEST_TARGET: ${{ matrix.target }}
          NODE_OPTIONS: "--max-old-space-size=7168"
          TF_PLUGIN_CACHE_DIR: ${{ steps.global-cache-dir-path.outputs.terraform }}
