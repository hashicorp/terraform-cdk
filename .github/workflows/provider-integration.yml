name: Provider Integration Tests
on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "packages/@cdktf/provider-generator/**"
      - "test/provider-tests/**"

concurrency:
  group: provider-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  prepare-provider-tests:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.build-provider-test-matrix.outputs.tests }}
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: global-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: global-cache # use this to check for `cache-hit` (`steps.global-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.global-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: ensure all plugin directories exist
        run: |
          mkdir -p ${{ steps.global-cache-dir-path.outputs.dir }}/terraform-plugins
          mkdir -p ${{ steps.global-cache-dir-path.outputs.dir }}/go-cache
      - name: installing dependencies and build
        run: |
          yarn install
          tools/align-version.sh "-dev.$GITHUB_RUN_ID"
          yarn build
          yarn package
        env:
          TERRAFORM_BINARY_NAME: "terraform${{ inputs.terraform_version }}"
          TF_PLUGIN_CACHE_DIR: ${{ steps.global-cache-dir-path.outputs.dir }}/terraform-plugins
          GOCACHE: ${{ steps.global-cache-dir-path.outputs.dir }}/go-cache
      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
      - id: build-provider-test-matrix
        run: |
          ./tools/build-provider-test-matrix.sh

  linux_provider:
    needs: prepare-provider-tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.prepare-provider-tests.outputs.tests)}}
    container:
      image: docker.mirror.hashicorp.services/hashicorp/jsii-terraform
    env:
      CHECKPOINT_DISABLE: "1"
      TERRAFORM_VERSION: ${{ matrix.terraform }}
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v2
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: install test dependencies
        run: cd test && yarn
      - name: integration tests
        run: cd test && npm run test:provider -- ${TEST_TARGET}
        env:
          TEST_TARGET: ${{ matrix.target }}
          NODE_OPTIONS: "--max-old-space-size=7168"
          TF_PLUGIN_CACHE_DIR: ${{ steps.global-cache-dir-path.outputs.dir }}/terraform-plugins
          GOCACHE: ${{ steps.global-cache-dir-path.outputs.dir }}/go-cache

  windows_provider:
    needs: prepare-provider-tests
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.prepare-provider-tests.outputs.tests)}}
    env:
      CHECKPOINT_DISABLE: "1"
      TERRAFORM_VERSION: ${{ matrix.terraform }}
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v2
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: ${{ matrix.terraform }}
      - name: Install pipenv
        run: pip install pipenv
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      # tmp fix for https://github.com/npm/cli/issues/4980
      - name: update npm
        run: npm install -g npm@8.12.1
      - name: install test dependencies
        run: cd test && yarn
      - name: integration tests
        run: cd test && ./provider-tests/test-provider.bat ${env:TEST_TARGET}
        env:
          TEST_TARGET: ${{ matrix.target }}
          NODE_OPTIONS: "--max-old-space-size=7168"
          TF_PLUGIN_CACHE_DIR: ${{ steps.global-cache-dir-path.outputs.dir }}/terraform-plugins
          GOCACHE: ${{ steps.global-cache-dir-path.outputs.dir }}/go-cache
